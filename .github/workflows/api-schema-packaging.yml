name: API Schema Packaging and Publishing

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Run the build with tmate debugging enabled
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

env:
  ARTIFACTS_API_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: '{"endpointCredentials": [{"endpoint": "${{ vars.AZURE_ARTIFACTS_FEED_URL }}","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'

jobs:
  run-metaed-project:
    name: Run MetaEd Project
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run MetaEd Project
        run: ./eng/ApiSchema/build.ps1 RunMetaEd

      - name: Upload MetaEdOutput as Artifact
        if: success()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5  
        with:
          name: "MetaEdOutput"
          path: ./MetaEdOutput
          if-no-files-found: error
          retention-days: 5

  api-schema-packaging:
    name: API Schema Packaging
    runs-on: ubuntu-latest
    needs: run-metaed-project
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: MetaEdOutput
          path: ./MetaEdOutput

      - name: Display structure of downloaded files
        run: ls -R ./

      - name: Download and Unzip files
        run: ./eng/ApiSchema/build.ps1 Unzip

      - name: Move MetaEd ApiSchema Files
        run: ./eng/ApiSchema/build.ps1 MoveMetaEdSchema

      - name: Run Build
        run: ./eng/ApiSchema/build.ps1 Build
      
      - name: API Schema Package - Create NuGet File
        run: ./eng/ApiSchema/build.ps1 Package "1.0.${{ github.run_number }}"
      
      - name: Publish Package
        run: ./eng/ApiSchema/build.ps1 BuildAndPublish "1.0.${{ github.run_number }}"

      - name: Upload Package as Artifact
        if: success()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5  
        with:
          name: "EdFi.ApiSchema-NuGet.1.0.${{ github.run_number }}"
          path: ./eng/ApiSchema/*.nupkg
          if-no-files-found: error
          retention-days: 30

  publish-package:
    name: Publish NuGet Package
    needs: api-schema-packaging
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: EdFi.ApiSchema-NuGet.1.0.${{ github.run_number }}

      - name: Install-credential-handler
        run: iex "& { $(irm https://aka.ms/install-artifacts-credprovider.ps1) } -AddNetfx"

      - name: Push Package to Azure Artifacts
        run: |
         $packageDir = "/home/runner/work/MetaEd-js/MetaEd-js"
         $artifacts = (Get-ChildItem -Path $packageDir -Name -Include *.nupkg)
         
          echo "Artifacts List"
          echo $artifacts

         $arguments = @{
           NuGetApiKey = "${{ env.ARTIFACTS_API_KEY }}"
           EdFiNuGetFeed = "${{ env.ARTIFACTS_FEED_URL }}"
         }

         if ($artifacts.Count -eq 0) {
          throw "Cannot find a NuGet package $packageDir"
         } 
         else {
            $artifacts | ForEach-Object {
                echo "Package Files"             
                $arguments.PackageFile = Join-Path -Path $packageDir -ChildPath $_
                echo $arguments.PackageFile
                ./eng/ApiSchema/build.ps1 PushPackage @arguments
              }
         }

         
