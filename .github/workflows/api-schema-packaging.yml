name: API Schema Packaging and Publishing

on: 
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Run the build with tmate debugging enabled
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

env:
  ARTIFACTS_API_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}

jobs:
  api-schema-packaging:
    name: API Schema Packaging
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Download and Unzip files
        run: ./eng/ApiSchema/build.ps1 Unzip

      - name: Run MetaEd
        run: ./eng/ApiSchema/build.ps1 Invoke-RunMetaEd

      - name: Run Build
        run: ./eng/ApiSchema/build.ps1 Build
      
      - name: API Schema Package - Create NuGet File
        run: ./eng/ApiSchema/build.ps1 Package "1.0.${{ github.run_number }}"
      
      - name: Publish Package
        run: ./eng/ApiSchema/build.ps1 BuildAndPublish "1.0.${{ github.run_number }}"

      - name: Upload Package as Artifact
        if: success()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0  
        with:
          name: "EdFi.ApiSchema-NuGet.1.0.${{ github.run_number }}"
          path: ./eng/ApiSchema/*.nupkg
          if-no-files-found: error
          retention-days: 30

  publish-package:
    name: Publish NuGet Package
    needs: api-schema-packaging
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Get Artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 #4.1.1
        with:
          name: EdFi.ApiSchema-NuGet.1.0.${{ github.run_number }}

      - name: Install-credential-handler
        run: iex "& { $(irm https://aka.ms/install-artifacts-credprovider.ps1) } -AddNetfx"

      - name: Push Package to Azure Artifacts
        run: |
         $packageDir = "./eng/ApiSchema"
         $artifacts = (Get-ChildItem -Path $packageDir -Name -Include *.nupkg)
         
         $arguments = @{
           NuGetApiKey = "${{ env.ARTIFACTS_API_KEY }}"
         }

         $artifacts | ForEach-Object {
             $arguments.PackageFile = Join-Path -Path $packageDir -ChildPath $_
            ./eng/ApiSchema/build.ps1 PushPackage @arguments
          }    
