# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: API Schema Packaging and Publishing

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Run the build with tmate debugging enabled
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

permissions: read-all

env:
  ARTIFACTS_API_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: '{"endpointCredentials": [{"endpoint": "${{ vars.AZURE_ARTIFACTS_FEED_URL }}","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  HEAD_REF:  ${{ GITHUB.HEAD_REF }}
  REF_NAME:  ${{ GITHUB.REF_NAME }}

jobs:
  run-metaed-project:
    if: github.ref_protected # Don't allow this to run on PRs
    name: Run MetaEd Project 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [ "Core", "TPDM", "Homograph", "Sample"]
        ds:
        - version: 'DS-3.3.1-b'
          short-version: '33'
          project-version: '3.3.1-b'
          project-description: 'Latest Ed-Fi Data Model v3.3b'
          tpdm-tag-name: 'Data-Standard-v3.3.1-b'
          sample-tag-name: 'v5.4-patch1'
          core-path: 'MetaEd-js/node_modules/@edfi/ed-fi-model-3.3b'
          tpdm-path: 'Ed-Fi-TPDM-Model'
          sample-path: 'Ed-Fi-ODS-Implementation/Extensions/Sample/SampleMetaEd'
          homograph-path: 'Ed-Fi-ODS-Implementation/Extensions/Homograph/HomographMetaEd'
        - version: 'DS-4.0.0'
          short-version: '40'
          project-version: '4.0.0'
          project-description: 'The Ed-Fi Data Model 4.0'
          tpdm-tag-name: 'Data-Standard-v4.0.0-a'
          sample-tag-name: 'v7.3-patch1'
          core-path: 'MetaEd-js/node_modules/@edfi/ed-fi-model-4.0'
          tpdm-path: 'Ed-Fi-TPDM-Model'
          sample-path: 'Ed-Fi-ODS-Implementation/Extensions/4.0.0/Sample'
          homograph-path: 'Ed-Fi-ODS-Implementation/Extensions/4.0.0/Homograph'
        - version: 'DS-5.2.0'
          short-version: '52'
          project-version: '5.2.0'
          project-description: 'The Ed-Fi Data Standard v5.2.0'
          tpdm-tag-name: 'Data-Standard-v5.2.0'
          sample-tag-name: 'main'
          core-path: 'MetaEd-js/node_modules/@edfi/ed-fi-model-5.2'
          tpdm-path: 'Ed-Fi-TPDM-Model'
          sample-path: 'Ed-Fi-ODS-Implementation/Extensions/Sample/SampleMetaEd'
          homograph-path: 'Ed-Fi-ODS-Implementation/Extensions/Homograph/HomographMetaEd'
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout MetaEd-js
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: Ed-Fi-Alliance-OSS/MetaEd-js
          path: MetaEd-js/
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Checkout Ed-Fi-TPDM-Model (for TPDM only)
        if: matrix.config == 'tpdm'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: Ed-Fi-Closed/Ed-Fi-TPDM-Model
          path: Ed-Fi-TPDM-Model/
          ref: ${{ matrix.ds.tpdm-tag-name }}
          token: ${{ secrets.EDFI_BUILD_AGENT_PAT }}

      - name: Checkout Ed-Fi-ODS-Implementation (for Homograph and Sample only)
        if: matrix.config == 'Homograph'  || matrix.config == 'Sample'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
          ref: ${{ matrix.ds.sample-tag-name }}

      - name: Create MetaEdConfig
        working-directory: ./MetaEd-js/   
        env:
          CORE_PATH: ${{ matrix.ds.core-path }}
          TPDM_PATH: ${{ matrix.ds.tpdm-path }}
          SAMPLE_PATH: ${{ matrix.ds.sample-path }}
          HOMOGRAPH_PATH: ${{ matrix.ds.homograph-path }}
        run: ./eng/ApiSchema/CreateMetaEdConfig.ps1 -Workspace ${{ github.workspace }} -TechnologyVersion "7.2.0" -ProjectVersion ${{ matrix.ds.project-version }} -ProjectDescription "${{ matrix.ds.project-description }}" -CoreProjectPath "${{ matrix.ds.core-path }}" -ExtensionProjectPath ([System.Environment]::GetEnvironmentVariable('${{ matrix.config }}_PATH'.ToUpper())) -ExtensionProjectName ${{ matrix.config }}
        shell: pwsh

      - name: Print the created MetaEd config
        shell: pwsh
        run: |
          $configFilePath = "${{ github.workspace }}/MetaEd-js/eng/ApiSchema/MetaEdConfig.json"
          
          # Check if the file exists
          if (Test-Path $configFilePath) {
              # Read the JSON file content
              $jsonContent = Get-Content -Path $configFilePath | Out-String
              # Print the JSON content
              Write-Host "MetaEd Configuration JSON Content:"
              Write-Host $jsonContent
          } else {
              Write-Host "MetaEd configuration file does not exist at: $configFilePath"
              exit 1
          }

      - name: Run MetaEd Project
        working-directory: ./MetaEd-js/      
        run: ./eng/ApiSchema/build.ps1 -Command RunMetaEd  -SchemaPackagingConfigFile "${{ github.workspace }}/MetaEd-js/eng/ApiSchema/MetaEdConfig.json"

      - name: Upload MetaEdOutput as Artifact
        if: success()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5  
        with:
          name: MetaEdOutput-${{ matrix.config }}-${{ matrix.ds.version }}
          path: ${{ github.workspace }}/MetaEd-js/MetaEdOutput/**/*.* 
          if-no-files-found: error
          retention-days: 5

  api-schema-packaging:
    name: API Schema Packaging
    runs-on: ubuntu-latest
    needs: run-metaed-project
    strategy:
      matrix:
        config: [ "Core", "TPDM", "Homograph", "Sample"]
        ds:
        - version: 'DS-3.3.1-b'
          short-version: '33'
        - version: 'DS-4.0.0'
          short-version: '40'
        - version: 'DS-5.2.0'
          short-version: '52'
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout MetaEd-js
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: Ed-Fi-Closed/MetaEd-js
          path: MetaEd-js/
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Get Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: MetaEdOutput-${{ matrix.config }}-${{ matrix.ds.version }}
          path: ./MetaEd-js/MetaEdOutput

      - name: Move MetaEd ApiSchema Files
        working-directory: ./MetaEd-js/
        run: ./eng/ApiSchema/build.ps1 -Command MoveMetaEdSchema -ExtensionName "${{ matrix.config }}"

      - name: Update Marker.js File
        if: matrix.config == 'Homograph'  || matrix.config == 'Sample' || matrix.config == 'TPDM'
        shell: pwsh
        run: |
          $filePath = "${{ github.workspace }}/MetaEd-js/eng/ApiSchema/Marker.cs"
          $fileContent = Get-Content -Path $filePath -Raw
          $updatedContent = $fileContent -replace "EdFi.DataStandard52.ApiSchema", "EdFi.${{ matrix.config }}.ApiSchema"
          Set-Content -Path $filePath -Value $updatedContent
          Write-Output $updatedContent

      - name: Run Build
        working-directory: ./MetaEd-js/
        run: ./eng/ApiSchema/build.ps1 Build -Version "1.0.${{ github.run_number }}" -ExtensionName "${{ matrix.config }}"

      - name: API Schema Package - Create NuGet File
        working-directory: ./MetaEd-js/      
        env:
          DataStandardVersion: '${{ matrix.ds.short-version }}'
        run: ./eng/ApiSchema/build.ps1 Package -Version "1.0.${{ github.run_number }}" -ExtensionName "${{ matrix.config }}"

      - name: Publish Package
        working-directory: ./MetaEd-js/
        env:
          DataStandardVersion: '${{ matrix.ds.short-version }}'
        run: ./eng/ApiSchema/build.ps1 BuildAndPublish -Version "1.0.${{ github.run_number }}" -ExtensionName "${{ matrix.config }}"

      - name: Upload Package as Artifact
        if: success()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5  
        with:
          name: "EdFi.ApiSchema-NuGet-${{ matrix.config }}-${{ matrix.ds.version }}-1.0.${{ github.run_number }}"
          path: ./MetaEd-js/eng/ApiSchema/*.nupkg
          if-no-files-found: error
          retention-days: 30

  publish-package:
    name: Publish NuGet Package
    needs: api-schema-packaging
    strategy:
      matrix:
        config: [ "Core", "TPDM", "Homograph", "Sample"]
        ds-version: ['DS-3.3.1-b', 'DS-4.0.0', 'DS-5.2.0']
        exclude:
        - config: "TPDM"
          ds-version: 'DS-3.3.1-b'
        - config: "TPDM"
          ds-version: 'DS-4.0.0'
        - config: "Homograph"
          ds-version: 'DS-3.3.1-b'
        - config: "Homograph"
          ds-version: 'DS-4.0.0'  
        - config: "Sample"
          ds-version: 'DS-3.3.1-b'
        - config: "Sample"
          ds-version: 'DS-4.0.0'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: EdFi.ApiSchema-NuGet-${{ matrix.config }}-${{ matrix.ds-version }}-1.0.${{ github.run_number }}
          path: ./nupkgs

      - name: Check for Azure token
        if: ${{ env.ARTIFACTS_API_KEY == '' }}
        run: | 
          echo "::error::Missing Azure Token"
          exit 1 

      - name: Push Package to Azure Artifacts
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile "nuget.exe"

          $nupkgFiles = Get-ChildItem -Path "./nupkgs" -Filter *.nupkg
          if (-not $nupkgFiles) {
            Write-Error "No .nupkg files found"
            exit 1
          }

          foreach ($pkg in $nupkgFiles) {
            Write-Host "Pushing $($pkg.FullName)..."
            ./nuget.exe push $pkg.FullName `
              -Source "${{ env.ARTIFACTS_FEED_URL }}" `
              -ApiKey VSTS `
              -NonInteractive `
              -SkipDuplicate
          }
