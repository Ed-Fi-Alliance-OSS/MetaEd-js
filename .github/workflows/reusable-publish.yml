name: Reusable Publish
on:
  workflow_call:
    inputs:
      bump:
        description: The version to bump. Choices are 'major', 'minor', 'patch', or 'dev'.
        required: true
        type: string
    secrets:
      EDFI_BUILD_AGENT_PAT:
        required: true
      EDFIBUILDAGENT_PRIVATE_KEY:
        required: true
      EDFIBUILDAGENT_PASSPHRASE:
        required: true
      NPM_MYGET_ACCESS_TOKEN:
        required: true     

jobs:
  publish:
    name: Publish

    runs-on: ubuntu-20.04
    
    steps:
      - name: Set up Node
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # v2.5.1
        with:
          node-version: '16'
          check-latest: true
          registry-url: 'https://www.myget.org/F/ed-fi/npm/'
        
      - name: Checkout code   
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
        with:
          token: ${{ secrets.EDFI_BUILD_AGENT_PAT }}

      - name: Install
        run: yarn install

      - name: Build
        run: yarn build
      
      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@cb4264d3319acaa2bea23d51ef67f80b4f775013 # v4.1.0
        with:
          gpg_private_key: ${{ secrets.EDFIBUILDAGENT_PRIVATE_KEY }}
          passphrase: ${{ secrets.EDFIBUILDAGENT_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Git setup
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_MYGET_ACCESS_TOKEN }}
        run: |
          git config user.name "${{ steps.import-gpg.outputs.name }}"
          git config user.email "${{ steps.import-gpg.outputs.email }}"

      - name: Publish dev prerelease
        if: inputs.bump == 'dev'
        run: |
          yarn lerna version prerelease --exact --force-publish=* --force-git-tag --sign-git-commit --yes --preid dev
          yarn lerna publish from-git --yes --dist-tag dev --no-verify-access

      - name: Publish release
        if: inputs.bump != 'dev'
        run: |
          yarn lerna version ${{ inputs.bump }} --exact --force-publish=* --force-git-tag --sign-git-commit --yes
          yarn lerna publish from-git --yes --no-verify-access
