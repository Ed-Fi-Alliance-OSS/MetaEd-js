name: Reusable Publish
on:
  workflow_call:
    inputs:
      bump:
        description: The version to bump. Choices are 'major', 'minor', 'patch', or 'dev'. If retrying, use 'none' instead.
        required: true
        type: string

      retry:
        description: Retry the publish without bumping the version again.
        default: false
        type: boolean

      debug_enabled:
        description: Run the build with tmate debugging enabled. Choices are 'true' or 'false' # https://github.com/actions/runner/issues/1483
        default: "false"
        type: string

    secrets:
      EDFI_BUILD_AGENT_PAT:
        required: true
      EDFIBUILDAGENT_PRIVATE_KEY:
        required: true
      EDFIBUILDAGENT_PASSPHRASE:
        required: true
      AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN :
        required: true

env:
  NPM_REGISTRY: //pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/npm/registry/

jobs:
  publish:
    name: Publish

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
        with:
          token: ${{ secrets.EDFI_BUILD_AGENT_PAT }}

      - name: Set up Node
        uses: actions/setup-node@17f8bd926464a1afa4c6a11669539e9c1ba77048 # v3.2.0
        with:
          node-version: "16"
          check-latest: true
          cache-dependency-path: "**/package-lock.json"

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      #- name: Import GPG key
      #  id: import-gpg
      #  uses: crazy-max/ghaction-import-gpg@c8bb57c57e8df1be8c73ff3d59deab1dbc00e0d1 # v5.1.0
      #  with:
      #    gpg_private_key: ${{ secrets.EDFIBUILDAGENT_PRIVATE_KEY }}
      #    passphrase: ${{ secrets.EDFIBUILDAGENT_PASSPHRASE }}
      #    git_user_signingkey: true
      #    git_commit_gpgsign: true
#
      #- name: Git setup
      #  run: |
      #    git config user.name "${{ steps.import-gpg.outputs.name }}"
      #    git config user.email "${{ steps.import-gpg.outputs.email }}"

      - name: Create user .npmrc for Azure Artifacts publishing
        env:
          NODE_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN  }}
        run: |
          echo "Configuring user .npmrc for ${{ env.NPM_REGISTRY }}"
          set +x  # disable echo to shell so that the base64-encoded API key never escapes into the log.
          # Create the user .npmrc file with proper settings
          API_KEY=`echo -n "${{ env.NODE_AUTH_TOKEN }}" | base64`
          touch $HOME/.npmrc
          echo "; begin auth token" >> $HOME/.npmrc
          echo ${{ env.NPM_REGISTRY }}:username=ed-fi-alliance >> $HOME/.npmrc
          echo ${{ env.NPM_REGISTRY }}:_password=$API_KEY >> $HOME/.npmrc
          echo ${{ env.NPM_REGISTRY }}:email=techsupport@ed-fi.org >> $HOME/.npmrc
          echo "; end auth token" >> $HOME/.npmrc

      #- name: Lerna version dev prerelease
      #  if: inputs.bump == 'dev' && inputs.retry == false
      #  run: npx lerna version prerelease --exact --force-publish=* --force-git-tag --sign-git-commit --yes --preid dev
#
      #- name: Lerna version release
      #  if: inputs.bump != 'dev' && inputs.retry == false
      #  run: npx lerna version ${{ inputs.bump }} --exact --force-publish=* --force-git-tag --sign-git-commit --yes

      - name: temporary
        run: cat $HOME/.npmrc | base64 -w 0

      - name: Lerna publish
        if: inputs.retry == false
        env:
          NODE_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN  }}
        # run: npx lerna publish from-git --yes --pre-dist-tag dev
        # Should only be "dev" if this is a dev release...
        run: npm publish --workspaces --tag dev

      - name: Lerna retry publish
        if: inputs.retry == true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN  }}
        run: |
          npx lerna publish from-package --yes --pre-dist-tag dev

      # Enable tmate debugging if the input option was provided (https://github.com/marketplace/actions/debugging-with-tmate)
      - name: Setup tmate session
        if: always() && inputs.debug_enabled == 'true'
        uses: mxschmitt/action-tmate@28f608baaa037465aa887c21a7924e9e6b66a9e0 # v3.13
        timeout-minutes: 10
