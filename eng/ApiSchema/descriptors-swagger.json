{
  "openapi": "3.0.1",
  "info": {
    "title": "Ed-Fi Operational Data Store API",
    "description": "The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. \n***\n > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.* \n***\n",
    "version": "3"
  },
  "servers": [
    {
      "url": "HOST_URL/data/v3"
    }
  ],
  "paths": {
    "/ed-fi/absenceEventCategoryDescriptors": {
      "get": {
        "tags": [
          "absenceEventCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAbsenceEventCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_absenceEventCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "absenceEventCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAbsenceEventCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"absenceEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_absenceEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "absenceEventCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/absenceEventCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "absenceEventCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAbsenceEventCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_absenceEventCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "absenceEventCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAbsenceEventCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"absenceEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_absenceEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "absenceEventCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "absenceEventCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAbsenceEventCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/academicHonorCategoryDescriptors": {
      "get": {
        "tags": [
          "academicHonorCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAcademicHonorCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_academicHonorCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "academicHonorCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAcademicHonorCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"academicHonorCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_academicHonorCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "academicHonorCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/academicHonorCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "academicHonorCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAcademicHonorCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_academicHonorCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "academicHonorCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAcademicHonorCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"academicHonorCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_academicHonorCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "academicHonorCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "academicHonorCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAcademicHonorCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/academicSubjectDescriptors": {
      "get": {
        "tags": [
          "academicSubjectDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAcademicSubjectDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_academicSubjectDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "academicSubjectDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAcademicSubjectDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"academicSubjectDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_academicSubjectDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "academicSubjectDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/academicSubjectDescriptors/{id}": {
      "get": {
        "tags": [
          "academicSubjectDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAcademicSubjectDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_academicSubjectDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "academicSubjectDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAcademicSubjectDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"academicSubjectDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_academicSubjectDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "academicSubjectDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "academicSubjectDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAcademicSubjectDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accommodationDescriptors": {
      "get": {
        "tags": [
          "accommodationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAccommodationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_accommodationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "accommodationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAccommodationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"accommodationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_accommodationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "accommodationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accommodationDescriptors/{id}": {
      "get": {
        "tags": [
          "accommodationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAccommodationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_accommodationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "accommodationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAccommodationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"accommodationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_accommodationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "accommodationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "accommodationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAccommodationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accountTypeDescriptors": {
      "get": {
        "tags": [
          "accountTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAccountTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_accountTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "accountTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAccountTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"accountTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_accountTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "accountTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accountTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "accountTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAccountTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_accountTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "accountTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAccountTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"accountTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_accountTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "accountTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "accountTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAccountTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/achievementCategoryDescriptors": {
      "get": {
        "tags": [
          "achievementCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAchievementCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_achievementCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "achievementCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAchievementCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"achievementCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_achievementCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "achievementCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/achievementCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "achievementCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAchievementCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_achievementCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "achievementCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAchievementCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"achievementCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_achievementCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "achievementCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "achievementCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAchievementCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/additionalCreditTypeDescriptors": {
      "get": {
        "tags": [
          "additionalCreditTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAdditionalCreditTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_additionalCreditTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "additionalCreditTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAdditionalCreditTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"additionalCreditTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_additionalCreditTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "additionalCreditTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/additionalCreditTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "additionalCreditTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAdditionalCreditTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_additionalCreditTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "additionalCreditTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAdditionalCreditTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"additionalCreditTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_additionalCreditTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "additionalCreditTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "additionalCreditTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAdditionalCreditTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/addressTypeDescriptors": {
      "get": {
        "tags": [
          "addressTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAddressTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_addressTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "addressTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAddressTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"addressTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_addressTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "addressTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/addressTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "addressTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAddressTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_addressTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "addressTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAddressTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"addressTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_addressTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "addressTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "addressTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAddressTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/administrationEnvironmentDescriptors": {
      "get": {
        "tags": [
          "administrationEnvironmentDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAdministrationEnvironmentDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_administrationEnvironmentDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "administrationEnvironmentDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAdministrationEnvironmentDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"administrationEnvironmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_administrationEnvironmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "administrationEnvironmentDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/administrationEnvironmentDescriptors/{id}": {
      "get": {
        "tags": [
          "administrationEnvironmentDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAdministrationEnvironmentDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_administrationEnvironmentDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "administrationEnvironmentDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAdministrationEnvironmentDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"administrationEnvironmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_administrationEnvironmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "administrationEnvironmentDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "administrationEnvironmentDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAdministrationEnvironmentDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/administrativeFundingControlDescriptors": {
      "get": {
        "tags": [
          "administrativeFundingControlDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAdministrativeFundingControlDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_administrativeFundingControlDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "administrativeFundingControlDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAdministrativeFundingControlDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"administrativeFundingControlDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_administrativeFundingControlDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "administrativeFundingControlDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/administrativeFundingControlDescriptors/{id}": {
      "get": {
        "tags": [
          "administrativeFundingControlDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAdministrativeFundingControlDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_administrativeFundingControlDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "administrativeFundingControlDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAdministrativeFundingControlDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"administrativeFundingControlDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_administrativeFundingControlDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "administrativeFundingControlDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "administrativeFundingControlDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAdministrativeFundingControlDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/ancestryEthnicOriginDescriptors": {
      "get": {
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAncestryEthnicOriginDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_ancestryEthnicOriginDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAncestryEthnicOriginDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"ancestryEthnicOriginDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_ancestryEthnicOriginDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "ancestryEthnicOriginDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/ancestryEthnicOriginDescriptors/{id}": {
      "get": {
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAncestryEthnicOriginDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_ancestryEthnicOriginDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAncestryEthnicOriginDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"ancestryEthnicOriginDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_ancestryEthnicOriginDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "ancestryEthnicOriginDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAncestryEthnicOriginDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentCategoryDescriptors": {
      "get": {
        "tags": [
          "assessmentCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "assessmentCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentIdentificationSystemDescriptors": {
      "get": {
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentIdentificationSystemDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentIdentificationSystemDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentIdentificationSystemDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentIdentificationSystemDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentIdentificationSystemDescriptors/{id}": {
      "get": {
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentIdentificationSystemDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentIdentificationSystemDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentIdentificationSystemDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentIdentificationSystemDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentIdentificationSystemDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItemCategoryDescriptors": {
      "get": {
        "tags": [
          "assessmentItemCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentItemCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentItemCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentItemCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentItemCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentItemCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentItemCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentItemCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItemCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "assessmentItemCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentItemCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentItemCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentItemCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentItemCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentItemCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentItemCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentItemCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentItemCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentItemCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItemResultDescriptors": {
      "get": {
        "tags": [
          "assessmentItemResultDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentItemResultDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentItemResultDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentItemResultDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentItemResultDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentItemResultDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentItemResultDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentItemResultDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItemResultDescriptors/{id}": {
      "get": {
        "tags": [
          "assessmentItemResultDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentItemResultDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentItemResultDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentItemResultDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentItemResultDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentItemResultDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentItemResultDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentItemResultDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentItemResultDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentItemResultDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentPeriodDescriptors": {
      "get": {
        "tags": [
          "assessmentPeriodDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentPeriodDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentPeriodDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentPeriodDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentPeriodDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentPeriodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentPeriodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentPeriodDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentPeriodDescriptors/{id}": {
      "get": {
        "tags": [
          "assessmentPeriodDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentPeriodDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentPeriodDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentPeriodDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentPeriodDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentPeriodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentPeriodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentPeriodDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentPeriodDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentPeriodDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentReportingMethodDescriptors": {
      "get": {
        "tags": [
          "assessmentReportingMethodDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentReportingMethodDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentReportingMethodDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentReportingMethodDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentReportingMethodDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentReportingMethodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentReportingMethodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentReportingMethodDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentReportingMethodDescriptors/{id}": {
      "get": {
        "tags": [
          "assessmentReportingMethodDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentReportingMethodDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentReportingMethodDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentReportingMethodDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentReportingMethodDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentReportingMethodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentReportingMethodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentReportingMethodDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentReportingMethodDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentReportingMethodDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assignmentLateStatusDescriptors": {
      "get": {
        "tags": [
          "assignmentLateStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssignmentLateStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assignmentLateStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assignmentLateStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssignmentLateStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"assignmentLateStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assignmentLateStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assignmentLateStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assignmentLateStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "assignmentLateStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssignmentLateStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assignmentLateStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assignmentLateStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssignmentLateStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assignmentLateStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assignmentLateStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "assignmentLateStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assignmentLateStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssignmentLateStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/attemptStatusDescriptors": {
      "get": {
        "tags": [
          "attemptStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAttemptStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_attemptStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "attemptStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAttemptStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"attemptStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_attemptStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "attemptStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/attemptStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "attemptStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAttemptStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_attemptStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "attemptStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAttemptStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"attemptStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_attemptStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "attemptStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "attemptStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAttemptStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/attendanceEventCategoryDescriptors": {
      "get": {
        "tags": [
          "attendanceEventCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAttendanceEventCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_attendanceEventCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "attendanceEventCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAttendanceEventCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"attendanceEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_attendanceEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "attendanceEventCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/attendanceEventCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "attendanceEventCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAttendanceEventCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_attendanceEventCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "attendanceEventCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAttendanceEventCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"attendanceEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_attendanceEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "attendanceEventCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "attendanceEventCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAttendanceEventCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/barrierToInternetAccessInResidenceDescriptors": {
      "get": {
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBarrierToInternetAccessInResidenceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_barrierToInternetAccessInResidenceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBarrierToInternetAccessInResidenceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"barrierToInternetAccessInResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_barrierToInternetAccessInResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "barrierToInternetAccessInResidenceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/barrierToInternetAccessInResidenceDescriptors/{id}": {
      "get": {
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBarrierToInternetAccessInResidenceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_barrierToInternetAccessInResidenceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBarrierToInternetAccessInResidenceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"barrierToInternetAccessInResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_barrierToInternetAccessInResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "barrierToInternetAccessInResidenceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteBarrierToInternetAccessInResidenceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/behaviorDescriptors": {
      "get": {
        "tags": [
          "behaviorDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBehaviorDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_behaviorDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "behaviorDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBehaviorDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"behaviorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_behaviorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "behaviorDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/behaviorDescriptors/{id}": {
      "get": {
        "tags": [
          "behaviorDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBehaviorDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_behaviorDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "behaviorDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBehaviorDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"behaviorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_behaviorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "behaviorDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "behaviorDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteBehaviorDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/busRouteDescriptors": {
      "get": {
        "tags": [
          "busRouteDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBusRouteDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_busRouteDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "busRouteDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBusRouteDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"busRouteDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_busRouteDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "busRouteDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/busRouteDescriptors/{id}": {
      "get": {
        "tags": [
          "busRouteDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBusRouteDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_busRouteDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "busRouteDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBusRouteDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"busRouteDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_busRouteDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "busRouteDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "busRouteDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteBusRouteDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarEventDescriptors": {
      "get": {
        "tags": [
          "calendarEventDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendarEventDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_calendarEventDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "calendarEventDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendarEventDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"calendarEventDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendarEventDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendarEventDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarEventDescriptors/{id}": {
      "get": {
        "tags": [
          "calendarEventDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarEventDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_calendarEventDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "calendarEventDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendarEventDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"calendarEventDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendarEventDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendarEventDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "calendarEventDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarEventDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarTypeDescriptors": {
      "get": {
        "tags": [
          "calendarTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendarTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_calendarTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "calendarTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendarTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"calendarTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendarTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendarTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "calendarTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_calendarTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "calendarTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendarTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"calendarTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendarTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendarTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "calendarTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/careerPathwayDescriptors": {
      "get": {
        "tags": [
          "careerPathwayDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCareerPathwayDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_careerPathwayDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "careerPathwayDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCareerPathwayDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"careerPathwayDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_careerPathwayDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "careerPathwayDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/careerPathwayDescriptors/{id}": {
      "get": {
        "tags": [
          "careerPathwayDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCareerPathwayDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_careerPathwayDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "careerPathwayDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCareerPathwayDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"careerPathwayDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_careerPathwayDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "careerPathwayDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "careerPathwayDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCareerPathwayDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/charterApprovalAgencyTypeDescriptors": {
      "get": {
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCharterApprovalAgencyTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_charterApprovalAgencyTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCharterApprovalAgencyTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"charterApprovalAgencyTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_charterApprovalAgencyTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "charterApprovalAgencyTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/charterApprovalAgencyTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCharterApprovalAgencyTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_charterApprovalAgencyTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCharterApprovalAgencyTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"charterApprovalAgencyTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_charterApprovalAgencyTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "charterApprovalAgencyTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCharterApprovalAgencyTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/charterStatusDescriptors": {
      "get": {
        "tags": [
          "charterStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCharterStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_charterStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "charterStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCharterStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"charterStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_charterStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "charterStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/charterStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "charterStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCharterStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_charterStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "charterStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCharterStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"charterStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_charterStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "charterStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "charterStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCharterStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/citizenshipStatusDescriptors": {
      "get": {
        "tags": [
          "citizenshipStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCitizenshipStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_citizenshipStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "citizenshipStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCitizenshipStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"citizenshipStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_citizenshipStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "citizenshipStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/citizenshipStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "citizenshipStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCitizenshipStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_citizenshipStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "citizenshipStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCitizenshipStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"citizenshipStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_citizenshipStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "citizenshipStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "citizenshipStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCitizenshipStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/classroomPositionDescriptors": {
      "get": {
        "tags": [
          "classroomPositionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getClassroomPositionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_classroomPositionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "classroomPositionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postClassroomPositionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"classroomPositionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_classroomPositionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "classroomPositionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/classroomPositionDescriptors/{id}": {
      "get": {
        "tags": [
          "classroomPositionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getClassroomPositionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_classroomPositionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "classroomPositionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putClassroomPositionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"classroomPositionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_classroomPositionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "classroomPositionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "classroomPositionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteClassroomPositionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohortScopeDescriptors": {
      "get": {
        "tags": [
          "cohortScopeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohortScopeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_cohortScopeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "cohortScopeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohortScopeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"cohortScopeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohortScopeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohortScopeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohortScopeDescriptors/{id}": {
      "get": {
        "tags": [
          "cohortScopeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortScopeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_cohortScopeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "cohortScopeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohortScopeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"cohortScopeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohortScopeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohortScopeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "cohortScopeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortScopeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohortTypeDescriptors": {
      "get": {
        "tags": [
          "cohortTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohortTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_cohortTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "cohortTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohortTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"cohortTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohortTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohortTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohortTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "cohortTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_cohortTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "cohortTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohortTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"cohortTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohortTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohortTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "cohortTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohortYearTypeDescriptors": {
      "get": {
        "tags": [
          "cohortYearTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohortYearTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_cohortYearTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "cohortYearTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohortYearTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"cohortYearTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohortYearTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohortYearTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohortYearTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "cohortYearTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortYearTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_cohortYearTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "cohortYearTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohortYearTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"cohortYearTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohortYearTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohortYearTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "cohortYearTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortYearTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/competencyLevelDescriptors": {
      "get": {
        "tags": [
          "competencyLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCompetencyLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_competencyLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "competencyLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCompetencyLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"competencyLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_competencyLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "competencyLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/competencyLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "competencyLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCompetencyLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_competencyLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "competencyLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCompetencyLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"competencyLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_competencyLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "competencyLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "competencyLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCompetencyLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contactTypeDescriptors": {
      "get": {
        "tags": [
          "contactTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContactTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_contactTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "contactTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContactTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"contactTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_contactTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "contactTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contactTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "contactTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContactTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_contactTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "contactTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContactTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"contactTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_contactTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "contactTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "contactTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteContactTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contentClassDescriptors": {
      "get": {
        "tags": [
          "contentClassDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContentClassDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_contentClassDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "contentClassDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContentClassDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"contentClassDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_contentClassDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "contentClassDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contentClassDescriptors/{id}": {
      "get": {
        "tags": [
          "contentClassDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContentClassDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_contentClassDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "contentClassDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContentClassDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"contentClassDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_contentClassDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "contentClassDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "contentClassDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteContentClassDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/continuationOfServicesReasonDescriptors": {
      "get": {
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContinuationOfServicesReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_continuationOfServicesReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContinuationOfServicesReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"continuationOfServicesReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_continuationOfServicesReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "continuationOfServicesReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/continuationOfServicesReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContinuationOfServicesReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_continuationOfServicesReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContinuationOfServicesReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"continuationOfServicesReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_continuationOfServicesReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "continuationOfServicesReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteContinuationOfServicesReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/costRateDescriptors": {
      "get": {
        "tags": [
          "costRateDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCostRateDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_costRateDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "costRateDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCostRateDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"costRateDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_costRateDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "costRateDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/costRateDescriptors/{id}": {
      "get": {
        "tags": [
          "costRateDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCostRateDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_costRateDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "costRateDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCostRateDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"costRateDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_costRateDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "costRateDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "costRateDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCostRateDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/countryDescriptors": {
      "get": {
        "tags": [
          "countryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCountryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_countryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "countryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCountryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"countryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_countryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "countryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/countryDescriptors/{id}": {
      "get": {
        "tags": [
          "countryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCountryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_countryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "countryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCountryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"countryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_countryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "countryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "countryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCountryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseAttemptResultDescriptors": {
      "get": {
        "tags": [
          "courseAttemptResultDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseAttemptResultDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseAttemptResultDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseAttemptResultDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseAttemptResultDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"courseAttemptResultDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseAttemptResultDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseAttemptResultDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseAttemptResultDescriptors/{id}": {
      "get": {
        "tags": [
          "courseAttemptResultDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseAttemptResultDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseAttemptResultDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseAttemptResultDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseAttemptResultDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseAttemptResultDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseAttemptResultDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseAttemptResultDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseAttemptResultDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseAttemptResultDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseDefinedByDescriptors": {
      "get": {
        "tags": [
          "courseDefinedByDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseDefinedByDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseDefinedByDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseDefinedByDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseDefinedByDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"courseDefinedByDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseDefinedByDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseDefinedByDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseDefinedByDescriptors/{id}": {
      "get": {
        "tags": [
          "courseDefinedByDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseDefinedByDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseDefinedByDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseDefinedByDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseDefinedByDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseDefinedByDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseDefinedByDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseDefinedByDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseDefinedByDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseDefinedByDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseGPAApplicabilityDescriptors": {
      "get": {
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseGPAApplicabilityDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseGPAApplicabilityDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseGPAApplicabilityDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"courseGPAApplicabilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseGPAApplicabilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseGPAApplicabilityDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseGPAApplicabilityDescriptors/{id}": {
      "get": {
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseGPAApplicabilityDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseGPAApplicabilityDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseGPAApplicabilityDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseGPAApplicabilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseGPAApplicabilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseGPAApplicabilityDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseGPAApplicabilityDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseIdentificationSystemDescriptors": {
      "get": {
        "tags": [
          "courseIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseIdentificationSystemDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseIdentificationSystemDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseIdentificationSystemDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseIdentificationSystemDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"courseIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseIdentificationSystemDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseIdentificationSystemDescriptors/{id}": {
      "get": {
        "tags": [
          "courseIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseIdentificationSystemDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseIdentificationSystemDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseIdentificationSystemDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseIdentificationSystemDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseIdentificationSystemDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseIdentificationSystemDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseIdentificationSystemDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseLevelCharacteristicDescriptors": {
      "get": {
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseLevelCharacteristicDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseLevelCharacteristicDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseLevelCharacteristicDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"courseLevelCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseLevelCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseLevelCharacteristicDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseLevelCharacteristicDescriptors/{id}": {
      "get": {
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseLevelCharacteristicDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseLevelCharacteristicDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseLevelCharacteristicDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseLevelCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseLevelCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseLevelCharacteristicDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseLevelCharacteristicDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseRepeatCodeDescriptors": {
      "get": {
        "tags": [
          "courseRepeatCodeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseRepeatCodeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseRepeatCodeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseRepeatCodeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseRepeatCodeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"courseRepeatCodeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseRepeatCodeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseRepeatCodeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseRepeatCodeDescriptors/{id}": {
      "get": {
        "tags": [
          "courseRepeatCodeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseRepeatCodeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseRepeatCodeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseRepeatCodeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseRepeatCodeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseRepeatCodeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseRepeatCodeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseRepeatCodeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseRepeatCodeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseRepeatCodeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentialFieldDescriptors": {
      "get": {
        "tags": [
          "credentialFieldDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCredentialFieldDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_credentialFieldDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "credentialFieldDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCredentialFieldDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"credentialFieldDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_credentialFieldDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "credentialFieldDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentialFieldDescriptors/{id}": {
      "get": {
        "tags": [
          "credentialFieldDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCredentialFieldDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_credentialFieldDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "credentialFieldDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCredentialFieldDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"credentialFieldDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_credentialFieldDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "credentialFieldDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "credentialFieldDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCredentialFieldDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentialTypeDescriptors": {
      "get": {
        "tags": [
          "credentialTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCredentialTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_credentialTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "credentialTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCredentialTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"credentialTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_credentialTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "credentialTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentialTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "credentialTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCredentialTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_credentialTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "credentialTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCredentialTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"credentialTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_credentialTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "credentialTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "credentialTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCredentialTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/creditCategoryDescriptors": {
      "get": {
        "tags": [
          "creditCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCreditCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_creditCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "creditCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCreditCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"creditCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_creditCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "creditCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/creditCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "creditCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCreditCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_creditCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "creditCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCreditCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"creditCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_creditCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "creditCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "creditCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCreditCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/creditTypeDescriptors": {
      "get": {
        "tags": [
          "creditTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCreditTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_creditTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "creditTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCreditTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"creditTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_creditTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "creditTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/creditTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "creditTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCreditTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_creditTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "creditTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCreditTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"creditTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_creditTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "creditTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "creditTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCreditTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/crisisTypeDescriptors": {
      "get": {
        "tags": [
          "crisisTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCrisisTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_crisisTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "crisisTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCrisisTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"crisisTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_crisisTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "crisisTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/crisisTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "crisisTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCrisisTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_crisisTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "crisisTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCrisisTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"crisisTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_crisisTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "crisisTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "crisisTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCrisisTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cteProgramServiceDescriptors": {
      "get": {
        "tags": [
          "cteProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCTEProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_cteProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "cteProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCTEProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"cteProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cteProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cteProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cteProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "cteProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCTEProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_cteProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "cteProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCTEProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"cteProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cteProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "cteProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "cteProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCTEProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/curriculumUsedDescriptors": {
      "get": {
        "tags": [
          "curriculumUsedDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCurriculumUsedDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_curriculumUsedDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "curriculumUsedDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCurriculumUsedDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"curriculumUsedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_curriculumUsedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "curriculumUsedDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/curriculumUsedDescriptors/{id}": {
      "get": {
        "tags": [
          "curriculumUsedDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCurriculumUsedDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_curriculumUsedDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "curriculumUsedDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCurriculumUsedDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"curriculumUsedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_curriculumUsedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "curriculumUsedDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "curriculumUsedDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCurriculumUsedDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/deliveryMethodDescriptors": {
      "get": {
        "tags": [
          "deliveryMethodDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDeliveryMethodDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_deliveryMethodDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "deliveryMethodDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDeliveryMethodDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"deliveryMethodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_deliveryMethodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "deliveryMethodDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/deliveryMethodDescriptors/{id}": {
      "get": {
        "tags": [
          "deliveryMethodDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDeliveryMethodDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_deliveryMethodDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "deliveryMethodDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDeliveryMethodDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"deliveryMethodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_deliveryMethodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "deliveryMethodDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "deliveryMethodDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDeliveryMethodDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/diagnosisDescriptors": {
      "get": {
        "tags": [
          "diagnosisDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDiagnosisDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_diagnosisDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "diagnosisDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDiagnosisDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"diagnosisDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_diagnosisDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "diagnosisDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/diagnosisDescriptors/{id}": {
      "get": {
        "tags": [
          "diagnosisDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDiagnosisDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_diagnosisDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "diagnosisDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDiagnosisDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"diagnosisDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_diagnosisDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "diagnosisDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "diagnosisDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDiagnosisDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/diplomaLevelDescriptors": {
      "get": {
        "tags": [
          "diplomaLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDiplomaLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_diplomaLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "diplomaLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDiplomaLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"diplomaLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_diplomaLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "diplomaLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/diplomaLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "diplomaLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDiplomaLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_diplomaLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "diplomaLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDiplomaLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"diplomaLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_diplomaLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "diplomaLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "diplomaLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDiplomaLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/diplomaTypeDescriptors": {
      "get": {
        "tags": [
          "diplomaTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDiplomaTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_diplomaTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "diplomaTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDiplomaTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"diplomaTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_diplomaTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "diplomaTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/diplomaTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "diplomaTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDiplomaTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_diplomaTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "diplomaTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDiplomaTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"diplomaTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_diplomaTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "diplomaTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "diplomaTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDiplomaTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disabilityDescriptors": {
      "get": {
        "tags": [
          "disabilityDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisabilityDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disabilityDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disabilityDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisabilityDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"disabilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disabilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disabilityDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disabilityDescriptors/{id}": {
      "get": {
        "tags": [
          "disabilityDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisabilityDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disabilityDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disabilityDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisabilityDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disabilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disabilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disabilityDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disabilityDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisabilityDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disabilityDesignationDescriptors": {
      "get": {
        "tags": [
          "disabilityDesignationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisabilityDesignationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disabilityDesignationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disabilityDesignationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisabilityDesignationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"disabilityDesignationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disabilityDesignationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disabilityDesignationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disabilityDesignationDescriptors/{id}": {
      "get": {
        "tags": [
          "disabilityDesignationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisabilityDesignationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disabilityDesignationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disabilityDesignationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisabilityDesignationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disabilityDesignationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disabilityDesignationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disabilityDesignationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disabilityDesignationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisabilityDesignationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disabilityDeterminationSourceTypeDescriptors": {
      "get": {
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisabilityDeterminationSourceTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disabilityDeterminationSourceTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisabilityDeterminationSourceTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"disabilityDeterminationSourceTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disabilityDeterminationSourceTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disabilityDeterminationSourceTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disabilityDeterminationSourceTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisabilityDeterminationSourceTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disabilityDeterminationSourceTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisabilityDeterminationSourceTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disabilityDeterminationSourceTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disabilityDeterminationSourceTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disabilityDeterminationSourceTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisabilityDeterminationSourceTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineActionLengthDifferenceReasonDescriptors": {
      "get": {
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineActionLengthDifferenceReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disciplineActionLengthDifferenceReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineActionLengthDifferenceReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"disciplineActionLengthDifferenceReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineActionLengthDifferenceReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineActionLengthDifferenceReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineActionLengthDifferenceReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineActionLengthDifferenceReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disciplineActionLengthDifferenceReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineActionLengthDifferenceReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disciplineActionLengthDifferenceReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineActionLengthDifferenceReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineActionLengthDifferenceReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineActionLengthDifferenceReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineDescriptors": {
      "get": {
        "tags": [
          "disciplineDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disciplineDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disciplineDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"disciplineDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineDescriptors/{id}": {
      "get": {
        "tags": [
          "disciplineDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disciplineDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disciplineDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disciplineDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disciplineDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineIncidentParticipationCodeDescriptors": {
      "get": {
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineIncidentParticipationCodeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disciplineIncidentParticipationCodeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineIncidentParticipationCodeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"disciplineIncidentParticipationCodeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineIncidentParticipationCodeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineIncidentParticipationCodeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineIncidentParticipationCodeDescriptors/{id}": {
      "get": {
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineIncidentParticipationCodeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disciplineIncidentParticipationCodeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineIncidentParticipationCodeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disciplineIncidentParticipationCodeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineIncidentParticipationCodeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineIncidentParticipationCodeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineIncidentParticipationCodeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/displacedStudentStatusDescriptors": {
      "get": {
        "tags": [
          "displacedStudentStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisplacedStudentStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_displacedStudentStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "displacedStudentStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisplacedStudentStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"displacedStudentStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_displacedStudentStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "displacedStudentStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/displacedStudentStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "displacedStudentStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisplacedStudentStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_displacedStudentStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "displacedStudentStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisplacedStudentStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"displacedStudentStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_displacedStudentStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "displacedStudentStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "displacedStudentStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisplacedStudentStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationalEnvironmentDescriptors": {
      "get": {
        "tags": [
          "educationalEnvironmentDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationalEnvironmentDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationalEnvironmentDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationalEnvironmentDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationalEnvironmentDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"educationalEnvironmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationalEnvironmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationalEnvironmentDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationalEnvironmentDescriptors/{id}": {
      "get": {
        "tags": [
          "educationalEnvironmentDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationalEnvironmentDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationalEnvironmentDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationalEnvironmentDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationalEnvironmentDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationalEnvironmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationalEnvironmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationalEnvironmentDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationalEnvironmentDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationalEnvironmentDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationAssociationTypeDescriptors": {
      "get": {
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationAssociationTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationOrganizationAssociationTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationAssociationTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationAssociationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationAssociationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationAssociationTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationAssociationTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationAssociationTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationOrganizationAssociationTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationAssociationTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationAssociationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationAssociationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationAssociationTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationAssociationTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationCategoryDescriptors": {
      "get": {
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationOrganizationCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationOrganizationCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationIdentificationSystemDescriptors": {
      "get": {
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationIdentificationSystemDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationSystemDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationIdentificationSystemDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationIdentificationSystemDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationIdentificationSystemDescriptors/{id}": {
      "get": {
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationIdentificationSystemDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationSystemDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationIdentificationSystemDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationIdentificationSystemDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationIdentificationSystemDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationPlanDescriptors": {
      "get": {
        "tags": [
          "educationPlanDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationPlanDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationPlanDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationPlanDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationPlanDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"educationPlanDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationPlanDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationPlanDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationPlanDescriptors/{id}": {
      "get": {
        "tags": [
          "educationPlanDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationPlanDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationPlanDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationPlanDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationPlanDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationPlanDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationPlanDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationPlanDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationPlanDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationPlanDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/electronicMailTypeDescriptors": {
      "get": {
        "tags": [
          "electronicMailTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getElectronicMailTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_electronicMailTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "electronicMailTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postElectronicMailTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"electronicMailTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_electronicMailTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "electronicMailTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/electronicMailTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "electronicMailTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getElectronicMailTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_electronicMailTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "electronicMailTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putElectronicMailTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"electronicMailTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_electronicMailTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "electronicMailTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "electronicMailTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteElectronicMailTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/eligibilityDelayReasonDescriptors": {
      "get": {
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEligibilityDelayReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_eligibilityDelayReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEligibilityDelayReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"eligibilityDelayReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_eligibilityDelayReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "eligibilityDelayReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/eligibilityDelayReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEligibilityDelayReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_eligibilityDelayReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEligibilityDelayReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"eligibilityDelayReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_eligibilityDelayReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "eligibilityDelayReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEligibilityDelayReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/eligibilityEvaluationTypeDescriptors": {
      "get": {
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEligibilityEvaluationTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_eligibilityEvaluationTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEligibilityEvaluationTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"eligibilityEvaluationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_eligibilityEvaluationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "eligibilityEvaluationTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/eligibilityEvaluationTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEligibilityEvaluationTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_eligibilityEvaluationTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEligibilityEvaluationTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"eligibilityEvaluationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_eligibilityEvaluationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "eligibilityEvaluationTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEligibilityEvaluationTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/employmentStatusDescriptors": {
      "get": {
        "tags": [
          "employmentStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEmploymentStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_employmentStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "employmentStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEmploymentStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"employmentStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_employmentStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "employmentStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/employmentStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "employmentStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEmploymentStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_employmentStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "employmentStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEmploymentStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"employmentStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_employmentStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "employmentStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "employmentStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEmploymentStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/enrollmentTypeDescriptors": {
      "get": {
        "tags": [
          "enrollmentTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEnrollmentTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_enrollmentTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "enrollmentTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEnrollmentTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"enrollmentTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_enrollmentTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "enrollmentTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/enrollmentTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "enrollmentTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEnrollmentTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_enrollmentTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "enrollmentTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEnrollmentTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"enrollmentTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_enrollmentTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "enrollmentTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "enrollmentTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEnrollmentTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/entryGradeLevelReasonDescriptors": {
      "get": {
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEntryGradeLevelReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_entryGradeLevelReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEntryGradeLevelReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"entryGradeLevelReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_entryGradeLevelReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "entryGradeLevelReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/entryGradeLevelReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEntryGradeLevelReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_entryGradeLevelReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEntryGradeLevelReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"entryGradeLevelReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_entryGradeLevelReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "entryGradeLevelReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEntryGradeLevelReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/entryTypeDescriptors": {
      "get": {
        "tags": [
          "entryTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEntryTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_entryTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "entryTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEntryTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"entryTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_entryTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "entryTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/entryTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "entryTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEntryTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_entryTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "entryTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEntryTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"entryTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_entryTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "entryTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "entryTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEntryTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/evaluationDelayReasonDescriptors": {
      "get": {
        "tags": [
          "evaluationDelayReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationDelayReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_evaluationDelayReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluationDelayReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationDelayReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"evaluationDelayReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_evaluationDelayReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationDelayReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/evaluationDelayReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "evaluationDelayReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationDelayReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_evaluationDelayReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluationDelayReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationDelayReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluationDelayReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_evaluationDelayReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationDelayReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluationDelayReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationDelayReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/eventCircumstanceDescriptors": {
      "get": {
        "tags": [
          "eventCircumstanceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEventCircumstanceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_eventCircumstanceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "eventCircumstanceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEventCircumstanceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"eventCircumstanceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_eventCircumstanceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "eventCircumstanceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/eventCircumstanceDescriptors/{id}": {
      "get": {
        "tags": [
          "eventCircumstanceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEventCircumstanceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_eventCircumstanceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "eventCircumstanceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEventCircumstanceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"eventCircumstanceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_eventCircumstanceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "eventCircumstanceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "eventCircumstanceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEventCircumstanceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/exitWithdrawTypeDescriptors": {
      "get": {
        "tags": [
          "exitWithdrawTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getExitWithdrawTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_exitWithdrawTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "exitWithdrawTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postExitWithdrawTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"exitWithdrawTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_exitWithdrawTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "exitWithdrawTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/exitWithdrawTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "exitWithdrawTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getExitWithdrawTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_exitWithdrawTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "exitWithdrawTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putExitWithdrawTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"exitWithdrawTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_exitWithdrawTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "exitWithdrawTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "exitWithdrawTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteExitWithdrawTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/financialCollectionDescriptors": {
      "get": {
        "tags": [
          "financialCollectionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFinancialCollectionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_financialCollectionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "financialCollectionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFinancialCollectionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"financialCollectionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_financialCollectionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "financialCollectionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/financialCollectionDescriptors/{id}": {
      "get": {
        "tags": [
          "financialCollectionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFinancialCollectionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_financialCollectionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "financialCollectionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFinancialCollectionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"financialCollectionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_financialCollectionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "financialCollectionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "financialCollectionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteFinancialCollectionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradebookEntryTypeDescriptors": {
      "get": {
        "tags": [
          "gradebookEntryTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradebookEntryTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gradebookEntryTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gradebookEntryTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradebookEntryTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"gradebookEntryTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradebookEntryTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradebookEntryTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradebookEntryTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "gradebookEntryTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradebookEntryTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gradebookEntryTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gradebookEntryTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradebookEntryTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gradebookEntryTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradebookEntryTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradebookEntryTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "gradebookEntryTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradebookEntryTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradeLevelDescriptors": {
      "get": {
        "tags": [
          "gradeLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradeLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gradeLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gradeLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradeLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"gradeLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradeLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradeLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradeLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "gradeLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradeLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gradeLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gradeLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradeLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gradeLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradeLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradeLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "gradeLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradeLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradePointAverageTypeDescriptors": {
      "get": {
        "tags": [
          "gradePointAverageTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradePointAverageTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gradePointAverageTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gradePointAverageTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradePointAverageTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"gradePointAverageTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradePointAverageTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradePointAverageTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradePointAverageTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "gradePointAverageTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradePointAverageTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gradePointAverageTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gradePointAverageTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradePointAverageTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gradePointAverageTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradePointAverageTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradePointAverageTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "gradePointAverageTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradePointAverageTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradeTypeDescriptors": {
      "get": {
        "tags": [
          "gradeTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradeTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gradeTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gradeTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradeTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"gradeTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradeTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradeTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradeTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "gradeTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradeTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gradeTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gradeTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradeTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gradeTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradeTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradeTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "gradeTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradeTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradingPeriodDescriptors": {
      "get": {
        "tags": [
          "gradingPeriodDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradingPeriodDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gradingPeriodDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gradingPeriodDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradingPeriodDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"gradingPeriodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradingPeriodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradingPeriodDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradingPeriodDescriptors/{id}": {
      "get": {
        "tags": [
          "gradingPeriodDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradingPeriodDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gradingPeriodDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gradingPeriodDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradingPeriodDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gradingPeriodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradingPeriodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradingPeriodDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "gradingPeriodDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradingPeriodDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/graduationPlanTypeDescriptors": {
      "get": {
        "tags": [
          "graduationPlanTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGraduationPlanTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_graduationPlanTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "graduationPlanTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGraduationPlanTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"graduationPlanTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_graduationPlanTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "graduationPlanTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/graduationPlanTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "graduationPlanTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGraduationPlanTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_graduationPlanTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "graduationPlanTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGraduationPlanTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"graduationPlanTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_graduationPlanTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "graduationPlanTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "graduationPlanTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGraduationPlanTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gunFreeSchoolsActReportingStatusDescriptors": {
      "get": {
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGunFreeSchoolsActReportingStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gunFreeSchoolsActReportingStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGunFreeSchoolsActReportingStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"gunFreeSchoolsActReportingStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gunFreeSchoolsActReportingStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gunFreeSchoolsActReportingStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gunFreeSchoolsActReportingStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGunFreeSchoolsActReportingStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gunFreeSchoolsActReportingStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGunFreeSchoolsActReportingStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gunFreeSchoolsActReportingStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gunFreeSchoolsActReportingStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "gunFreeSchoolsActReportingStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGunFreeSchoolsActReportingStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/homelessPrimaryNighttimeResidenceDescriptors": {
      "get": {
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getHomelessPrimaryNighttimeResidenceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_homelessPrimaryNighttimeResidenceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postHomelessPrimaryNighttimeResidenceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"homelessPrimaryNighttimeResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_homelessPrimaryNighttimeResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "homelessPrimaryNighttimeResidenceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/homelessPrimaryNighttimeResidenceDescriptors/{id}": {
      "get": {
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getHomelessPrimaryNighttimeResidenceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_homelessPrimaryNighttimeResidenceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putHomelessPrimaryNighttimeResidenceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"homelessPrimaryNighttimeResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_homelessPrimaryNighttimeResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "homelessPrimaryNighttimeResidenceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteHomelessPrimaryNighttimeResidenceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/homelessProgramServiceDescriptors": {
      "get": {
        "tags": [
          "homelessProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getHomelessProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_homelessProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "homelessProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postHomelessProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"homelessProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_homelessProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "homelessProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/homelessProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "homelessProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getHomelessProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_homelessProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "homelessProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putHomelessProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"homelessProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_homelessProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "homelessProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "homelessProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteHomelessProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/ideaPartDescriptors": {
      "get": {
        "tags": [
          "ideaPartDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIDEAPartDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_ideaPartDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "ideaPartDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIDEAPartDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"ideaPartDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_ideaPartDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "ideaPartDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/ideaPartDescriptors/{id}": {
      "get": {
        "tags": [
          "ideaPartDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIDEAPartDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_ideaPartDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "ideaPartDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIDEAPartDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"ideaPartDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_ideaPartDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "ideaPartDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ideaPartDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteIDEAPartDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/identificationDocumentUseDescriptors": {
      "get": {
        "tags": [
          "identificationDocumentUseDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIdentificationDocumentUseDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_identificationDocumentUseDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "identificationDocumentUseDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIdentificationDocumentUseDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"identificationDocumentUseDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_identificationDocumentUseDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "identificationDocumentUseDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/identificationDocumentUseDescriptors/{id}": {
      "get": {
        "tags": [
          "identificationDocumentUseDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIdentificationDocumentUseDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_identificationDocumentUseDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "identificationDocumentUseDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIdentificationDocumentUseDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"identificationDocumentUseDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_identificationDocumentUseDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "identificationDocumentUseDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "identificationDocumentUseDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteIdentificationDocumentUseDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/immunizationTypeDescriptors": {
      "get": {
        "tags": [
          "immunizationTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getImmunizationTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_immunizationTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "immunizationTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postImmunizationTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"immunizationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_immunizationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "immunizationTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/immunizationTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "immunizationTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getImmunizationTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_immunizationTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "immunizationTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putImmunizationTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"immunizationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_immunizationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "immunizationTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "immunizationTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteImmunizationTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/incidentLocationDescriptors": {
      "get": {
        "tags": [
          "incidentLocationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIncidentLocationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_incidentLocationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "incidentLocationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIncidentLocationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"incidentLocationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_incidentLocationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "incidentLocationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/incidentLocationDescriptors/{id}": {
      "get": {
        "tags": [
          "incidentLocationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIncidentLocationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_incidentLocationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "incidentLocationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIncidentLocationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"incidentLocationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_incidentLocationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "incidentLocationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "incidentLocationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteIncidentLocationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/indicatorDescriptors": {
      "get": {
        "tags": [
          "indicatorDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIndicatorDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_indicatorDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "indicatorDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIndicatorDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"indicatorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_indicatorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "indicatorDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/indicatorDescriptors/{id}": {
      "get": {
        "tags": [
          "indicatorDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIndicatorDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_indicatorDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "indicatorDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIndicatorDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"indicatorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_indicatorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "indicatorDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "indicatorDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteIndicatorDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/indicatorGroupDescriptors": {
      "get": {
        "tags": [
          "indicatorGroupDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIndicatorGroupDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_indicatorGroupDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "indicatorGroupDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIndicatorGroupDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"indicatorGroupDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_indicatorGroupDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "indicatorGroupDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/indicatorGroupDescriptors/{id}": {
      "get": {
        "tags": [
          "indicatorGroupDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIndicatorGroupDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_indicatorGroupDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "indicatorGroupDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIndicatorGroupDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"indicatorGroupDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_indicatorGroupDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "indicatorGroupDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "indicatorGroupDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteIndicatorGroupDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/indicatorLevelDescriptors": {
      "get": {
        "tags": [
          "indicatorLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIndicatorLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_indicatorLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "indicatorLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIndicatorLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"indicatorLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_indicatorLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "indicatorLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/indicatorLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "indicatorLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIndicatorLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_indicatorLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "indicatorLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIndicatorLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"indicatorLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_indicatorLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "indicatorLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "indicatorLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteIndicatorLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/institutionTelephoneNumberTypeDescriptors": {
      "get": {
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInstitutionTelephoneNumberTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_institutionTelephoneNumberTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInstitutionTelephoneNumberTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"institutionTelephoneNumberTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_institutionTelephoneNumberTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "institutionTelephoneNumberTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/institutionTelephoneNumberTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInstitutionTelephoneNumberTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_institutionTelephoneNumberTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInstitutionTelephoneNumberTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"institutionTelephoneNumberTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_institutionTelephoneNumberTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "institutionTelephoneNumberTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInstitutionTelephoneNumberTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interactivityStyleDescriptors": {
      "get": {
        "tags": [
          "interactivityStyleDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInteractivityStyleDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_interactivityStyleDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "interactivityStyleDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInteractivityStyleDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"interactivityStyleDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interactivityStyleDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "interactivityStyleDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interactivityStyleDescriptors/{id}": {
      "get": {
        "tags": [
          "interactivityStyleDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInteractivityStyleDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_interactivityStyleDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "interactivityStyleDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInteractivityStyleDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"interactivityStyleDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interactivityStyleDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "interactivityStyleDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "interactivityStyleDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInteractivityStyleDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/internetAccessDescriptors": {
      "get": {
        "tags": [
          "internetAccessDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInternetAccessDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_internetAccessDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "internetAccessDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInternetAccessDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"internetAccessDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_internetAccessDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "internetAccessDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/internetAccessDescriptors/{id}": {
      "get": {
        "tags": [
          "internetAccessDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInternetAccessDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_internetAccessDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "internetAccessDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInternetAccessDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"internetAccessDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_internetAccessDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "internetAccessDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "internetAccessDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInternetAccessDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/internetAccessTypeInResidenceDescriptors": {
      "get": {
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInternetAccessTypeInResidenceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_internetAccessTypeInResidenceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInternetAccessTypeInResidenceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"internetAccessTypeInResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_internetAccessTypeInResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "internetAccessTypeInResidenceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/internetAccessTypeInResidenceDescriptors/{id}": {
      "get": {
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInternetAccessTypeInResidenceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_internetAccessTypeInResidenceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInternetAccessTypeInResidenceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"internetAccessTypeInResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_internetAccessTypeInResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "internetAccessTypeInResidenceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInternetAccessTypeInResidenceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/internetPerformanceInResidenceDescriptors": {
      "get": {
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInternetPerformanceInResidenceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_internetPerformanceInResidenceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInternetPerformanceInResidenceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"internetPerformanceInResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_internetPerformanceInResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "internetPerformanceInResidenceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/internetPerformanceInResidenceDescriptors/{id}": {
      "get": {
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInternetPerformanceInResidenceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_internetPerformanceInResidenceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInternetPerformanceInResidenceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"internetPerformanceInResidenceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_internetPerformanceInResidenceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "internetPerformanceInResidenceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInternetPerformanceInResidenceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionClassDescriptors": {
      "get": {
        "tags": [
          "interventionClassDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionClassDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_interventionClassDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "interventionClassDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionClassDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"interventionClassDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionClassDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionClassDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionClassDescriptors/{id}": {
      "get": {
        "tags": [
          "interventionClassDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionClassDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_interventionClassDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "interventionClassDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionClassDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"interventionClassDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionClassDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionClassDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "interventionClassDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionClassDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionEffectivenessRatingDescriptors": {
      "get": {
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionEffectivenessRatingDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_interventionEffectivenessRatingDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionEffectivenessRatingDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"interventionEffectivenessRatingDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionEffectivenessRatingDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionEffectivenessRatingDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionEffectivenessRatingDescriptors/{id}": {
      "get": {
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionEffectivenessRatingDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_interventionEffectivenessRatingDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionEffectivenessRatingDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"interventionEffectivenessRatingDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionEffectivenessRatingDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionEffectivenessRatingDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionEffectivenessRatingDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/languageDescriptors": {
      "get": {
        "tags": [
          "languageDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLanguageDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_languageDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "languageDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLanguageDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"languageDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_languageDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "languageDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/languageDescriptors/{id}": {
      "get": {
        "tags": [
          "languageDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLanguageDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_languageDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "languageDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLanguageDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"languageDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_languageDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "languageDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "languageDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLanguageDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/languageInstructionProgramServiceDescriptors": {
      "get": {
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLanguageInstructionProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_languageInstructionProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLanguageInstructionProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"languageInstructionProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_languageInstructionProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "languageInstructionProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/languageInstructionProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLanguageInstructionProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_languageInstructionProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLanguageInstructionProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"languageInstructionProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_languageInstructionProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "languageInstructionProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLanguageInstructionProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/languageUseDescriptors": {
      "get": {
        "tags": [
          "languageUseDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLanguageUseDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_languageUseDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "languageUseDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLanguageUseDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"languageUseDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_languageUseDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "languageUseDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/languageUseDescriptors/{id}": {
      "get": {
        "tags": [
          "languageUseDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLanguageUseDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_languageUseDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "languageUseDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLanguageUseDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"languageUseDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_languageUseDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "languageUseDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "languageUseDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLanguageUseDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardCategoryDescriptors": {
      "get": {
        "tags": [
          "learningStandardCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_learningStandardCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "learningStandardCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "learningStandardCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_learningStandardCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "learningStandardCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "learningStandardCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardEquivalenceStrengthDescriptors": {
      "get": {
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardEquivalenceStrengthDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_learningStandardEquivalenceStrengthDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardEquivalenceStrengthDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardEquivalenceStrengthDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardEquivalenceStrengthDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardEquivalenceStrengthDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardEquivalenceStrengthDescriptors/{id}": {
      "get": {
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardEquivalenceStrengthDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_learningStandardEquivalenceStrengthDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardEquivalenceStrengthDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardEquivalenceStrengthDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardEquivalenceStrengthDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardEquivalenceStrengthDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardEquivalenceStrengthDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardScopeDescriptors": {
      "get": {
        "tags": [
          "learningStandardScopeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardScopeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_learningStandardScopeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "learningStandardScopeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardScopeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardScopeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardScopeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardScopeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardScopeDescriptors/{id}": {
      "get": {
        "tags": [
          "learningStandardScopeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardScopeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_learningStandardScopeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "learningStandardScopeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardScopeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardScopeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardScopeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardScopeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "learningStandardScopeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardScopeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/levelOfEducationDescriptors": {
      "get": {
        "tags": [
          "levelOfEducationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLevelOfEducationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_levelOfEducationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "levelOfEducationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLevelOfEducationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"levelOfEducationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_levelOfEducationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "levelOfEducationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/levelOfEducationDescriptors/{id}": {
      "get": {
        "tags": [
          "levelOfEducationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLevelOfEducationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_levelOfEducationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "levelOfEducationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLevelOfEducationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"levelOfEducationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_levelOfEducationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "levelOfEducationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "levelOfEducationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLevelOfEducationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/licenseStatusDescriptors": {
      "get": {
        "tags": [
          "licenseStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLicenseStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_licenseStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "licenseStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLicenseStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"licenseStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_licenseStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "licenseStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/licenseStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "licenseStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLicenseStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_licenseStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "licenseStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLicenseStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"licenseStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_licenseStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "licenseStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "licenseStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLicenseStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/licenseTypeDescriptors": {
      "get": {
        "tags": [
          "licenseTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLicenseTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_licenseTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "licenseTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLicenseTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"licenseTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_licenseTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "licenseTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/licenseTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "licenseTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLicenseTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_licenseTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "licenseTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLicenseTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"licenseTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_licenseTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "licenseTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "licenseTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLicenseTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/limitedEnglishProficiencyDescriptors": {
      "get": {
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLimitedEnglishProficiencyDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_limitedEnglishProficiencyDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLimitedEnglishProficiencyDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"limitedEnglishProficiencyDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_limitedEnglishProficiencyDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "limitedEnglishProficiencyDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/limitedEnglishProficiencyDescriptors/{id}": {
      "get": {
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLimitedEnglishProficiencyDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_limitedEnglishProficiencyDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLimitedEnglishProficiencyDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"limitedEnglishProficiencyDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_limitedEnglishProficiencyDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "limitedEnglishProficiencyDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLimitedEnglishProficiencyDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localeDescriptors": {
      "get": {
        "tags": [
          "localeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocaleDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocaleDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"localeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "localeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localeDescriptors/{id}": {
      "get": {
        "tags": [
          "localeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocaleDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocaleDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "localeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocaleDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEducationAgencyCategoryDescriptors": {
      "get": {
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalEducationAgencyCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localEducationAgencyCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalEducationAgencyCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"localEducationAgencyCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localEducationAgencyCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "localEducationAgencyCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEducationAgencyCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalEducationAgencyCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localEducationAgencyCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalEducationAgencyCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localEducationAgencyCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localEducationAgencyCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "localEducationAgencyCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalEducationAgencyCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/magnetSpecialProgramEmphasisSchoolDescriptors": {
      "get": {
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMagnetSpecialProgramEmphasisSchoolDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_magnetSpecialProgramEmphasisSchoolDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMagnetSpecialProgramEmphasisSchoolDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"magnetSpecialProgramEmphasisSchoolDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_magnetSpecialProgramEmphasisSchoolDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "magnetSpecialProgramEmphasisSchoolDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/magnetSpecialProgramEmphasisSchoolDescriptors/{id}": {
      "get": {
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMagnetSpecialProgramEmphasisSchoolDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_magnetSpecialProgramEmphasisSchoolDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMagnetSpecialProgramEmphasisSchoolDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"magnetSpecialProgramEmphasisSchoolDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_magnetSpecialProgramEmphasisSchoolDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "magnetSpecialProgramEmphasisSchoolDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteMagnetSpecialProgramEmphasisSchoolDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/mediumOfInstructionDescriptors": {
      "get": {
        "tags": [
          "mediumOfInstructionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMediumOfInstructionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_mediumOfInstructionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "mediumOfInstructionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMediumOfInstructionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"mediumOfInstructionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_mediumOfInstructionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "mediumOfInstructionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/mediumOfInstructionDescriptors/{id}": {
      "get": {
        "tags": [
          "mediumOfInstructionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMediumOfInstructionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_mediumOfInstructionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "mediumOfInstructionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMediumOfInstructionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"mediumOfInstructionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_mediumOfInstructionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "mediumOfInstructionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "mediumOfInstructionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteMediumOfInstructionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/methodCreditEarnedDescriptors": {
      "get": {
        "tags": [
          "methodCreditEarnedDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMethodCreditEarnedDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_methodCreditEarnedDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "methodCreditEarnedDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMethodCreditEarnedDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"methodCreditEarnedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_methodCreditEarnedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "methodCreditEarnedDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/methodCreditEarnedDescriptors/{id}": {
      "get": {
        "tags": [
          "methodCreditEarnedDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMethodCreditEarnedDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_methodCreditEarnedDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "methodCreditEarnedDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMethodCreditEarnedDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"methodCreditEarnedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_methodCreditEarnedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "methodCreditEarnedDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "methodCreditEarnedDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteMethodCreditEarnedDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/migrantEducationProgramServiceDescriptors": {
      "get": {
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMigrantEducationProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_migrantEducationProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMigrantEducationProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"migrantEducationProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_migrantEducationProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "migrantEducationProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/migrantEducationProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMigrantEducationProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_migrantEducationProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMigrantEducationProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"migrantEducationProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_migrantEducationProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "migrantEducationProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteMigrantEducationProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/modelEntityDescriptors": {
      "get": {
        "tags": [
          "modelEntityDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getModelEntityDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_modelEntityDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "modelEntityDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postModelEntityDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"modelEntityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_modelEntityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "modelEntityDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/modelEntityDescriptors/{id}": {
      "get": {
        "tags": [
          "modelEntityDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getModelEntityDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_modelEntityDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "modelEntityDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putModelEntityDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"modelEntityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_modelEntityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "modelEntityDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "modelEntityDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteModelEntityDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/monitoredDescriptors": {
      "get": {
        "tags": [
          "monitoredDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMonitoredDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_monitoredDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "monitoredDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMonitoredDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"monitoredDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_monitoredDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "monitoredDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/monitoredDescriptors/{id}": {
      "get": {
        "tags": [
          "monitoredDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMonitoredDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_monitoredDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "monitoredDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMonitoredDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"monitoredDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_monitoredDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "monitoredDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "monitoredDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteMonitoredDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramDescriptors": {
      "get": {
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNeglectedOrDelinquentProgramDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNeglectedOrDelinquentProgramDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"neglectedOrDelinquentProgramDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "neglectedOrDelinquentProgramDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramDescriptors/{id}": {
      "get": {
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNeglectedOrDelinquentProgramDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNeglectedOrDelinquentProgramDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"neglectedOrDelinquentProgramDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "neglectedOrDelinquentProgramDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteNeglectedOrDelinquentProgramDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramServiceDescriptors": {
      "get": {
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNeglectedOrDelinquentProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNeglectedOrDelinquentProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"neglectedOrDelinquentProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "neglectedOrDelinquentProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNeglectedOrDelinquentProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNeglectedOrDelinquentProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"neglectedOrDelinquentProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_neglectedOrDelinquentProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "neglectedOrDelinquentProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteNeglectedOrDelinquentProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/networkPurposeDescriptors": {
      "get": {
        "tags": [
          "networkPurposeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNetworkPurposeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_networkPurposeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "networkPurposeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNetworkPurposeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"networkPurposeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_networkPurposeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "networkPurposeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/networkPurposeDescriptors/{id}": {
      "get": {
        "tags": [
          "networkPurposeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNetworkPurposeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_networkPurposeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "networkPurposeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNetworkPurposeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"networkPurposeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_networkPurposeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "networkPurposeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "networkPurposeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteNetworkPurposeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/nonMedicalImmunizationExemptionDescriptors": {
      "get": {
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNonMedicalImmunizationExemptionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_nonMedicalImmunizationExemptionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNonMedicalImmunizationExemptionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"nonMedicalImmunizationExemptionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_nonMedicalImmunizationExemptionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "nonMedicalImmunizationExemptionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/nonMedicalImmunizationExemptionDescriptors/{id}": {
      "get": {
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNonMedicalImmunizationExemptionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_nonMedicalImmunizationExemptionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNonMedicalImmunizationExemptionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"nonMedicalImmunizationExemptionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_nonMedicalImmunizationExemptionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "nonMedicalImmunizationExemptionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteNonMedicalImmunizationExemptionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/operationalStatusDescriptors": {
      "get": {
        "tags": [
          "operationalStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOperationalStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_operationalStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "operationalStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOperationalStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"operationalStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_operationalStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "operationalStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/operationalStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "operationalStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOperationalStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_operationalStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "operationalStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOperationalStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"operationalStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_operationalStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "operationalStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "operationalStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteOperationalStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/otherNameTypeDescriptors": {
      "get": {
        "tags": [
          "otherNameTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOtherNameTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_otherNameTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "otherNameTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOtherNameTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"otherNameTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_otherNameTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "otherNameTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/otherNameTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "otherNameTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOtherNameTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_otherNameTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "otherNameTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOtherNameTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"otherNameTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_otherNameTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "otherNameTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "otherNameTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteOtherNameTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/participationDescriptors": {
      "get": {
        "tags": [
          "participationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getParticipationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_participationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "participationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postParticipationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"participationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_participationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "participationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/participationDescriptors/{id}": {
      "get": {
        "tags": [
          "participationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getParticipationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_participationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "participationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putParticipationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"participationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_participationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "participationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "participationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteParticipationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/participationStatusDescriptors": {
      "get": {
        "tags": [
          "participationStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getParticipationStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_participationStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "participationStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postParticipationStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"participationStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_participationStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "participationStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/participationStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "participationStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getParticipationStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_participationStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "participationStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putParticipationStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"participationStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_participationStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "participationStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "participationStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteParticipationStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/performanceBaseConversionDescriptors": {
      "get": {
        "tags": [
          "performanceBaseConversionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPerformanceBaseConversionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_performanceBaseConversionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "performanceBaseConversionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerformanceBaseConversionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"performanceBaseConversionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_performanceBaseConversionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceBaseConversionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/performanceBaseConversionDescriptors/{id}": {
      "get": {
        "tags": [
          "performanceBaseConversionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPerformanceBaseConversionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_performanceBaseConversionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "performanceBaseConversionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerformanceBaseConversionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"performanceBaseConversionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_performanceBaseConversionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceBaseConversionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "performanceBaseConversionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePerformanceBaseConversionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/performanceLevelDescriptors": {
      "get": {
        "tags": [
          "performanceLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPerformanceLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_performanceLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "performanceLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerformanceLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"performanceLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_performanceLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/performanceLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "performanceLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPerformanceLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_performanceLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "performanceLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerformanceLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"performanceLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_performanceLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "performanceLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePerformanceLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/personalInformationVerificationDescriptors": {
      "get": {
        "tags": [
          "personalInformationVerificationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPersonalInformationVerificationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_personalInformationVerificationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "personalInformationVerificationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPersonalInformationVerificationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"personalInformationVerificationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_personalInformationVerificationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "personalInformationVerificationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/personalInformationVerificationDescriptors/{id}": {
      "get": {
        "tags": [
          "personalInformationVerificationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPersonalInformationVerificationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_personalInformationVerificationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "personalInformationVerificationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPersonalInformationVerificationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"personalInformationVerificationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_personalInformationVerificationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "personalInformationVerificationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "personalInformationVerificationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePersonalInformationVerificationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/platformTypeDescriptors": {
      "get": {
        "tags": [
          "platformTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPlatformTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_platformTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "platformTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPlatformTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"platformTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_platformTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "platformTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/platformTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "platformTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPlatformTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_platformTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "platformTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPlatformTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"platformTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_platformTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "platformTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "platformTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePlatformTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/populationServedDescriptors": {
      "get": {
        "tags": [
          "populationServedDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPopulationServedDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_populationServedDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "populationServedDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPopulationServedDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"populationServedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_populationServedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "populationServedDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/populationServedDescriptors/{id}": {
      "get": {
        "tags": [
          "populationServedDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPopulationServedDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_populationServedDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "populationServedDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPopulationServedDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"populationServedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_populationServedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "populationServedDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "populationServedDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePopulationServedDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postingResultDescriptors": {
      "get": {
        "tags": [
          "postingResultDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostingResultDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_postingResultDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "postingResultDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostingResultDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"postingResultDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postingResultDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "postingResultDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postingResultDescriptors/{id}": {
      "get": {
        "tags": [
          "postingResultDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostingResultDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_postingResultDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "postingResultDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostingResultDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"postingResultDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postingResultDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "postingResultDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "postingResultDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePostingResultDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryEventCategoryDescriptors": {
      "get": {
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryEventCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_postSecondaryEventCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryEventCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryEventCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryEventCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryEventCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_postSecondaryEventCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryEventCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryEventCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryEventCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryInstitutionLevelDescriptors": {
      "get": {
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryInstitutionLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_postSecondaryInstitutionLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryInstitutionLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryInstitutionLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryInstitutionLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryInstitutionLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryInstitutionLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryInstitutionLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_postSecondaryInstitutionLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryInstitutionLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryInstitutionLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryInstitutionLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryInstitutionLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryInstitutionLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/primaryLearningDeviceAccessDescriptors": {
      "get": {
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrimaryLearningDeviceAccessDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_primaryLearningDeviceAccessDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPrimaryLearningDeviceAccessDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"primaryLearningDeviceAccessDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_primaryLearningDeviceAccessDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "primaryLearningDeviceAccessDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/primaryLearningDeviceAccessDescriptors/{id}": {
      "get": {
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPrimaryLearningDeviceAccessDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_primaryLearningDeviceAccessDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPrimaryLearningDeviceAccessDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"primaryLearningDeviceAccessDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_primaryLearningDeviceAccessDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "primaryLearningDeviceAccessDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePrimaryLearningDeviceAccessDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/primaryLearningDeviceAwayFromSchoolDescriptors": {
      "get": {
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrimaryLearningDeviceAwayFromSchoolDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_primaryLearningDeviceAwayFromSchoolDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPrimaryLearningDeviceAwayFromSchoolDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"primaryLearningDeviceAwayFromSchoolDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_primaryLearningDeviceAwayFromSchoolDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "primaryLearningDeviceAwayFromSchoolDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/primaryLearningDeviceAwayFromSchoolDescriptors/{id}": {
      "get": {
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPrimaryLearningDeviceAwayFromSchoolDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_primaryLearningDeviceAwayFromSchoolDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPrimaryLearningDeviceAwayFromSchoolDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"primaryLearningDeviceAwayFromSchoolDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_primaryLearningDeviceAwayFromSchoolDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "primaryLearningDeviceAwayFromSchoolDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePrimaryLearningDeviceAwayFromSchoolDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/primaryLearningDeviceProviderDescriptors": {
      "get": {
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrimaryLearningDeviceProviderDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_primaryLearningDeviceProviderDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPrimaryLearningDeviceProviderDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"primaryLearningDeviceProviderDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_primaryLearningDeviceProviderDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "primaryLearningDeviceProviderDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/primaryLearningDeviceProviderDescriptors/{id}": {
      "get": {
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPrimaryLearningDeviceProviderDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_primaryLearningDeviceProviderDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPrimaryLearningDeviceProviderDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"primaryLearningDeviceProviderDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_primaryLearningDeviceProviderDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "primaryLearningDeviceProviderDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePrimaryLearningDeviceProviderDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/proficiencyDescriptors": {
      "get": {
        "tags": [
          "proficiencyDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProficiencyDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_proficiencyDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "proficiencyDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProficiencyDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"proficiencyDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_proficiencyDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "proficiencyDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/proficiencyDescriptors/{id}": {
      "get": {
        "tags": [
          "proficiencyDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProficiencyDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_proficiencyDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "proficiencyDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProficiencyDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"proficiencyDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_proficiencyDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "proficiencyDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "proficiencyDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProficiencyDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programAssignmentDescriptors": {
      "get": {
        "tags": [
          "programAssignmentDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramAssignmentDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programAssignmentDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programAssignmentDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramAssignmentDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"programAssignmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programAssignmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programAssignmentDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programAssignmentDescriptors/{id}": {
      "get": {
        "tags": [
          "programAssignmentDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramAssignmentDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programAssignmentDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programAssignmentDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramAssignmentDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programAssignmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programAssignmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programAssignmentDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programAssignmentDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramAssignmentDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programCharacteristicDescriptors": {
      "get": {
        "tags": [
          "programCharacteristicDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramCharacteristicDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programCharacteristicDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programCharacteristicDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramCharacteristicDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"programCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programCharacteristicDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programCharacteristicDescriptors/{id}": {
      "get": {
        "tags": [
          "programCharacteristicDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramCharacteristicDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programCharacteristicDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programCharacteristicDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramCharacteristicDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programCharacteristicDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programCharacteristicDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramCharacteristicDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationPeriodDescriptors": {
      "get": {
        "tags": [
          "programEvaluationPeriodDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationPeriodDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programEvaluationPeriodDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programEvaluationPeriodDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationPeriodDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationPeriodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationPeriodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationPeriodDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationPeriodDescriptors/{id}": {
      "get": {
        "tags": [
          "programEvaluationPeriodDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationPeriodDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programEvaluationPeriodDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programEvaluationPeriodDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationPeriodDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationPeriodDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationPeriodDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationPeriodDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programEvaluationPeriodDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationPeriodDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationTypeDescriptors": {
      "get": {
        "tags": [
          "programEvaluationTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programEvaluationTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programEvaluationTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "programEvaluationTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programEvaluationTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programEvaluationTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programEvaluationTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programSponsorDescriptors": {
      "get": {
        "tags": [
          "programSponsorDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramSponsorDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programSponsorDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programSponsorDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramSponsorDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"programSponsorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programSponsorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programSponsorDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programSponsorDescriptors/{id}": {
      "get": {
        "tags": [
          "programSponsorDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramSponsorDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programSponsorDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programSponsorDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramSponsorDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programSponsorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programSponsorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programSponsorDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programSponsorDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramSponsorDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programTypeDescriptors": {
      "get": {
        "tags": [
          "programTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"programTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "programTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "programTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/progressDescriptors": {
      "get": {
        "tags": [
          "progressDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgressDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_progressDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "progressDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgressDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"progressDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_progressDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "progressDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/progressDescriptors/{id}": {
      "get": {
        "tags": [
          "progressDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgressDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_progressDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "progressDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgressDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"progressDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_progressDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "progressDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "progressDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgressDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/progressLevelDescriptors": {
      "get": {
        "tags": [
          "progressLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgressLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_progressLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "progressLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgressLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"progressLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_progressLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "progressLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/progressLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "progressLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgressLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_progressLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "progressLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgressLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"progressLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_progressLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "progressLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "progressLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgressLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/providerCategoryDescriptors": {
      "get": {
        "tags": [
          "providerCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProviderCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_providerCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "providerCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProviderCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"providerCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_providerCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "providerCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/providerCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "providerCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProviderCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_providerCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "providerCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProviderCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"providerCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_providerCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "providerCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "providerCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProviderCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/providerProfitabilityDescriptors": {
      "get": {
        "tags": [
          "providerProfitabilityDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProviderProfitabilityDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_providerProfitabilityDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "providerProfitabilityDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProviderProfitabilityDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"providerProfitabilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_providerProfitabilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "providerProfitabilityDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/providerProfitabilityDescriptors/{id}": {
      "get": {
        "tags": [
          "providerProfitabilityDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProviderProfitabilityDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_providerProfitabilityDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "providerProfitabilityDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProviderProfitabilityDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"providerProfitabilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_providerProfitabilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "providerProfitabilityDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "providerProfitabilityDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProviderProfitabilityDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/providerStatusDescriptors": {
      "get": {
        "tags": [
          "providerStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProviderStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_providerStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "providerStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProviderStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"providerStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_providerStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "providerStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/providerStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "providerStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProviderStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_providerStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "providerStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProviderStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"providerStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_providerStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "providerStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "providerStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProviderStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/publicationStatusDescriptors": {
      "get": {
        "tags": [
          "publicationStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPublicationStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_publicationStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "publicationStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPublicationStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"publicationStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_publicationStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "publicationStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/publicationStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "publicationStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPublicationStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_publicationStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "publicationStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPublicationStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"publicationStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_publicationStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "publicationStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "publicationStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePublicationStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/questionFormDescriptors": {
      "get": {
        "tags": [
          "questionFormDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getQuestionFormDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_questionFormDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "questionFormDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postQuestionFormDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"questionFormDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_questionFormDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "questionFormDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/questionFormDescriptors/{id}": {
      "get": {
        "tags": [
          "questionFormDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getQuestionFormDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_questionFormDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "questionFormDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putQuestionFormDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"questionFormDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_questionFormDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "questionFormDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "questionFormDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteQuestionFormDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/raceDescriptors": {
      "get": {
        "tags": [
          "raceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRaceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_raceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "raceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRaceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"raceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_raceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "raceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/raceDescriptors/{id}": {
      "get": {
        "tags": [
          "raceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRaceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_raceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "raceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRaceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"raceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_raceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "raceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "raceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRaceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/ratingLevelDescriptors": {
      "get": {
        "tags": [
          "ratingLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRatingLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_ratingLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "ratingLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRatingLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"ratingLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_ratingLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "ratingLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/ratingLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "ratingLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRatingLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_ratingLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "ratingLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRatingLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"ratingLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_ratingLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "ratingLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ratingLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRatingLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reasonExitedDescriptors": {
      "get": {
        "tags": [
          "reasonExitedDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReasonExitedDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_reasonExitedDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "reasonExitedDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReasonExitedDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"reasonExitedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reasonExitedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reasonExitedDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reasonExitedDescriptors/{id}": {
      "get": {
        "tags": [
          "reasonExitedDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReasonExitedDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_reasonExitedDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "reasonExitedDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReasonExitedDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"reasonExitedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reasonExitedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reasonExitedDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "reasonExitedDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteReasonExitedDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reasonNotTestedDescriptors": {
      "get": {
        "tags": [
          "reasonNotTestedDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReasonNotTestedDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_reasonNotTestedDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "reasonNotTestedDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReasonNotTestedDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"reasonNotTestedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reasonNotTestedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reasonNotTestedDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reasonNotTestedDescriptors/{id}": {
      "get": {
        "tags": [
          "reasonNotTestedDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReasonNotTestedDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_reasonNotTestedDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "reasonNotTestedDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReasonNotTestedDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"reasonNotTestedDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reasonNotTestedDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reasonNotTestedDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "reasonNotTestedDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteReasonNotTestedDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/recognitionTypeDescriptors": {
      "get": {
        "tags": [
          "recognitionTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRecognitionTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_recognitionTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "recognitionTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRecognitionTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"recognitionTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_recognitionTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "recognitionTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/recognitionTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "recognitionTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRecognitionTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_recognitionTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "recognitionTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRecognitionTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"recognitionTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_recognitionTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "recognitionTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "recognitionTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRecognitionTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/relationDescriptors": {
      "get": {
        "tags": [
          "relationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRelationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_relationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "relationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRelationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"relationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_relationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "relationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/relationDescriptors/{id}": {
      "get": {
        "tags": [
          "relationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRelationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_relationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "relationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRelationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"relationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_relationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "relationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "relationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRelationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/repeatIdentifierDescriptors": {
      "get": {
        "tags": [
          "repeatIdentifierDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRepeatIdentifierDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_repeatIdentifierDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "repeatIdentifierDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRepeatIdentifierDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"repeatIdentifierDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_repeatIdentifierDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "repeatIdentifierDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/repeatIdentifierDescriptors/{id}": {
      "get": {
        "tags": [
          "repeatIdentifierDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRepeatIdentifierDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_repeatIdentifierDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "repeatIdentifierDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRepeatIdentifierDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"repeatIdentifierDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_repeatIdentifierDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "repeatIdentifierDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "repeatIdentifierDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRepeatIdentifierDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reporterDescriptionDescriptors": {
      "get": {
        "tags": [
          "reporterDescriptionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReporterDescriptionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_reporterDescriptionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "reporterDescriptionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReporterDescriptionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"reporterDescriptionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reporterDescriptionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reporterDescriptionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reporterDescriptionDescriptors/{id}": {
      "get": {
        "tags": [
          "reporterDescriptionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReporterDescriptionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_reporterDescriptionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "reporterDescriptionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReporterDescriptionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"reporterDescriptionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reporterDescriptionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reporterDescriptionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "reporterDescriptionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteReporterDescriptionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reportingTagDescriptors": {
      "get": {
        "tags": [
          "reportingTagDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReportingTagDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_reportingTagDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "reportingTagDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReportingTagDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"reportingTagDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reportingTagDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reportingTagDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reportingTagDescriptors/{id}": {
      "get": {
        "tags": [
          "reportingTagDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReportingTagDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_reportingTagDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "reportingTagDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReportingTagDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"reportingTagDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reportingTagDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "reportingTagDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "reportingTagDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteReportingTagDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/residencyStatusDescriptors": {
      "get": {
        "tags": [
          "residencyStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResidencyStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_residencyStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "residencyStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResidencyStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"residencyStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_residencyStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "residencyStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/residencyStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "residencyStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResidencyStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_residencyStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "residencyStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResidencyStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"residencyStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_residencyStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "residencyStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "residencyStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteResidencyStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/responseIndicatorDescriptors": {
      "get": {
        "tags": [
          "responseIndicatorDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResponseIndicatorDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_responseIndicatorDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "responseIndicatorDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResponseIndicatorDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"responseIndicatorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_responseIndicatorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "responseIndicatorDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/responseIndicatorDescriptors/{id}": {
      "get": {
        "tags": [
          "responseIndicatorDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResponseIndicatorDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_responseIndicatorDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "responseIndicatorDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResponseIndicatorDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"responseIndicatorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_responseIndicatorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "responseIndicatorDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "responseIndicatorDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteResponseIndicatorDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/responsibilityDescriptors": {
      "get": {
        "tags": [
          "responsibilityDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResponsibilityDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_responsibilityDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "responsibilityDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResponsibilityDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"responsibilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_responsibilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "responsibilityDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/responsibilityDescriptors/{id}": {
      "get": {
        "tags": [
          "responsibilityDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResponsibilityDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_responsibilityDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "responsibilityDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResponsibilityDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"responsibilityDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_responsibilityDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "responsibilityDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "responsibilityDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteResponsibilityDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/restraintEventReasonDescriptors": {
      "get": {
        "tags": [
          "restraintEventReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRestraintEventReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_restraintEventReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "restraintEventReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRestraintEventReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"restraintEventReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_restraintEventReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "restraintEventReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/restraintEventReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "restraintEventReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRestraintEventReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_restraintEventReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "restraintEventReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRestraintEventReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"restraintEventReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_restraintEventReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "restraintEventReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "restraintEventReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRestraintEventReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/resultDatatypeTypeDescriptors": {
      "get": {
        "tags": [
          "resultDatatypeTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResultDatatypeTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_resultDatatypeTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "resultDatatypeTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResultDatatypeTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"resultDatatypeTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_resultDatatypeTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "resultDatatypeTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/resultDatatypeTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "resultDatatypeTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResultDatatypeTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_resultDatatypeTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "resultDatatypeTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResultDatatypeTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"resultDatatypeTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_resultDatatypeTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "resultDatatypeTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "resultDatatypeTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteResultDatatypeTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/retestIndicatorDescriptors": {
      "get": {
        "tags": [
          "retestIndicatorDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRetestIndicatorDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_retestIndicatorDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "retestIndicatorDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRetestIndicatorDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"retestIndicatorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_retestIndicatorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "retestIndicatorDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/retestIndicatorDescriptors/{id}": {
      "get": {
        "tags": [
          "retestIndicatorDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRetestIndicatorDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_retestIndicatorDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "retestIndicatorDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRetestIndicatorDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"retestIndicatorDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_retestIndicatorDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "retestIndicatorDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "retestIndicatorDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRetestIndicatorDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolCategoryDescriptors": {
      "get": {
        "tags": [
          "schoolCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_schoolCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "schoolCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"schoolCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "schoolCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_schoolCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "schoolCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"schoolCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "schoolCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolChoiceBasisDescriptors": {
      "get": {
        "tags": [
          "schoolChoiceBasisDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolChoiceBasisDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_schoolChoiceBasisDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "schoolChoiceBasisDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolChoiceBasisDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"schoolChoiceBasisDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolChoiceBasisDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolChoiceBasisDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolChoiceBasisDescriptors/{id}": {
      "get": {
        "tags": [
          "schoolChoiceBasisDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolChoiceBasisDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_schoolChoiceBasisDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "schoolChoiceBasisDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolChoiceBasisDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"schoolChoiceBasisDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolChoiceBasisDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolChoiceBasisDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "schoolChoiceBasisDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolChoiceBasisDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolChoiceImplementStatusDescriptors": {
      "get": {
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolChoiceImplementStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_schoolChoiceImplementStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolChoiceImplementStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"schoolChoiceImplementStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolChoiceImplementStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolChoiceImplementStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolChoiceImplementStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolChoiceImplementStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_schoolChoiceImplementStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolChoiceImplementStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"schoolChoiceImplementStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolChoiceImplementStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolChoiceImplementStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolChoiceImplementStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolFoodServiceProgramServiceDescriptors": {
      "get": {
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolFoodServiceProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_schoolFoodServiceProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolFoodServiceProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"schoolFoodServiceProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolFoodServiceProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolFoodServiceProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolFoodServiceProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolFoodServiceProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_schoolFoodServiceProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolFoodServiceProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"schoolFoodServiceProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolFoodServiceProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolFoodServiceProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolFoodServiceProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolTypeDescriptors": {
      "get": {
        "tags": [
          "schoolTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_schoolTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "schoolTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"schoolTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "schoolTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_schoolTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "schoolTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"schoolTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "schoolTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionCharacteristicDescriptors": {
      "get": {
        "tags": [
          "sectionCharacteristicDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSectionCharacteristicDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_sectionCharacteristicDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sectionCharacteristicDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSectionCharacteristicDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"sectionCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sectionCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sectionCharacteristicDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionCharacteristicDescriptors/{id}": {
      "get": {
        "tags": [
          "sectionCharacteristicDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionCharacteristicDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_sectionCharacteristicDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sectionCharacteristicDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSectionCharacteristicDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"sectionCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sectionCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sectionCharacteristicDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "sectionCharacteristicDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionCharacteristicDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionTypeDescriptors": {
      "get": {
        "tags": [
          "sectionTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSectionTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_sectionTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sectionTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSectionTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"sectionTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sectionTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sectionTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "sectionTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_sectionTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sectionTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSectionTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"sectionTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sectionTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sectionTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "sectionTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/separationDescriptors": {
      "get": {
        "tags": [
          "separationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSeparationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_separationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "separationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSeparationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"separationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_separationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "separationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/separationDescriptors/{id}": {
      "get": {
        "tags": [
          "separationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSeparationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_separationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "separationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSeparationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"separationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_separationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "separationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "separationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSeparationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/separationReasonDescriptors": {
      "get": {
        "tags": [
          "separationReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSeparationReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_separationReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "separationReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSeparationReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"separationReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_separationReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "separationReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/separationReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "separationReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSeparationReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_separationReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "separationReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSeparationReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"separationReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_separationReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "separationReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "separationReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSeparationReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/serviceDescriptors": {
      "get": {
        "tags": [
          "serviceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_serviceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "serviceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"serviceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_serviceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "serviceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/serviceDescriptors/{id}": {
      "get": {
        "tags": [
          "serviceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_serviceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "serviceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"serviceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_serviceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "serviceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "serviceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sexDescriptors": {
      "get": {
        "tags": [
          "sexDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSexDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_sexDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sexDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSexDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"sexDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sexDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sexDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sexDescriptors/{id}": {
      "get": {
        "tags": [
          "sexDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSexDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_sexDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sexDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSexDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"sexDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sexDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sexDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "sexDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSexDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sourceSystemDescriptors": {
      "get": {
        "tags": [
          "sourceSystemDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSourceSystemDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_sourceSystemDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sourceSystemDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSourceSystemDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"sourceSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sourceSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sourceSystemDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sourceSystemDescriptors/{id}": {
      "get": {
        "tags": [
          "sourceSystemDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSourceSystemDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_sourceSystemDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sourceSystemDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSourceSystemDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"sourceSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sourceSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "sourceSystemDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "sourceSystemDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSourceSystemDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/specialEducationExitReasonDescriptors": {
      "get": {
        "tags": [
          "specialEducationExitReasonDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSpecialEducationExitReasonDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_specialEducationExitReasonDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "specialEducationExitReasonDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSpecialEducationExitReasonDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"specialEducationExitReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_specialEducationExitReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "specialEducationExitReasonDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/specialEducationExitReasonDescriptors/{id}": {
      "get": {
        "tags": [
          "specialEducationExitReasonDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSpecialEducationExitReasonDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_specialEducationExitReasonDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "specialEducationExitReasonDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSpecialEducationExitReasonDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"specialEducationExitReasonDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_specialEducationExitReasonDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "specialEducationExitReasonDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "specialEducationExitReasonDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSpecialEducationExitReasonDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/specialEducationProgramServiceDescriptors": {
      "get": {
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSpecialEducationProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_specialEducationProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSpecialEducationProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"specialEducationProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_specialEducationProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "specialEducationProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/specialEducationProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSpecialEducationProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_specialEducationProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSpecialEducationProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"specialEducationProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_specialEducationProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "specialEducationProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSpecialEducationProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/specialEducationSettingDescriptors": {
      "get": {
        "tags": [
          "specialEducationSettingDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSpecialEducationSettingDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_specialEducationSettingDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "specialEducationSettingDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSpecialEducationSettingDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"specialEducationSettingDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_specialEducationSettingDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "specialEducationSettingDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/specialEducationSettingDescriptors/{id}": {
      "get": {
        "tags": [
          "specialEducationSettingDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSpecialEducationSettingDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_specialEducationSettingDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "specialEducationSettingDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSpecialEducationSettingDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"specialEducationSettingDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_specialEducationSettingDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "specialEducationSettingDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "specialEducationSettingDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSpecialEducationSettingDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffClassificationDescriptors": {
      "get": {
        "tags": [
          "staffClassificationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffClassificationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffClassificationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffClassificationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffClassificationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"staffClassificationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffClassificationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffClassificationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffClassificationDescriptors/{id}": {
      "get": {
        "tags": [
          "staffClassificationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffClassificationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffClassificationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffClassificationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffClassificationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffClassificationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffClassificationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffClassificationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffClassificationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffClassificationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffIdentificationSystemDescriptors": {
      "get": {
        "tags": [
          "staffIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffIdentificationSystemDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffIdentificationSystemDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffIdentificationSystemDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffIdentificationSystemDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"staffIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffIdentificationSystemDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffIdentificationSystemDescriptors/{id}": {
      "get": {
        "tags": [
          "staffIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffIdentificationSystemDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffIdentificationSystemDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffIdentificationSystemDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffIdentificationSystemDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffIdentificationSystemDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffIdentificationSystemDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffIdentificationSystemDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffLeaveEventCategoryDescriptors": {
      "get": {
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffLeaveEventCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffLeaveEventCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffLeaveEventCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"staffLeaveEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffLeaveEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffLeaveEventCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffLeaveEventCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffLeaveEventCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffLeaveEventCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffLeaveEventCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffLeaveEventCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffLeaveEventCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffLeaveEventCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffLeaveEventCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/stateAbbreviationDescriptors": {
      "get": {
        "tags": [
          "stateAbbreviationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStateAbbreviationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_stateAbbreviationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "stateAbbreviationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStateAbbreviationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"stateAbbreviationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_stateAbbreviationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "stateAbbreviationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/stateAbbreviationDescriptors/{id}": {
      "get": {
        "tags": [
          "stateAbbreviationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStateAbbreviationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_stateAbbreviationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "stateAbbreviationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStateAbbreviationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"stateAbbreviationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_stateAbbreviationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "stateAbbreviationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "stateAbbreviationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStateAbbreviationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCharacteristicDescriptors": {
      "get": {
        "tags": [
          "studentCharacteristicDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCharacteristicDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentCharacteristicDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentCharacteristicDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCharacteristicDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"studentCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCharacteristicDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCharacteristicDescriptors/{id}": {
      "get": {
        "tags": [
          "studentCharacteristicDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCharacteristicDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentCharacteristicDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentCharacteristicDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCharacteristicDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentCharacteristicDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCharacteristicDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCharacteristicDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentCharacteristicDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCharacteristicDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentIdentificationSystemDescriptors": {
      "get": {
        "tags": [
          "studentIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentIdentificationSystemDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentIdentificationSystemDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentIdentificationSystemDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentIdentificationSystemDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"studentIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentIdentificationSystemDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentIdentificationSystemDescriptors/{id}": {
      "get": {
        "tags": [
          "studentIdentificationSystemDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentIdentificationSystemDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentIdentificationSystemDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentIdentificationSystemDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentIdentificationSystemDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentIdentificationSystemDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentIdentificationSystemDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentIdentificationSystemDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentIdentificationSystemDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentIdentificationSystemDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentParticipationCodeDescriptors": {
      "get": {
        "tags": [
          "studentParticipationCodeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentParticipationCodeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentParticipationCodeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentParticipationCodeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentParticipationCodeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"studentParticipationCodeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentParticipationCodeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentParticipationCodeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentParticipationCodeDescriptors/{id}": {
      "get": {
        "tags": [
          "studentParticipationCodeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentParticipationCodeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentParticipationCodeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentParticipationCodeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentParticipationCodeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentParticipationCodeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentParticipationCodeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentParticipationCodeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentParticipationCodeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentParticipationCodeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/submissionStatusDescriptors": {
      "get": {
        "tags": [
          "submissionStatusDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSubmissionStatusDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_submissionStatusDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "submissionStatusDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSubmissionStatusDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"submissionStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_submissionStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "submissionStatusDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/submissionStatusDescriptors/{id}": {
      "get": {
        "tags": [
          "submissionStatusDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSubmissionStatusDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_submissionStatusDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "submissionStatusDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSubmissionStatusDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"submissionStatusDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_submissionStatusDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "submissionStatusDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "submissionStatusDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSubmissionStatusDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/supporterMilitaryConnectionDescriptors": {
      "get": {
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSupporterMilitaryConnectionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_supporterMilitaryConnectionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSupporterMilitaryConnectionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"supporterMilitaryConnectionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_supporterMilitaryConnectionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "supporterMilitaryConnectionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/supporterMilitaryConnectionDescriptors/{id}": {
      "get": {
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSupporterMilitaryConnectionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_supporterMilitaryConnectionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSupporterMilitaryConnectionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"supporterMilitaryConnectionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_supporterMilitaryConnectionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "supporterMilitaryConnectionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSupporterMilitaryConnectionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyCategoryDescriptors": {
      "get": {
        "tags": [
          "surveyCategoryDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyCategoryDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyCategoryDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyCategoryDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyCategoryDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"surveyCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyCategoryDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyCategoryDescriptors/{id}": {
      "get": {
        "tags": [
          "surveyCategoryDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyCategoryDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyCategoryDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyCategoryDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyCategoryDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyCategoryDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyCategoryDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyCategoryDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyCategoryDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyCategoryDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyLevelDescriptors": {
      "get": {
        "tags": [
          "surveyLevelDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyLevelDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyLevelDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyLevelDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyLevelDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"surveyLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyLevelDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyLevelDescriptors/{id}": {
      "get": {
        "tags": [
          "surveyLevelDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyLevelDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyLevelDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyLevelDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyLevelDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyLevelDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyLevelDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyLevelDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyLevelDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyLevelDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/teachingCredentialBasisDescriptors": {
      "get": {
        "tags": [
          "teachingCredentialBasisDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTeachingCredentialBasisDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_teachingCredentialBasisDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "teachingCredentialBasisDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTeachingCredentialBasisDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"teachingCredentialBasisDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_teachingCredentialBasisDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "teachingCredentialBasisDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/teachingCredentialBasisDescriptors/{id}": {
      "get": {
        "tags": [
          "teachingCredentialBasisDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTeachingCredentialBasisDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_teachingCredentialBasisDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "teachingCredentialBasisDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTeachingCredentialBasisDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"teachingCredentialBasisDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_teachingCredentialBasisDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "teachingCredentialBasisDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "teachingCredentialBasisDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTeachingCredentialBasisDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/teachingCredentialDescriptors": {
      "get": {
        "tags": [
          "teachingCredentialDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTeachingCredentialDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_teachingCredentialDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "teachingCredentialDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTeachingCredentialDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"teachingCredentialDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_teachingCredentialDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "teachingCredentialDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/teachingCredentialDescriptors/{id}": {
      "get": {
        "tags": [
          "teachingCredentialDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTeachingCredentialDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_teachingCredentialDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "teachingCredentialDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTeachingCredentialDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"teachingCredentialDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_teachingCredentialDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "teachingCredentialDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "teachingCredentialDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTeachingCredentialDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/technicalSkillsAssessmentDescriptors": {
      "get": {
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTechnicalSkillsAssessmentDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_technicalSkillsAssessmentDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTechnicalSkillsAssessmentDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"technicalSkillsAssessmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_technicalSkillsAssessmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "technicalSkillsAssessmentDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/technicalSkillsAssessmentDescriptors/{id}": {
      "get": {
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTechnicalSkillsAssessmentDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_technicalSkillsAssessmentDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTechnicalSkillsAssessmentDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"technicalSkillsAssessmentDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_technicalSkillsAssessmentDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "technicalSkillsAssessmentDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTechnicalSkillsAssessmentDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/telephoneNumberTypeDescriptors": {
      "get": {
        "tags": [
          "telephoneNumberTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTelephoneNumberTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_telephoneNumberTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "telephoneNumberTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTelephoneNumberTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"telephoneNumberTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_telephoneNumberTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "telephoneNumberTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/telephoneNumberTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "telephoneNumberTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTelephoneNumberTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_telephoneNumberTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "telephoneNumberTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTelephoneNumberTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"telephoneNumberTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_telephoneNumberTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "telephoneNumberTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "telephoneNumberTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTelephoneNumberTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/termDescriptors": {
      "get": {
        "tags": [
          "termDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTermDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_termDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "termDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTermDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"termDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_termDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "termDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/termDescriptors/{id}": {
      "get": {
        "tags": [
          "termDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTermDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_termDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "termDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTermDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"termDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_termDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "termDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "termDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTermDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/titleIPartAParticipantDescriptors": {
      "get": {
        "tags": [
          "titleIPartAParticipantDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTitleIPartAParticipantDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_titleIPartAParticipantDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "titleIPartAParticipantDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTitleIPartAParticipantDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"titleIPartAParticipantDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_titleIPartAParticipantDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "titleIPartAParticipantDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/titleIPartAParticipantDescriptors/{id}": {
      "get": {
        "tags": [
          "titleIPartAParticipantDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTitleIPartAParticipantDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_titleIPartAParticipantDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "titleIPartAParticipantDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTitleIPartAParticipantDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"titleIPartAParticipantDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_titleIPartAParticipantDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "titleIPartAParticipantDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "titleIPartAParticipantDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTitleIPartAParticipantDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/titleIPartAProgramServiceDescriptors": {
      "get": {
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTitleIPartAProgramServiceDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_titleIPartAProgramServiceDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTitleIPartAProgramServiceDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"titleIPartAProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_titleIPartAProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "titleIPartAProgramServiceDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/titleIPartAProgramServiceDescriptors/{id}": {
      "get": {
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTitleIPartAProgramServiceDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_titleIPartAProgramServiceDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTitleIPartAProgramServiceDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"titleIPartAProgramServiceDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_titleIPartAProgramServiceDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "titleIPartAProgramServiceDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTitleIPartAProgramServiceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/titleIPartASchoolDesignationDescriptors": {
      "get": {
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTitleIPartASchoolDesignationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_titleIPartASchoolDesignationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTitleIPartASchoolDesignationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"titleIPartASchoolDesignationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_titleIPartASchoolDesignationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "titleIPartASchoolDesignationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/titleIPartASchoolDesignationDescriptors/{id}": {
      "get": {
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTitleIPartASchoolDesignationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_titleIPartASchoolDesignationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTitleIPartASchoolDesignationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"titleIPartASchoolDesignationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_titleIPartASchoolDesignationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "titleIPartASchoolDesignationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTitleIPartASchoolDesignationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/transportationPublicExpenseEligibilityTypeDescriptors": {
      "get": {
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTransportationPublicExpenseEligibilityTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_transportationPublicExpenseEligibilityTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTransportationPublicExpenseEligibilityTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"transportationPublicExpenseEligibilityTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_transportationPublicExpenseEligibilityTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "transportationPublicExpenseEligibilityTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/transportationPublicExpenseEligibilityTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTransportationPublicExpenseEligibilityTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_transportationPublicExpenseEligibilityTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTransportationPublicExpenseEligibilityTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"transportationPublicExpenseEligibilityTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_transportationPublicExpenseEligibilityTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "transportationPublicExpenseEligibilityTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTransportationPublicExpenseEligibilityTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/transportationTypeDescriptors": {
      "get": {
        "tags": [
          "transportationTypeDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTransportationTypeDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_transportationTypeDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "transportationTypeDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTransportationTypeDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"transportationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_transportationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "transportationTypeDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/transportationTypeDescriptors/{id}": {
      "get": {
        "tags": [
          "transportationTypeDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTransportationTypeDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_transportationTypeDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "transportationTypeDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTransportationTypeDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"transportationTypeDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_transportationTypeDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "transportationTypeDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "transportationTypeDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTransportationTypeDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/travelDayofWeekDescriptors": {
      "get": {
        "tags": [
          "travelDayofWeekDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTravelDayofWeekDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_travelDayofWeekDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "travelDayofWeekDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTravelDayofWeekDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"travelDayofWeekDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_travelDayofWeekDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "travelDayofWeekDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/travelDayofWeekDescriptors/{id}": {
      "get": {
        "tags": [
          "travelDayofWeekDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTravelDayofWeekDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_travelDayofWeekDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "travelDayofWeekDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTravelDayofWeekDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"travelDayofWeekDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_travelDayofWeekDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "travelDayofWeekDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "travelDayofWeekDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTravelDayofWeekDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/travelDirectionDescriptors": {
      "get": {
        "tags": [
          "travelDirectionDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTravelDirectionDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_travelDirectionDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "travelDirectionDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTravelDirectionDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"travelDirectionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_travelDirectionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "travelDirectionDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/travelDirectionDescriptors/{id}": {
      "get": {
        "tags": [
          "travelDirectionDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTravelDirectionDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_travelDirectionDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "travelDirectionDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTravelDirectionDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"travelDirectionDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_travelDirectionDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "travelDirectionDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "travelDirectionDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTravelDirectionDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/tribalAffiliationDescriptors": {
      "get": {
        "tags": [
          "tribalAffiliationDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTribalAffiliationDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_tribalAffiliationDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "tribalAffiliationDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTribalAffiliationDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"tribalAffiliationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_tribalAffiliationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "tribalAffiliationDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/tribalAffiliationDescriptors/{id}": {
      "get": {
        "tags": [
          "tribalAffiliationDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTribalAffiliationDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_tribalAffiliationDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "tribalAffiliationDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTribalAffiliationDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"tribalAffiliationDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_tribalAffiliationDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "tribalAffiliationDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "tribalAffiliationDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteTribalAffiliationDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/visaDescriptors": {
      "get": {
        "tags": [
          "visaDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getVisaDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_visaDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "visaDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postVisaDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"visaDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_visaDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "visaDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/visaDescriptors/{id}": {
      "get": {
        "tags": [
          "visaDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getVisaDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_visaDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "visaDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putVisaDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"visaDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_visaDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "visaDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "visaDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteVisaDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/weaponDescriptors": {
      "get": {
        "tags": [
          "weaponDescriptors"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getWeaponDescriptors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "codeValue",
            "in": "query",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_weaponDescriptor"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "weaponDescriptors"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postWeaponDescriptor",
        "requestBody": {
          "description": "The JSON representation of the \"weaponDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_weaponDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "weaponDescriptor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/weaponDescriptors/{id}": {
      "get": {
        "tags": [
          "weaponDescriptors"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getWeaponDescriptorsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_weaponDescriptor"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "weaponDescriptors"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putWeaponDescriptor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"weaponDescriptor\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_weaponDescriptor"
              }
            }
          },
          "required": true,
          "x-bodyName": "weaponDescriptor"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "weaponDescriptors"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteWeaponDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "edFi_absenceEventCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_academicHonorCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_academicSubjectDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_accommodationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_accountTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_achievementCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_additionalCreditTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_addressTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_administrationEnvironmentDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_administrativeFundingControlDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_ancestryEthnicOriginDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentIdentificationSystemDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentItemCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentItemResultDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentPeriodDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentReportingMethodDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assignmentLateStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_attemptStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_attendanceEventCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_barrierToInternetAccessInResidenceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_behaviorDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_busRouteDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_calendarEventDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_calendarTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_careerPathwayDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_charterApprovalAgencyTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_charterStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_citizenshipStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_classroomPositionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_cohortScopeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_cohortTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_cohortYearTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_competencyLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_contactTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_contentClassDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_continuationOfServicesReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_costRateDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_countryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseAttemptResultDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseDefinedByDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseGPAApplicabilityDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseIdentificationSystemDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseLevelCharacteristicDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseRepeatCodeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_credentialFieldDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_credentialTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_creditCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_creditTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_crisisTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_cteProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_curriculumUsedDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_deliveryMethodDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_diagnosisDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_diplomaLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_diplomaTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disabilityDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disabilityDesignationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disabilityDeterminationSourceTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disciplineActionLengthDifferenceReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disciplineDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disciplineIncidentParticipationCodeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_displacedStudentStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationalEnvironmentDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationOrganizationAssociationTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationOrganizationCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationOrganizationIdentificationSystemDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationPlanDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_electronicMailTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_eligibilityDelayReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_eligibilityEvaluationTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_employmentStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_enrollmentTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_entryGradeLevelReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_entryTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_evaluationDelayReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_eventCircumstanceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_exitWithdrawTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_financialCollectionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradebookEntryTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradeLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradePointAverageTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradeTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradingPeriodDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_graduationPlanTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gunFreeSchoolsActReportingStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_homelessPrimaryNighttimeResidenceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_homelessProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_ideaPartDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_identificationDocumentUseDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_immunizationTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_incidentLocationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_indicatorDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_indicatorGroupDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_indicatorLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_institutionTelephoneNumberTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_interactivityStyleDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_internetAccessDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_internetAccessTypeInResidenceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_internetPerformanceInResidenceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_interventionClassDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_interventionEffectivenessRatingDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_languageDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_languageInstructionProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_languageUseDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_learningStandardCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_learningStandardEquivalenceStrengthDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_learningStandardScopeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_levelOfEducationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_licenseStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_licenseTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_limitedEnglishProficiencyDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localEducationAgencyCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_magnetSpecialProgramEmphasisSchoolDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_mediumOfInstructionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_methodCreditEarnedDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_migrantEducationProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_modelEntityDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_monitoredDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_neglectedOrDelinquentProgramDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_neglectedOrDelinquentProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_networkPurposeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_nonMedicalImmunizationExemptionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_operationalStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_otherNameTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_participationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_participationStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_performanceBaseConversionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_performanceLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_personalInformationVerificationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_platformTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_populationServedDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_postingResultDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_postSecondaryEventCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_postSecondaryInstitutionLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_primaryLearningDeviceAccessDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_primaryLearningDeviceAwayFromSchoolDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_primaryLearningDeviceProviderDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_proficiencyDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programAssignmentDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programCharacteristicDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programEvaluationPeriodDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programEvaluationTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programSponsorDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_progressDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_progressLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_providerCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_providerProfitabilityDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_providerStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_publicationStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_questionFormDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_raceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_ratingLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_reasonExitedDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_reasonNotTestedDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_recognitionTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_relationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_repeatIdentifierDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_reporterDescriptionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_reportingTagDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_residencyStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_responseIndicatorDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_responsibilityDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_restraintEventReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_resultDatatypeTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_retestIndicatorDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_schoolCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_schoolChoiceBasisDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_schoolChoiceImplementStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_schoolFoodServiceProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_schoolTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sectionCharacteristicDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sectionTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_separationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_separationReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_serviceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sexDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sourceSystemDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_specialEducationExitReasonDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_specialEducationProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_specialEducationSettingDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffClassificationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffIdentificationSystemDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffLeaveEventCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_stateAbbreviationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentCharacteristicDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentIdentificationSystemDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentParticipationCodeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_submissionStatusDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_supporterMilitaryConnectionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyCategoryDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyLevelDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_teachingCredentialBasisDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_teachingCredentialDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_technicalSkillsAssessmentDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_telephoneNumberTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_termDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_titleIPartAParticipantDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_titleIPartAProgramServiceDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_titleIPartASchoolDesignationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_transportationPublicExpenseEligibilityTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_transportationTypeDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_travelDayofWeekDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_travelDirectionDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_tribalAffiliationDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_visaDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_weaponDescriptor": {
        "required": [
          "codeValue",
          "namespace",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "codeValue": {
            "maxLength": 50,
            "type": "string",
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "type": "string",
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "The description of the descriptor.",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "type": "string",
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "format": "date",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "The end date of the period when the descriptor is in effect.",
            "format": "date",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "type": "string",
            "description": "A shortened description for the descriptor."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "link": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "description": "Describes the nature of the relationship to the referenced resource."
          },
          "href": {
            "type": "string",
            "description": "The URL to the related resource."
          }
        }
      }
    },
    "responses": {
      "Created": {
        "description": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
      },
      "Updated": {
        "description": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
      },
      "Deleted": {
        "description": "The resource was successfully deleted."
      },
      "NotModified": {
        "description": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
      },
      "BadRequest": {
        "description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or their values.",
        "content": {
          "application/json": { }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed."
      },
      "Forbidden": {
        "description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed."
      },
      "NotFound": {
        "description": "The resource could not be found."
      },
      "NotFoundUseSnapshot": {
        "description": "The resource could not be found. If Use-Snapshot header is set to true, this response can indicate the snapshot may have been removed.",
        "content": {
          "application/json": { }
        }
      },
      "Conflict": {
        "description": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details.",
        "content": {
          "application/json": { }
        }
      },
      "PreconditionFailed": {
        "description": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request. This indicates the resource has been modified by another consumer."
      },
      "Error": {
        "description": "An unhandled error occurred on the server. See the response body for details.",
        "content": {
          "application/json": { }
        }
      }
    },
    "parameters": {
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Indicates how many items should be skipped before returning results.",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Indicates the maximum number of items that should be returned in the results.",
        "schema": {
          "maximum": 500,
          "minimum": 0,
          "type": "integer",
          "format": "int32",
          "default": 25
        }
      },
      "MinChangeVersion": {
        "name": "minChangeVersion",
        "in": "query",
        "description": "Used in synchronization to set sequence minimum ChangeVersion",
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "MaxChangeVersion": {
        "name": "maxChangeVersion",
        "in": "query",
        "description": "Used in synchronization to set sequence maximum ChangeVersion",
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "If-None-Match": {
        "name": "If-None-Match",
        "in": "header",
        "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "Specifies a subset of properties that should be returned for each entity (e.g. \"property1,collection1(collProp1,collProp2)\").",
        "schema": {
          "type": "string"
        }
      },
      "queryExpression": {
        "name": "q",
        "in": "query",
        "description": "Specifies a query filter expression for the request. Currently only supports range-based queries on dates and numbers (e.g. \"schoolId:[255901000...255901002]\" and \"BeginDate:[2016-03-07...2016-03-10]\").",
        "schema": {
          "type": "string"
        }
      },
      "totalCount": {
        "name": "totalCount",
        "in": "query",
        "description": "Indicates if the total number of items available should be returned in the 'Total-Count' header of the response.  If set to false, 'Total-Count' header will not be provided.",
        "schema": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "securitySchemes": {
      "oauth2_client_credentials": {
        "type": "oauth2",
        "description": "Ed-Fi ODS/API OAuth 2.0 Client Credentials Grant Type authorization",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "HOST_URL/oauth/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2_client_credentials": [ ]
    }
  ],
  "tags": [
    {
      "name": "absenceEventCategoryDescriptors",
      "description": "This descriptor describes the type of absence"
    },
    {
      "name": "academicHonorCategoryDescriptors",
      "description": "A designation of the type of academic distinctions earned by or awarded to the student."
    },
    {
      "name": "academicSubjectDescriptors",
      "description": "This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language)."
    },
    {
      "name": "accommodationDescriptors",
      "description": "This descriptor defines variations used in how an assessment is presented or taken."
    },
    {
      "name": "accountTypeDescriptors",
      "description": "The type of account used in accounting such as revenue, expenditure, or balance sheet."
    },
    {
      "name": "achievementCategoryDescriptors",
      "description": "This descriptor defines the category of achievement attributed to the learner."
    },
    {
      "name": "additionalCreditTypeDescriptors",
      "description": "The type of additional credits or units of value awarded for the completion of a course."
    },
    {
      "name": "addressTypeDescriptors",
      "description": "The type of address listed for an individual or organization."
    },
    {
      "name": "administrationEnvironmentDescriptors",
      "description": "The environment in which the test was administered."
    },
    {
      "name": "administrativeFundingControlDescriptors",
      "description": "This descriptor holds the type of education institution as classified by its funding source (e.g., public or private)."
    },
    {
      "name": "ancestryEthnicOriginDescriptors",
      "description": "The original peoples or cultures with which the individual identifies."
    },
    {
      "name": "assessmentCategoryDescriptors",
      "description": "This descriptor holds the category of an assessment based on format and content."
    },
    {
      "name": "assessmentIdentificationSystemDescriptors",
      "description": "This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment."
    },
    {
      "name": "assessmentItemCategoryDescriptors",
      "description": "Category or type of the assessment item."
    },
    {
      "name": "assessmentItemResultDescriptors",
      "description": "The analyzed result of a student's response to an assessment item.. For example:     Correct     Incorrect     Met standard     ..."
    },
    {
      "name": "assessmentPeriodDescriptors",
      "description": "This descriptor holds the period of time window in which an assessment is supposed to be administered."
    },
    {
      "name": "assessmentReportingMethodDescriptors",
      "description": "This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade."
    },
    {
      "name": "assignmentLateStatusDescriptors",
      "description": "Status of whether the assignment was submitted after the due date and/or marked as late."
    },
    {
      "name": "attemptStatusDescriptors",
      "description": "This descriptor describes a student's completion status for a section."
    },
    {
      "name": "attendanceEventCategoryDescriptors",
      "description": "This descriptor holds the category of the attendance event (e.g., tardy). The map to known enumeration values is required."
    },
    {
      "name": "barrierToInternetAccessInResidenceDescriptors",
      "description": "An indication of the barrier to having internet access in the student s primary place of residence."
    },
    {
      "name": "behaviorDescriptors",
      "description": "This descriptor holds the categories of behavior describing a discipline incident."
    },
    {
      "name": "busRouteDescriptors",
      "description": "Identifies the specific route taken by a bus for student transportation."
    },
    {
      "name": "calendarEventDescriptors",
      "description": "This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day)."
    },
    {
      "name": "calendarTypeDescriptors",
      "description": "This descriptor defines the calendar types."
    },
    {
      "name": "careerPathwayDescriptors",
      "description": "The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator."
    },
    {
      "name": "charterApprovalAgencyTypeDescriptors",
      "description": "The type of agency that approved the establishment or continuation of a charter school."
    },
    {
      "name": "charterStatusDescriptors",
      "description": "The category of charter school. For example: School Charter, Open Enrollment Charter."
    },
    {
      "name": "citizenshipStatusDescriptors",
      "description": "An indicator of whether or not the person is a U.S. citizen."
    },
    {
      "name": "classroomPositionDescriptors",
      "description": "This descriptor defines the type of position the staff member holds in a specific class/section."
    },
    {
      "name": "cohortScopeDescriptors",
      "description": "The scope of cohort (e.g., school, district, classroom)."
    },
    {
      "name": "cohortTypeDescriptors",
      "description": "The type of the cohort (e.g., academic intervention, classroom breakout)."
    },
    {
      "name": "cohortYearTypeDescriptors",
      "description": "The enumeration items for the set of cohort years."
    },
    {
      "name": "competencyLevelDescriptors",
      "description": "This descriptor defines various levels for assessed competencies."
    },
    {
      "name": "contactTypeDescriptors",
      "description": "This descriptor defines the set of contact types."
    },
    {
      "name": "contentClassDescriptors",
      "description": "The predominate type or kind characterizing the learning resource."
    },
    {
      "name": "continuationOfServicesReasonDescriptors",
      "description": "In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute. The mapping of descriptor values to known Ed-Fi enumeration values is required."
    },
    {
      "name": "costRateDescriptors",
      "description": "The rate by which a cost applies (e.g. $1 per student)."
    },
    {
      "name": "countryDescriptors",
      "description": "This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes."
    },
    {
      "name": "courseAttemptResultDescriptors",
      "description": "The result from the student's attempt to take the course."
    },
    {
      "name": "courseDefinedByDescriptors",
      "description": "Specifies whether the course was defined by the state education agency, local education agency, school, or national organization."
    },
    {
      "name": "courseGPAApplicabilityDescriptors",
      "description": "An indicator of whether or not this course being described is included in the computation of the student's Grade Point Average, and if so, if it is weighted differently than regular courses."
    },
    {
      "name": "courseIdentificationSystemDescriptors",
      "description": "This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students."
    },
    {
      "name": "courseLevelCharacteristicDescriptors",
      "description": "The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc."
    },
    {
      "name": "courseRepeatCodeDescriptors",
      "description": "Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student's academic grade average."
    },
    {
      "name": "credentialFieldDescriptors",
      "description": "This descriptor defines the fields of certification that the state education agency offers to teachers."
    },
    {
      "name": "credentialTypeDescriptors",
      "description": "An indication of the category of credential an individual holds."
    },
    {
      "name": "creditCategoryDescriptors",
      "description": "A categorization for the course transcript credits."
    },
    {
      "name": "creditTypeDescriptors",
      "description": "The type of credits or units of value awarded for the completion of a course."
    },
    {
      "name": "crisisTypeDescriptors",
      "description": "The type or category of crisis."
    },
    {
      "name": "cteProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a CTE program."
    },
    {
      "name": "curriculumUsedDescriptors",
      "description": "The type of curriculum used in an early learning classroom or group."
    },
    {
      "name": "deliveryMethodDescriptors",
      "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school."
    },
    {
      "name": "diagnosisDescriptors",
      "description": "This descriptor defines diagnoses that interventions are intended to target."
    },
    {
      "name": "diplomaLevelDescriptors",
      "description": "The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements."
    },
    {
      "name": "diplomaTypeDescriptors",
      "description": "The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements."
    },
    {
      "name": "disabilityDescriptors",
      "description": "This descriptor defines a student's impairment."
    },
    {
      "name": "disabilityDesignationDescriptors",
      "description": "The type of disability designation (e.g., IDEA, Section 504)."
    },
    {
      "name": "disabilityDeterminationSourceTypeDescriptors",
      "description": "The source that provided the disability determination."
    },
    {
      "name": "disciplineActionLengthDifferenceReasonDescriptors",
      "description": "Indicates the reason for the difference, if any, between the official and actual lengths of a student's disciplinary assignment."
    },
    {
      "name": "disciplineDescriptors",
      "description": "This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident."
    },
    {
      "name": "disciplineIncidentParticipationCodeDescriptors",
      "description": "The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter."
    },
    {
      "name": "displacedStudentStatusDescriptors",
      "description": "Indicates whether a student has been displaced as a result of a crisis event."
    },
    {
      "name": "educationalEnvironmentDescriptors",
      "description": "The setting in which a child receives education and related services."
    },
    {
      "name": "educationOrganizationAssociationTypeDescriptors",
      "description": "The type of education organization association being represented."
    },
    {
      "name": "educationOrganizationCategoryDescriptors",
      "description": "The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
    },
    {
      "name": "educationOrganizationIdentificationSystemDescriptors",
      "description": "This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations."
    },
    {
      "name": "educationPlanDescriptors",
      "description": "The type of education plan(s) the student is following, if appropriate."
    },
    {
      "name": "electronicMailTypeDescriptors",
      "description": "The type of email listed for an individual or organization."
    },
    {
      "name": "eligibilityDelayReasonDescriptors",
      "description": "The reason why the eligibility determination was completed beyond the required timeframe."
    },
    {
      "name": "eligibilityEvaluationTypeDescriptors",
      "description": "Indicates if this is an initial evaluation or a reevaluation."
    },
    {
      "name": "employmentStatusDescriptors",
      "description": "This descriptor defines the type of employment or contract."
    },
    {
      "name": "enrollmentTypeDescriptors",
      "description": "The type of enrollment reflected by the StudentSchoolAssociation."
    },
    {
      "name": "entryGradeLevelReasonDescriptors",
      "description": "The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term."
    },
    {
      "name": "entryTypeDescriptors",
      "description": "This descriptor defines the process by which a student enters a school during a given academic session."
    },
    {
      "name": "evaluationDelayReasonDescriptors",
      "description": "Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe."
    },
    {
      "name": "eventCircumstanceDescriptors",
      "description": "An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc."
    },
    {
      "name": "exitWithdrawTypeDescriptors",
      "description": "This descriptor defines the circumstances under which the student exited from membership in an educational institution."
    },
    {
      "name": "financialCollectionDescriptors",
      "description": "The accounting period or grouping for which financial information is collected."
    },
    {
      "name": "gradebookEntryTypeDescriptors",
      "description": "The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc."
    },
    {
      "name": "gradeLevelDescriptors",
      "description": "This descriptor defines the set of grade levels. The map to known Ed-Fi enumeration values is required."
    },
    {
      "name": "gradePointAverageTypeDescriptors",
      "description": "The system used for calculating the grade point average for an individual."
    },
    {
      "name": "gradeTypeDescriptors",
      "description": "The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period)."
    },
    {
      "name": "gradingPeriodDescriptors",
      "description": "This descriptor defines the state's name of the period for which grades are reported. The mapping of descriptor values to known Ed-Fi enumeration values is required."
    },
    {
      "name": "graduationPlanTypeDescriptors",
      "description": "This descriptor defines the set of graduation plan types."
    },
    {
      "name": "gunFreeSchoolsActReportingStatusDescriptors",
      "description": "An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921."
    },
    {
      "name": "homelessPrimaryNighttimeResidenceDescriptors",
      "description": "The primary nighttime residence of the student at the time the student is identified as homeless."
    },
    {
      "name": "homelessProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a homeless program."
    },
    {
      "name": "ideaPartDescriptors",
      "description": "Indicates if the evaluation is done under Part B IDEA or Part C IDEA."
    },
    {
      "name": "identificationDocumentUseDescriptors",
      "description": "Identifies the type of use given to an identification document."
    },
    {
      "name": "immunizationTypeDescriptors",
      "description": "An indication of the type of immunization that an individual has satisfactorily received."
    },
    {
      "name": "incidentLocationDescriptors",
      "description": "Identifies where the incident occurred and whether or not it occurred on school property."
    },
    {
      "name": "indicatorDescriptors",
      "description": "The name or code for the indicator or metric."
    },
    {
      "name": "indicatorGroupDescriptors",
      "description": "The name for a group of indicators."
    },
    {
      "name": "indicatorLevelDescriptors",
      "description": "The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is \"not submitted.\""
    },
    {
      "name": "institutionTelephoneNumberTypeDescriptors",
      "description": "The type of communication number listed for an organization."
    },
    {
      "name": "interactivityStyleDescriptors",
      "description": "The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed."
    },
    {
      "name": "internetAccessDescriptors",
      "description": "The type of Internet access available."
    },
    {
      "name": "internetAccessTypeInResidenceDescriptors",
      "description": "The primary type of internet service used in the student s primary place of residence."
    },
    {
      "name": "internetPerformanceInResidenceDescriptors",
      "description": "An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence."
    },
    {
      "name": "interventionClassDescriptors",
      "description": "The way in which an intervention is used: curriculum, supplement, or practice."
    },
    {
      "name": "interventionEffectivenessRatingDescriptors",
      "description": "An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects."
    },
    {
      "name": "languageDescriptors",
      "description": "This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name."
    },
    {
      "name": "languageInstructionProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program."
    },
    {
      "name": "languageUseDescriptors",
      "description": "The category denoting how a language is used."
    },
    {
      "name": "learningStandardCategoryDescriptors",
      "description": "An additional classification of the type of a specific learning standard."
    },
    {
      "name": "learningStandardEquivalenceStrengthDescriptors",
      "description": "A measure that indicates the strength or quality of the equivalence relationship."
    },
    {
      "name": "learningStandardScopeDescriptors",
      "description": "Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body."
    },
    {
      "name": "levelOfEducationDescriptors",
      "description": "This descriptor defines the different levels of education achievable."
    },
    {
      "name": "licenseStatusDescriptors",
      "description": "This descriptor defines the license statuses."
    },
    {
      "name": "licenseTypeDescriptors",
      "description": "This descriptor defines the type of a license."
    },
    {
      "name": "limitedEnglishProficiencyDescriptors",
      "description": "This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient. The mapping of descriptor values to known Ed-Fi enumeration values is required."
    },
    {
      "name": "localeDescriptors",
      "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban)."
    },
    {
      "name": "localEducationAgencyCategoryDescriptors",
      "description": "The category of local education agency/district. For example: Independent or Charter."
    },
    {
      "name": "magnetSpecialProgramEmphasisSchoolDescriptors",
      "description": "A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language)."
    },
    {
      "name": "mediumOfInstructionDescriptors",
      "description": "The media through which teachers provide instruction to students and students and teachers communicate about instructional matters."
    },
    {
      "name": "methodCreditEarnedDescriptors",
      "description": "The method the credits were earned, for example:  Classroom, Examination, Transfer."
    },
    {
      "name": "migrantEducationProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program."
    },
    {
      "name": "modelEntityDescriptors",
      "description": "The class of a domain entity in the Ed-Fi data model."
    },
    {
      "name": "monitoredDescriptors",
      "description": "This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services."
    },
    {
      "name": "neglectedOrDelinquentProgramDescriptors",
      "description": "This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA)."
    },
    {
      "name": "neglectedOrDelinquentProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program."
    },
    {
      "name": "networkPurposeDescriptors",
      "description": "The purpose(s) of the network, e.g. shared services, collective procurement, etc."
    },
    {
      "name": "nonMedicalImmunizationExemptionDescriptors",
      "description": "The type of nonmedical exemption from vaccination claimed by the student's parent or guardian."
    },
    {
      "name": "operationalStatusDescriptors",
      "description": "The current operational status of the education organization (e.g., active, inactive)."
    },
    {
      "name": "otherNameTypeDescriptors",
      "description": "The types of alternate names for a person."
    },
    {
      "name": "participationDescriptors",
      "description": "This descriptor defines participation in a yearly English language assessment."
    },
    {
      "name": "participationStatusDescriptors",
      "description": "The student's program participation status."
    },
    {
      "name": "performanceBaseConversionDescriptors",
      "description": "Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic."
    },
    {
      "name": "performanceLevelDescriptors",
      "description": "This descriptor defines various levels or thresholds for performance on the assessment."
    },
    {
      "name": "personalInformationVerificationDescriptors",
      "description": "The evidence presented to verify one's personal identity; for example: driver's license, passport, birth certificate, etc."
    },
    {
      "name": "platformTypeDescriptors",
      "description": "The platforms with which an assessment may be delivered."
    },
    {
      "name": "populationServedDescriptors",
      "description": "The type of students the Section is offered and tailored to."
    },
    {
      "name": "postingResultDescriptors",
      "description": "Indication of whether the position was filled or retired without filling."
    },
    {
      "name": "postSecondaryEventCategoryDescriptors",
      "description": "A code describing the type of post-secondary event (e.g., college application or acceptance)."
    },
    {
      "name": "postSecondaryInstitutionLevelDescriptors",
      "description": "A classification of a postsecondary institution's highest level of offering. Default values are based on the Carnegie Classifications."
    },
    {
      "name": "primaryLearningDeviceAccessDescriptors",
      "description": "An indication of whether the primary learning device is shared or not shared with another individual."
    },
    {
      "name": "primaryLearningDeviceAwayFromSchoolDescriptors",
      "description": "The type of device the student uses most often to complete learning activities away from school."
    },
    {
      "name": "primaryLearningDeviceProviderDescriptors",
      "description": "The provider of the primary learning device."
    },
    {
      "name": "proficiencyDescriptors",
      "description": "This descriptor defines proficiency levels for a yearly English language assessment."
    },
    {
      "name": "programAssignmentDescriptors",
      "description": "This descriptor defines the name of the education program for which a teacher is assigned to a school."
    },
    {
      "name": "programCharacteristicDescriptors",
      "description": "This descriptor defines important characteristics of the Program, such as categories or particular indications."
    },
    {
      "name": "programEvaluationPeriodDescriptors",
      "description": "The period for the evaluation."
    },
    {
      "name": "programEvaluationTypeDescriptors",
      "description": "The type of the evaluation."
    },
    {
      "name": "programSponsorDescriptors",
      "description": "Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual's participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org)."
    },
    {
      "name": "programTypeDescriptors",
      "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies."
    },
    {
      "name": "progressDescriptors",
      "description": "This descriptor defines yearly progress or growth from last year's assessment."
    },
    {
      "name": "progressLevelDescriptors",
      "description": "This descriptor defines progress measured from pre- to post-test."
    },
    {
      "name": "providerCategoryDescriptors",
      "description": "This descriptor holds the category of the provider."
    },
    {
      "name": "providerProfitabilityDescriptors",
      "description": "This descriptor indicates the profitability status of the provider."
    },
    {
      "name": "providerStatusDescriptors",
      "description": "This descriptor defines the status of the provider."
    },
    {
      "name": "publicationStatusDescriptors",
      "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown)."
    },
    {
      "name": "questionFormDescriptors",
      "description": "The form or type of question."
    },
    {
      "name": "raceDescriptors",
      "description": "The enumeration items defining the racial categories which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies."
    },
    {
      "name": "ratingLevelDescriptors",
      "description": "The descriptive level(s) of ratings (cut scores) for evaluation."
    },
    {
      "name": "reasonExitedDescriptors",
      "description": "This descriptor defines the reason a student exited a program."
    },
    {
      "name": "reasonNotTestedDescriptors",
      "description": "The primary reason student is not tested."
    },
    {
      "name": "recognitionTypeDescriptors",
      "description": "The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity."
    },
    {
      "name": "relationDescriptors",
      "description": "The nature of an individual's relationship to a student."
    },
    {
      "name": "repeatIdentifierDescriptors",
      "description": "An indication as to whether a student has previously taken a given course."
    },
    {
      "name": "reporterDescriptionDescriptors",
      "description": "This descriptor defines the type of individual who reported an incident."
    },
    {
      "name": "reportingTagDescriptors",
      "description": "A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting."
    },
    {
      "name": "residencyStatusDescriptors",
      "description": "This descriptor defines indications of the location of a person's legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit."
    },
    {
      "name": "responseIndicatorDescriptors",
      "description": "Indicator of the response."
    },
    {
      "name": "responsibilityDescriptors",
      "description": "This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding)."
    },
    {
      "name": "restraintEventReasonDescriptors",
      "description": "The items of categorization of the circumstances or reason for the restraint."
    },
    {
      "name": "resultDatatypeTypeDescriptors",
      "description": "The results can be expressed as a number, percentile, range, level, etc."
    },
    {
      "name": "retestIndicatorDescriptors",
      "description": "Indicator if the test was retaken."
    },
    {
      "name": "schoolCategoryDescriptors",
      "description": "The category of school. For example: High School, Middle School, Elementary School."
    },
    {
      "name": "schoolChoiceBasisDescriptors",
      "description": "The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state)."
    },
    {
      "name": "schoolChoiceImplementStatusDescriptors",
      "description": "An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended."
    },
    {
      "name": "schoolFoodServiceProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a school food service program."
    },
    {
      "name": "schoolTypeDescriptors",
      "description": "The type of education institution as classified by its primary focus such as Alternative, Career and Technical Education, Regular, or Special Education schools."
    },
    {
      "name": "sectionCharacteristicDescriptors",
      "description": "This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded."
    },
    {
      "name": "sectionTypeDescriptors",
      "description": "Specifies whether the section is for attendance only, credit only, or both."
    },
    {
      "name": "separationDescriptors",
      "description": "Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc."
    },
    {
      "name": "separationReasonDescriptors",
      "description": "This descriptor defines the reasons for terminating the employment."
    },
    {
      "name": "serviceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a program."
    },
    {
      "name": "sexDescriptors",
      "description": "A person's birth sex."
    },
    {
      "name": "sourceSystemDescriptors",
      "description": "This descriptor defines the originating record source system."
    },
    {
      "name": "specialEducationExitReasonDescriptors",
      "description": "The reason why a person stops receiving special education services."
    },
    {
      "name": "specialEducationProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a special education program."
    },
    {
      "name": "specialEducationSettingDescriptors",
      "description": "This descriptor defines the major instructional setting (more than 50 percent of a student's special education program)."
    },
    {
      "name": "staffClassificationDescriptors",
      "description": "This descriptor defines an individual's title of employment, official status or rank."
    },
    {
      "name": "staffIdentificationSystemDescriptors",
      "description": "This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff."
    },
    {
      "name": "staffLeaveEventCategoryDescriptors",
      "description": "A code describing the type of the leave event."
    },
    {
      "name": "stateAbbreviationDescriptors",
      "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located."
    },
    {
      "name": "studentCharacteristicDescriptors",
      "description": "This descriptor captures important characteristics of the student's environment or situation. Generally used for non-program-based student characteristics."
    },
    {
      "name": "studentIdentificationSystemDescriptors",
      "description": "This descriptor defines the originating record system and code that is used for record-keeping purposes of the student."
    },
    {
      "name": "studentParticipationCodeDescriptors",
      "description": "The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter."
    },
    {
      "name": "submissionStatusDescriptors",
      "description": "The status of the student's submission."
    },
    {
      "name": "supporterMilitaryConnectionDescriptors",
      "description": "Military connection of the person/people whom the student is a dependent of."
    },
    {
      "name": "surveyCategoryDescriptors",
      "description": "The descriptor holds the category or type of survey."
    },
    {
      "name": "surveyLevelDescriptors",
      "description": "Provides information about the respondents of a survey and how they can be grouped together."
    },
    {
      "name": "teachingCredentialBasisDescriptors",
      "description": "An indication of the pre-determined criteria for granting the teaching credential that an individual holds."
    },
    {
      "name": "teachingCredentialDescriptors",
      "description": "This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services."
    },
    {
      "name": "technicalSkillsAssessmentDescriptors",
      "description": "This descriptor defines the results of technical skills assessment aligned with industry recognized standards."
    },
    {
      "name": "telephoneNumberTypeDescriptors",
      "description": "The type of communication number listed for an individual."
    },
    {
      "name": "termDescriptors",
      "description": "A distinct period of time into which the academic year is divided. These could be  semesters ,  trimesters  or  quarters , depending on the school or district s academic calendar."
    },
    {
      "name": "titleIPartAParticipantDescriptors",
      "description": "An indication of the type of Title I program, if any, in which the student is participating and served."
    },
    {
      "name": "titleIPartAProgramServiceDescriptors",
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program."
    },
    {
      "name": "titleIPartASchoolDesignationDescriptors",
      "description": "Denotes the Title I Part A designation for the school."
    },
    {
      "name": "transportationPublicExpenseEligibilityTypeDescriptors",
      "description": "The primary type of eligibility for transporting a student at public expense."
    },
    {
      "name": "transportationTypeDescriptors",
      "description": "The mode or type of transportation utilized by a student to commute to and from school"
    },
    {
      "name": "travelDayofWeekDescriptors",
      "description": "Specifies the day(s) of the week on which student transportation occurs."
    },
    {
      "name": "travelDirectionDescriptors",
      "description": "Indicates the direction of travel for the student transportation route (e.g., to school, from school)."
    },
    {
      "name": "tribalAffiliationDescriptors",
      "description": "An American Indian tribe with which an individual is affiliated."
    },
    {
      "name": "visaDescriptors",
      "description": "An indicator of a non-U.S. citizen's Visa type."
    },
    {
      "name": "weaponDescriptors",
      "description": "This descriptor defines the types of weapon used during an incident."
    }
  ]
}
