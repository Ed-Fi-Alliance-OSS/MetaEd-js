// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when building abstract entity source map should have line, column, text for each property 1`] = `
Object {
  "allowPrimaryKeyUpdates": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "baseEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "baseEntityName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "documentation": Object {
    "column": 4,
    "line": 3,
    "tokenText": "documentation",
  },
  "identityProperties": Array [],
  "isAbstract": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Abstract Entity",
  },
  "metaEdId": Object {
    "column": 29,
    "line": 2,
    "tokenText": "[1]",
  },
  "metaEdName": Object {
    "column": 18,
    "line": 2,
    "tokenText": "EntityName",
  },
  "properties": Array [],
  "queryableFields": Array [],
  "type": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Abstract Entity",
  },
}
`;

exports[`when building domain entity source map should have line, column, text for each property 1`] = `
Object {
  "allowPrimaryKeyUpdates": Object {
    "column": 4,
    "line": 5,
    "tokenText": "allow primary key updates",
  },
  "baseEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "baseEntityName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "documentation": Object {
    "column": 4,
    "line": 3,
    "tokenText": "documentation",
  },
  "identityProperties": Array [],
  "isAbstract": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "metaEdId": Object {
    "column": 27,
    "line": 2,
    "tokenText": "[1]",
  },
  "metaEdName": Object {
    "column": 16,
    "line": 2,
    "tokenText": "EntityName",
  },
  "properties": Array [],
  "queryableFields": Array [],
  "type": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Domain Entity",
  },
}
`;

exports[`when building domain entity with invalid trailing text should have extraneous input error 1`] = `
Array [
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'association', 'bool', 'choice', 'common', 'common extension', 'currency', 'date', 'datetime', 'decimal', 'descriptor', 'domain entity', 'duration', 'enumeration', 'inline common', 'integer', 'percent', 'shared decimal', 'shared integer', 'shared short', 'shared string', 'short', 'string', 'time', 'year'}, column: 0, line: 15, token: TrailingText",
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'association', 'bool', 'choice', 'common', 'common extension', 'currency', 'date', 'datetime', 'decimal', 'descriptor', 'domain entity', 'duration', 'enumeration', 'inline common', 'integer', 'percent', 'shared decimal', 'shared integer', 'shared short', 'shared string', 'short', 'string', 'time', 'year'}, column: 0, line: 15, token: TrailingText",
]
`;

exports[`when building domain entity with lowercase domain entity name should have no viable alternative error 1`] = `
Array [
  "no viable alternative at input 'Domain Entityentity', column: 16, line: 2, token: entity",
  "no viable alternative at input 'Domain Entityentity', column: 16, line: 2, token: entity",
]
`;

exports[`when building domain entity with lowercase project extension should have extraneous input error 1`] = `
Array [
  "extraneous input 'project' expecting {'core', ID}, column: 26, line: 1, token: project",
  "extraneous input 'project' expecting {'core', ID}, column: 26, line: 1, token: project",
]
`;

exports[`when building domain entity with no documentation should have mismatched input error 1`] = `
Array [
  "mismatched input 'integer' expecting 'documentation', column: 4, line: 3, token: integer",
  "mismatched input 'integer' expecting 'documentation', column: 4, line: 3, token: integer",
]
`;

exports[`when building domain entity with no domain entity name should have no viable alternative error 1`] = `
Array [
  "no viable alternative at input 'Domain Entity[1]', column: 17, line: 2, token: [1]",
  "no viable alternative at input 'Domain Entity[1]', column: 17, line: 2, token: [1]",
]
`;

exports[`when building domain entity with no end namespace should have extraneous input eof error 1`] = `
Array [
  "missing 'End Namespace' at '<EOF>', column: 19, line: 14, token: <EOF>",
  "missing 'End Namespace' at '<EOF>', column: 19, line: 14, token: <EOF>",
]
`;

exports[`when building domain entity with no metaed id should have token recognition error 1`] = `
Array [
  "token recognition error at: '[]', column: 27, line: 2, token: ",
  "token recognition error at: '[]', column: 27, line: 2, token: ",
]
`;

exports[`when building domain entity with no namespace should have missing namespace id error 1`] = `
Array [
  "missing NAMESPACE_ID at 'ProjectExtension', column: 17, line: 1, token: ProjectExtension",
  "missing NAMESPACE_ID at 'ProjectExtension', column: 17, line: 1, token: ProjectExtension",
]
`;

exports[`when building domain entity with no project extension should have extraneous input and mismatched input error 1`] = `
Array [
  "extraneous input 'Domain Entity' expecting {'core', ID}, column: 2, line: 2, token: Domain Entity",
  "mismatched input '[1]' expecting {'Abstract Entity', 'Association', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain'}, column: 27, line: 2, token: [1]",
  "extraneous input 'Domain Entity' expecting {'core', ID}, column: 2, line: 2, token: Domain Entity",
  "mismatched input '[1]' expecting {'Abstract Entity', 'Association', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain'}, column: 27, line: 2, token: [1]",
]
`;

exports[`when building domain entity with no properties should have mismatched input error 1`] = `
Array [
  "mismatched input 'End Namespace' expecting {'association', 'bool', 'choice', 'common', 'common extension', 'currency', 'date', 'datetime', 'decimal', 'descriptor', 'domain entity', 'duration', 'enumeration', 'inline common', 'integer', 'percent', 'shared decimal', 'shared integer', 'shared short', 'shared string', 'short', 'string', 'time', 'year', 'allow primary key updates'}, column: 0, line: 5, token: End Namespace",
  "mismatched input 'End Namespace' expecting {'association', 'bool', 'choice', 'common', 'common extension', 'currency', 'date', 'datetime', 'decimal', 'descriptor', 'domain entity', 'duration', 'enumeration', 'inline common', 'integer', 'percent', 'shared decimal', 'shared integer', 'shared short', 'shared string', 'short', 'string', 'time', 'year', 'allow primary key updates'}, column: 0, line: 5, token: End Namespace",
]
`;

exports[`when building domain entity with no top level entity should have mismatched input error 1`] = `
Array [
  "mismatched input 'documentation' expecting {'Abstract Entity', 'Association', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain'}, column: 2, line: 2, token: documentation",
  "mismatched input 'documentation' expecting {'Abstract Entity', 'Association', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain'}, column: 2, line: 2, token: documentation",
]
`;

exports[`when building domain entity with shared integer reference should have correct sourcemap 1`] = `
Object {
  "baseKeyName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "documentation": Object {
    "column": 6,
    "line": 6,
    "tokenText": "documentation",
  },
  "documentationInherited": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "hasRestriction": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isIdentityRename": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isOptional": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isOptionalCollection": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isPartOfIdentity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isQueryableOnly": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isRequired": Object {
    "column": 6,
    "line": 8,
    "tokenText": "is required",
  },
  "isRequiredCollection": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "maxValue": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "mergeTargetedBy": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "mergedProperties": Array [],
  "metaEdId": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "metaEdName": Object {
    "column": 44,
    "line": 5,
    "tokenText": "PropertyName",
  },
  "minValue": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "namespace": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "parentEntity": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Domain Entity",
  },
  "parentEntityName": Object {
    "column": 16,
    "line": 2,
    "tokenText": "EntityName",
  },
  "propertyPathName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "referencedEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "referencedType": Object {
    "column": 19,
    "line": 5,
    "tokenText": "SharedPropertyType",
  },
  "shortenTo": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "type": Object {
    "column": 4,
    "line": 5,
    "tokenText": "shared integer",
  },
  "withContext": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
}
`;

exports[`when building domain entity with shared integer reference without name should have correct sourcemap 1`] = `
Object {
  "baseKeyName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "documentation": Object {
    "column": 6,
    "line": 6,
    "tokenText": "documentation",
  },
  "documentationInherited": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "hasRestriction": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isIdentityRename": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isOptional": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isOptionalCollection": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isPartOfIdentity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isQueryableOnly": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "isRequired": Object {
    "column": 6,
    "line": 8,
    "tokenText": "is required",
  },
  "isRequiredCollection": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "maxValue": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "mergeTargetedBy": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "mergedProperties": Array [],
  "metaEdId": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "metaEdName": Object {
    "column": 19,
    "line": 5,
    "tokenText": "SharedPropertyType",
  },
  "minValue": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "namespace": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "parentEntity": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Domain Entity",
  },
  "parentEntityName": Object {
    "column": 16,
    "line": 2,
    "tokenText": "EntityName",
  },
  "propertyPathName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "referencedEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "referencedType": Object {
    "column": 19,
    "line": 5,
    "tokenText": "SharedPropertyType",
  },
  "shortenTo": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "type": Object {
    "column": 4,
    "line": 5,
    "tokenText": "shared integer",
  },
  "withContext": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
}
`;

exports[`when building duplicate domain entities should have validation failures for each entity: when building duplicate domain entities should have validation failures for each entity -> DE 1 message 1`] = `"Domain Entity named EntityName is a duplicate declaration of that name."`;

exports[`when building duplicate domain entities should have validation failures for each entity: when building duplicate domain entities should have validation failures for each entity -> DE 1 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 15,
  "tokenText": "Domain Entity",
}
`;

exports[`when building duplicate domain entities should have validation failures for each entity: when building duplicate domain entities should have validation failures for each entity -> DE 2 message 1`] = `"Domain Entity named EntityName is a duplicate declaration of that name."`;

exports[`when building duplicate domain entities should have validation failures for each entity: when building duplicate domain entities should have validation failures for each entity -> DE 2 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Domain Entity",
}
`;

exports[`when building duplicate property names should have validation failures for each property: when building duplicate property names should have validation failures for each property -> property 1 message 1`] = `"Property named StringPropertyName is a duplicate declaration of that name."`;

exports[`when building duplicate property names should have validation failures for each property: when building duplicate property names should have validation failures for each property -> property 1 sourceMap 1`] = `
Object {
  "column": 4,
  "line": 15,
  "tokenText": "string",
}
`;

exports[`when building duplicate property names should have validation failures for each property: when building duplicate property names should have validation failures for each property -> property 2 message 1`] = `"Property named StringPropertyName is a duplicate declaration of that name."`;

exports[`when building duplicate property names should have validation failures for each property: when building duplicate property names should have validation failures for each property -> property 2 sourceMap 1`] = `
Object {
  "column": 4,
  "line": 9,
  "tokenText": "string",
}
`;

exports[`when building duplicate property names with same with context name should have validation failures for each property: when building duplicate property names with same with context name should have validation failures for each property -> property 1 message 1`] = `"Property named StringPropertyName is a duplicate declaration of that name."`;

exports[`when building duplicate property names with same with context name should have validation failures for each property: when building duplicate property names with same with context name should have validation failures for each property -> property 1 sourceMap 1`] = `
Object {
  "column": 4,
  "line": 16,
  "tokenText": "string",
}
`;

exports[`when building duplicate property names with same with context name should have validation failures for each property: when building duplicate property names with same with context name should have validation failures for each property -> property 2 message 1`] = `"Property named StringPropertyName is a duplicate declaration of that name."`;

exports[`when building duplicate property names with same with context name should have validation failures for each property: when building duplicate property names with same with context name should have validation failures for each property -> property 2 sourceMap 1`] = `
Object {
  "column": 4,
  "line": 9,
  "tokenText": "string",
}
`;
