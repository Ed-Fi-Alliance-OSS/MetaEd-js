// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when building duplicate enumerations should have validation failures for each entity: when building duplicate enumerations should have validation failures for each entity -> Enumeration 1 message 1`] = `"Enumeration named EntityName is a duplicate declaration of that name."`;

exports[`when building duplicate enumerations should have validation failures for each entity: when building duplicate enumerations should have validation failures for each entity -> Enumeration 1 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 8,
  "tokenText": "Enumeration",
}
`;

exports[`when building duplicate enumerations should have validation failures for each entity: when building duplicate enumerations should have validation failures for each entity -> Enumeration 2 message 1`] = `"Enumeration named EntityName is a duplicate declaration of that name."`;

exports[`when building duplicate enumerations should have validation failures for each entity: when building duplicate enumerations should have validation failures for each entity -> Enumeration 2 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Enumeration",
}
`;

exports[`when building enumeration source map should have line, column, text for each property 1`] = `
Object {
  "allowPrimaryKeyUpdates": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "baseEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "baseEntityName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "documentation": Object {
    "column": 4,
    "line": 3,
    "tokenText": "documentation",
  },
  "enumerationItems": Array [
    Object {
      "column": 4,
      "line": 5,
      "tokenText": "item",
    },
    Object {
      "column": 4,
      "line": 8,
      "tokenText": "item",
    },
  ],
  "identityProperties": Array [],
  "metaEdId": Object {
    "column": 25,
    "line": 2,
    "tokenText": "[1]",
  },
  "metaEdName": Object {
    "column": 14,
    "line": 2,
    "tokenText": "EntityName",
  },
  "properties": Array [],
  "queryableFields": Array [],
  "type": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Enumeration",
  },
}
`;

exports[`when building enumeration source map should have line, column, text for each property 2`] = `
Object {
  "documentation": Object {
    "column": 6,
    "line": 6,
    "tokenText": "documentation",
  },
  "metaEdId": Object {
    "column": 32,
    "line": 5,
    "tokenText": "[2]",
  },
  "metaEdName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "shortDescription": Object {
    "column": 9,
    "line": 5,
    "tokenText": "\\"ItemShortDescription\\"",
  },
  "type": Object {
    "column": 4,
    "line": 5,
    "tokenText": "item",
  },
  "typeHumanizedName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
}
`;

exports[`when building enumeration source map should have line, column, text for each property 3`] = `
Object {
  "documentation": Object {
    "column": 6,
    "line": 9,
    "tokenText": "documentation",
  },
  "metaEdId": Object {
    "column": 33,
    "line": 8,
    "tokenText": "[3]",
  },
  "metaEdName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "shortDescription": Object {
    "column": 9,
    "line": 8,
    "tokenText": "\\"ItemShortDescription2\\"",
  },
  "type": Object {
    "column": 4,
    "line": 8,
    "tokenText": "item",
  },
  "typeHumanizedName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
}
`;

exports[`when building enumeration with empty enumeration item description should have extraneous input error 1`] = `
Array [
  "missing TEXT at '[2]', column: 6, line: 5, token: [2]",
  "missing TEXT at '[2]', column: 6, line: 5, token: [2]",
]
`;

exports[`when building enumeration with empty enumeration item description should have missing text error 1`] = `
Array [
  "missing TEXT at '[2]', column: 6, line: 5, token: [2]",
  "missing TEXT at '[2]', column: 6, line: 5, token: [2]",
]
`;

exports[`when building enumeration with invalid trailing text should have extraneous input error 1`] = `
Array [
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'item'}, column: 0, line: 8, token: TrailingText",
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'item'}, column: 0, line: 8, token: TrailingText",
]
`;

exports[`when building enumeration with lowercase enumeration name should have extraneous input error 1`] = `
Array [
  "extraneous input 'entity' expecting ID, column: 14, line: 2, token: entity",
  "extraneous input 'entity' expecting ID, column: 14, line: 2, token: entity",
]
`;

exports[`when building enumeration with no documentation should have mismatched input error 1`] = `
Array [
  "mismatched input 'item' expecting 'documentation', column: 4, line: 3, token: item",
  "mismatched input 'item' expecting 'documentation', column: 4, line: 3, token: item",
]
`;

exports[`when building enumeration with no enumeration item should have mismatched input error 1`] = `
Array [
  "mismatched input 'End Namespace' expecting 'item', column: 0, line: 5, token: End Namespace",
  "mismatched input 'End Namespace' expecting 'item', column: 0, line: 5, token: End Namespace",
]
`;

exports[`when building enumeration with no enumeration name should have missing id error 1`] = `
Array [
  "missing ID at 'documentation', column: 4, line: 3, token: documentation",
  "missing ID at 'documentation', column: 4, line: 3, token: documentation",
]
`;

exports[`when building school year enumeration should have source map with line, column, text 1`] = `
Object {
  "allowPrimaryKeyUpdates": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "baseEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "baseEntityName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "documentation": Object {
    "column": 4,
    "line": 3,
    "tokenText": "documentation",
  },
  "enumerationItems": Array [
    Object {
      "column": 4,
      "line": 5,
      "tokenText": "item",
    },
  ],
  "identityProperties": Array [],
  "metaEdId": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "metaEdName": Object {
    "column": 14,
    "line": 2,
    "tokenText": "SchoolYear",
  },
  "properties": Array [],
  "queryableFields": Array [],
  "type": Object {
    "column": 14,
    "line": 2,
    "tokenText": "SchoolYear",
  },
}
`;
