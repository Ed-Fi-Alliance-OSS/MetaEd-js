// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when building duplicate interchange extensions should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 1 message 1`] = `"Interchange Extension named InterchangeName is a duplicate declaration of that name."`;

exports[`when building duplicate interchange extensions should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 1 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 5,
  "tokenText": "Interchange",
}
`;

exports[`when building duplicate interchange extensions should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 2 message 1`] = `"Interchange Extension named InterchangeName is a duplicate declaration of that name."`;

exports[`when building duplicate interchange extensions should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 2 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Interchange",
}
`;

exports[`when building duplicate interchanges should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 1 message 1`] = `"Interchange named InterchangeName is a duplicate declaration of that name."`;

exports[`when building duplicate interchanges should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 1 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 11,
  "tokenText": "Interchange",
}
`;

exports[`when building duplicate interchanges should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 2 message 1`] = `"Interchange named InterchangeName is a duplicate declaration of that name."`;

exports[`when building duplicate interchanges should have validation failures for each entity: when building duplicate interchanges should have validation failures for each entity -> Interchange 2 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Interchange",
}
`;

exports[`when building interchange extension with invalid trailing text should have no viable alternative error 1`] = `
Array [
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity'}, column: 0, line: 4, token: TrailingText",
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity'}, column: 0, line: 4, token: TrailingText",
]
`;

exports[`when building interchange extension with lowercase interchange extension name should have no viable alternative error 1`] = `
Array [
  "no viable alternative at input 'InterchangeinterchangeName', column: 14, line: 2, token: interchangeName",
  "no viable alternative at input 'InterchangeinterchangeName', column: 14, line: 2, token: interchangeName",
]
`;

exports[`when building interchange extension with no element property should have mismatched input error 1`] = `
Array [
  "mismatched input 'End Namespace' expecting {'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity'}, column: 0, line: 3, token: End Namespace",
  "mismatched input 'End Namespace' expecting {'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity'}, column: 0, line: 3, token: End Namespace",
]
`;

exports[`when building interchange extension with no interchange extension name should have no viable alternative error 1`] = `
Array [
  "no viable alternative at input 'Interchangeadditions', column: 15, line: 2, token: additions",
  "no viable alternative at input 'Interchangeadditions', column: 15, line: 2, token: additions",
]
`;

exports[`when building interchange with invalid trailing text should have extraneous input error 1`] = `
Array [
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity'}, column: 0, line: 6, token: TrailingText",
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity'}, column: 0, line: 6, token: TrailingText",
]
`;

exports[`when building interchange with lowercase interchange name should have no viable alternative error 1`] = `
Array [
  "no viable alternative at input 'InterchangeinterchangeName', column: 14, line: 2, token: interchangeName",
  "no viable alternative at input 'InterchangeinterchangeName', column: 14, line: 2, token: interchangeName",
]
`;

exports[`when building interchange with no documentation should have mismatched input error 1`] = `
Array [
  "mismatched input 'domain entity' expecting 'documentation', column: 4, line: 3, token: domain entity",
  "mismatched input 'domain entity' expecting 'documentation', column: 4, line: 3, token: domain entity",
]
`;

exports[`when building interchange with no interchange component property should have mismatched input error 1`] = `
Array [
  "mismatched input 'End Namespace' expecting {'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity', 'extended documentation', 'use case documentation'}, column: 0, line: 5, token: End Namespace",
  "mismatched input 'End Namespace' expecting {'association', 'association identity', 'descriptor', 'domain entity', 'domain entity identity', 'extended documentation', 'use case documentation'}, column: 0, line: 5, token: End Namespace",
]
`;

exports[`when building interchange with no interchange name should have no viable alternative error 1`] = `
Array [
  "no viable alternative at input 'Interchange[1]', column: 15, line: 2, token: [1]",
  "no viable alternative at input 'Interchange[1]', column: 15, line: 2, token: [1]",
]
`;

exports[`when building single interchange source map should have element line, column, text for each property 1`] = `
Object {
  "documentation": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "metaEdId": Object {
    "column": 41,
    "line": 9,
    "tokenText": "[2]",
  },
  "metaEdName": Object {
    "column": 4,
    "line": 9,
    "tokenText": "domain entity",
  },
  "referencedEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "referencedType": Object {
    "column": 4,
    "line": 9,
    "tokenText": "domain entity",
  },
  "type": Object {
    "column": 4,
    "line": 9,
    "tokenText": "domain entity",
  },
  "typeHumanizedName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
}
`;

exports[`when building single interchange source map should have identityTemplate line, column, text for each property 1`] = `
Object {
  "documentation": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "metaEdId": Object {
    "column": 59,
    "line": 10,
    "tokenText": "[3]",
  },
  "metaEdName": Object {
    "column": 4,
    "line": 10,
    "tokenText": "domain entity identity",
  },
  "referencedEntity": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
  "referencedType": Object {
    "column": 4,
    "line": 10,
    "tokenText": "domain entity identity",
  },
  "type": Object {
    "column": 4,
    "line": 10,
    "tokenText": "domain entity identity",
  },
  "typeHumanizedName": Object {
    "column": 0,
    "line": 0,
    "tokenText": "NoSourceMap",
  },
}
`;

exports[`when building single interchange source map should have line, column, text for each property 1`] = `
Object {
  "documentation": Object {
    "column": 4,
    "line": 3,
    "tokenText": "documentation",
  },
  "elements": Array [
    Object {
      "column": 4,
      "line": 9,
      "tokenText": "domain entity",
    },
  ],
  "extendedDocumentation": Object {
    "column": 4,
    "line": 5,
    "tokenText": "extended documentation",
  },
  "identityTemplates": Array [
    Object {
      "column": 4,
      "line": 10,
      "tokenText": "domain entity identity",
    },
  ],
  "metaEdId": Object {
    "column": 30,
    "line": 2,
    "tokenText": "[1]",
  },
  "metaEdName": Object {
    "column": 14,
    "line": 2,
    "tokenText": "InterchangeName",
  },
  "type": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Interchange",
  },
  "useCaseDocumentation": Object {
    "column": 4,
    "line": 7,
    "tokenText": "use case documentation",
  },
}
`;
