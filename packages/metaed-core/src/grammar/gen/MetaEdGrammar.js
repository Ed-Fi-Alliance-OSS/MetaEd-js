// Generated from ./packages/metaed-core/src/grammar/language/MetaEdGrammar.g4 by ANTLR 4.9.3
// jshint ignore: start
import antlr4 from 'antlr4';
import MetaEdGrammarListener from './MetaEdGrammarListener.js';

const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0003a\u04f3\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004",
    "\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007",
    "\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f",
    "\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010",
    "\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014",
    "\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017",
    "\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b",
    "\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e",
    "\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004",
    "$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004",
    "+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u0004",
    "2\t2\u00043\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u0004",
    "9\t9\u0004:\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004",
    "@\t@\u0004A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004",
    "G\tG\u0004H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004M\tM\u0004",
    "N\tN\u0004O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004T\tT\u0004",
    "U\tU\u0004V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004[\t[\u0004",
    "\\\t\\\u0004]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004b\tb\u0004",
    "c\tc\u0004d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0004i\ti\u0004",
    "j\tj\u0004k\tk\u0004l\tl\u0004m\tm\u0004n\tn\u0004o\to\u0004p\tp\u0004",
    "q\tq\u0004r\tr\u0004s\ts\u0004t\tt\u0004u\tu\u0004v\tv\u0004w\tw\u0004",
    "x\tx\u0004y\ty\u0004z\tz\u0004{\t{\u0004|\t|\u0004}\t}\u0004~\t~\u0004",
    "\u007f\t\u007f\u0004\u0080\t\u0080\u0004\u0081\t\u0081\u0004\u0082\t",
    "\u0082\u0004\u0083\t\u0083\u0004\u0084\t\u0084\u0004\u0085\t\u0085\u0004",
    "\u0086\t\u0086\u0004\u0087\t\u0087\u0004\u0088\t\u0088\u0004\u0089\t",
    "\u0089\u0004\u008a\t\u008a\u0004\u008b\t\u008b\u0004\u008c\t\u008c\u0003",
    "\u0002\u0006\u0002\u011a\n\u0002\r\u0002\u000e\u0002\u011b\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0006\u0003\u0122\n\u0003\r\u0003",
    "\u000e\u0003\u0123\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u0140\n\u0005",
    "\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f\u0005",
    "\f\u0157\n\f\u0003\f\u0005\f\u015a\n\f\u0003\f\u0003\f\u0006\f\u015e",
    "\n\f\r\f\u000e\f\u015f\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003",
    "\u000f\u0003\u000f\u0003\u000f\u0005\u000f\u0169\n\u000f\u0003\u000f",
    "\u0005\u000f\u016c\n\u000f\u0003\u000f\u0003\u000f\u0005\u000f\u0170",
    "\n\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0007\u000f\u0175\n\u000f",
    "\f\u000f\u000e\u000f\u0178\u000b\u000f\u0003\u0010\u0003\u0010\u0003",
    "\u0010\u0005\u0010\u017d\n\u0010\u0003\u0010\u0005\u0010\u0180\n\u0010",
    "\u0003\u0010\u0003\u0010\u0005\u0010\u0184\n\u0010\u0003\u0010\u0007",
    "\u0010\u0187\n\u0010\f\u0010\u000e\u0010\u018a\u000b\u0010\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011\u0190\n\u0011\u0003",
    "\u0011\u0005\u0011\u0193\n\u0011\u0003\u0011\u0006\u0011\u0196\n\u0011",
    "\r\u0011\u000e\u0011\u0197\u0003\u0012\u0003\u0012\u0003\u0012\u0003",
    "\u0012\u0003\u0012\u0005\u0012\u019f\n\u0012\u0003\u0012\u0005\u0012",
    "\u01a2\n\u0012\u0003\u0012\u0003\u0012\u0006\u0012\u01a6\n\u0012\r\u0012",
    "\u000e\u0012\u01a7\u0003\u0013\u0003\u0013\u0003\u0013\u0005\u0013\u01ad",
    "\n\u0013\u0003\u0013\u0005\u0013\u01b0\n\u0013\u0003\u0013\u0003\u0013",
    "\u0006\u0013\u01b4\n\u0013\r\u0013\u000e\u0013\u01b5\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0005\u0014\u01bb\n\u0014\u0003\u0014\u0005\u0014",
    "\u01be\n\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005",
    "\u0014\u01c4\n\u0014\u0003\u0014\u0005\u0014\u01c7\n\u0014\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0005\u0015\u01cc\n\u0015\u0003\u0015\u0005",
    "\u0015\u01cf\n\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u01d3\n\u0015",
    "\u0003\u0015\u0005\u0015\u01d6\n\u0015\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0005\u0016\u01db\n\u0016\u0003\u0016\u0005\u0016\u01de\n\u0016",
    "\u0003\u0016\u0003\u0016\u0005\u0016\u01e2\n\u0016\u0003\u0016\u0005",
    "\u0016\u01e5\n\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0005\u0017",
    "\u01ea\n\u0017\u0003\u0017\u0005\u0017\u01ed\n\u0017\u0003\u0017\u0003",
    "\u0017\u0005\u0017\u01f1\n\u0017\u0003\u0017\u0003\u0017\u0003\u0018",
    "\u0003\u0018\u0003\u0018\u0005\u0018\u01f8\n\u0018\u0003\u0018\u0005",
    "\u0018\u01fb\n\u0018\u0003\u0018\u0003\u0018\u0006\u0018\u01ff\n\u0018",
    "\r\u0018\u000e\u0018\u0200\u0003\u0019\u0003\u0019\u0003\u0019\u0003",
    "\u0019\u0005\u0019\u0207\n\u0019\u0003\u0019\u0005\u0019\u020a\n\u0019",
    "\u0003\u0019\u0006\u0019\u020d\n\u0019\r\u0019\u000e\u0019\u020e\u0003",
    "\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0005\u001a\u0216",
    "\n\u001a\u0003\u001a\u0005\u001a\u0219\n\u001a\u0003\u001a\u0003\u001a",
    "\u0006\u001a\u021d\n\u001a\r\u001a\u000e\u001a\u021e\u0003\u001b\u0003",
    "\u001b\u0003\u001b\u0005\u001b\u0224\n\u001b\u0003\u001b\u0005\u001b",
    "\u0227\n\u001b\u0003\u001b\u0003\u001b\u0007\u001b\u022b\n\u001b\f\u001b",
    "\u000e\u001b\u022e\u000b\u001b\u0003\u001b\u0005\u001b\u0231\n\u001b",
    "\u0003\u001c\u0003\u001c\u0005\u001c\u0235\n\u001c\u0003\u001c\u0003",
    "\u001c\u0006\u001c\u0239\n\u001c\r\u001c\u000e\u001c\u023a\u0003\u001d",
    "\u0003\u001d\u0003\u001e\u0003\u001e\u0003\u001f\u0003\u001f\u0003\u001f",
    "\u0005\u001f\u0244\n\u001f\u0003\u001f\u0005\u001f\u0247\n\u001f\u0003",
    "\u001f\u0003\u001f\u0006\u001f\u024b\n\u001f\r\u001f\u000e\u001f\u024c",
    "\u0003\u001f\u0005\u001f\u0250\n\u001f\u0003 \u0003 \u0003 \u0003 \u0005",
    " \u0256\n \u0003 \u0003 \u0005 \u025a\n \u0003!\u0003!\u0003!\u0003",
    "\"\u0003\"\u0003\"\u0005\"\u0262\n\"\u0003\"\u0005\"\u0265\n\"\u0003",
    "\"\u0003\"\u0005\"\u0269\n\"\u0003\"\u0006\"\u026c\n\"\r\"\u000e\"\u026d",
    "\u0003#\u0003#\u0003#\u0003#\u0005#\u0274\n#\u0003#\u0005#\u0277\n#",
    "\u0003#\u0006#\u027a\n#\r#\u000e#\u027b\u0003$\u0003$\u0003$\u0003$",
    "\u0003$\u0005$\u0283\n$\u0003$\u0005$\u0286\n$\u0003$\u0003$\u0006$",
    "\u028a\n$\r$\u000e$\u028b\u0003%\u0003%\u0003%\u0005%\u0291\n%\u0003",
    "%\u0005%\u0294\n%\u0003%\u0003%\u0006%\u0298\n%\r%\u000e%\u0299\u0003",
    "&\u0003&\u0003&\u0005&\u029f\n&\u0003&\u0005&\u02a2\n&\u0003\'\u0003",
    "\'\u0003(\u0003(\u0003(\u0005(\u02a9\n(\u0003(\u0005(\u02ac\n(\u0003",
    "(\u0003(\u0006(\u02b0\n(\r(\u000e(\u02b1\u0003)\u0003)\u0003)\u0005",
    ")\u02b7\n)\u0003)\u0005)\u02ba\n)\u0003)\u0003)\u0005)\u02be\n)\u0003",
    ")\u0005)\u02c1\n)\u0003)\u0003)\u0003*\u0003*\u0003*\u0003+\u0003+\u0003",
    "+\u0003,\u0007,\u02cc\n,\f,\u000e,\u02cf\u000b,\u0003,\u0003,\u0003",
    ",\u0007,\u02d4\n,\f,\u000e,\u02d7\u000b,\u0003-\u0003-\u0003-\u0003",
    "-\u0005-\u02dd\n-\u0003-\u0003-\u0005-\u02e1\n-\u0003.\u0003.\u0003",
    ".\u0003.\u0005.\u02e7\n.\u0003.\u0003.\u0005.\u02eb\n.\u0003/\u0003",
    "/\u0003/\u0003/\u0005/\u02f1\n/\u0003/\u0005/\u02f4\n/\u0003/\u0003",
    "/\u00030\u00030\u00060\u02fa\n0\r0\u000e0\u02fb\u00031\u00031\u0003",
    "1\u00031\u00031\u00051\u0303\n1\u00031\u00051\u0306\n1\u00031\u0003",
    "1\u00061\u030a\n1\r1\u000e1\u030b\u00031\u00031\u00051\u0310\n1\u0003",
    "2\u00032\u00033\u00033\u00033\u00034\u00034\u00034\u00035\u00035\u0003",
    "5\u00036\u00036\u00036\u00037\u00037\u00057\u0322\n7\u00038\u00038\u0003",
    "8\u00039\u00039\u00039\u0003:\u0003:\u0003;\u0003;\u0003;\u0003;\u0003",
    ";\u0003;\u0005;\u0332\n;\u0003<\u0003<\u0003=\u0003=\u0003=\u0003>\u0003",
    ">\u0003?\u0003?\u0003@\u0003@\u0005@\u033f\n@\u0003A\u0003A\u0003B\u0003",
    "B\u0003C\u0003C\u0003D\u0005D\u0348\nD\u0003D\u0003D\u0003D\u0005D\u034d",
    "\nD\u0003D\u0005D\u0350\nD\u0003E\u0003E\u0003F\u0003F\u0003F\u0003",
    "F\u0005F\u0358\nF\u0003G\u0003G\u0003G\u0003H\u0003H\u0003H\u0003I\u0003",
    "I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003",
    "I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003",
    "I\u0003I\u0005I\u0377\nI\u0003J\u0003J\u0003J\u0005J\u037c\nJ\u0003",
    "J\u0003J\u0003K\u0003K\u0003K\u0005K\u0383\nK\u0003K\u0003K\u0003L\u0003",
    "L\u0003L\u0005L\u038a\nL\u0003L\u0003L\u0003M\u0003M\u0003M\u0005M\u0391",
    "\nM\u0003M\u0003M\u0003N\u0003N\u0003N\u0005N\u0398\nN\u0003N\u0003",
    "N\u0003N\u0003N\u0005N\u039e\nN\u0003N\u0005N\u03a1\nN\u0003O\u0003",
    "O\u0003O\u0005O\u03a6\nO\u0003O\u0003O\u0003P\u0003P\u0003P\u0005P\u03ad",
    "\nP\u0003P\u0003P\u0003Q\u0003Q\u0003Q\u0005Q\u03b4\nQ\u0003Q\u0003",
    "Q\u0003R\u0003R\u0005R\u03ba\nR\u0003R\u0003R\u0005R\u03be\nR\u0003",
    "R\u0003R\u0007R\u03c2\nR\fR\u000eR\u03c5\u000bR\u0003S\u0003S\u0003",
    "S\u0005S\u03ca\nS\u0003S\u0003S\u0007S\u03ce\nS\fS\u000eS\u03d1\u000b",
    "S\u0003T\u0003T\u0003T\u0005T\u03d6\nT\u0003T\u0003T\u0007T\u03da\n",
    "T\fT\u000eT\u03dd\u000bT\u0003U\u0003U\u0003U\u0005U\u03e2\nU\u0003",
    "U\u0003U\u0005U\u03e6\nU\u0003U\u0005U\u03e9\nU\u0003V\u0003V\u0003",
    "V\u0005V\u03ee\nV\u0003V\u0003V\u0003W\u0003W\u0003W\u0005W\u03f5\n",
    "W\u0003W\u0003W\u0005W\u03f9\nW\u0003W\u0005W\u03fc\nW\u0003W\u0007",
    "W\u03ff\nW\fW\u000eW\u0402\u000bW\u0003X\u0003X\u0003X\u0005X\u0407",
    "\nX\u0003X\u0003X\u0005X\u040b\nX\u0003X\u0005X\u040e\nX\u0003X\u0007",
    "X\u0411\nX\fX\u000eX\u0414\u000bX\u0003Y\u0003Y\u0003Y\u0003Y\u0005",
    "Y\u041a\nY\u0003Y\u0005Y\u041d\nY\u0003Y\u0003Y\u0007Y\u0421\nY\fY\u000e",
    "Y\u0424\u000bY\u0003Z\u0003Z\u0003Z\u0003Z\u0005Z\u042a\nZ\u0003Z\u0005",
    "Z\u042d\nZ\u0003Z\u0003Z\u0007Z\u0431\nZ\fZ\u000eZ\u0434\u000bZ\u0003",
    "[\u0003[\u0003[\u0003[\u0005[\u043a\n[\u0003[\u0005[\u043d\n[\u0003",
    "[\u0003[\u0007[\u0441\n[\f[\u000e[\u0444\u000b[\u0003\\\u0003\\\u0003",
    "\\\u0003\\\u0005\\\u044a\n\\\u0003\\\u0005\\\u044d\n\\\u0003\\\u0003",
    "\\\u0007\\\u0451\n\\\f\\\u000e\\\u0454\u000b\\\u0003]\u0003]\u0003]",
    "\u0005]\u0459\n]\u0003]\u0003]\u0005]\u045d\n]\u0003]\u0005]\u0460\n",
    "]\u0003^\u0003^\u0003^\u0005^\u0465\n^\u0003^\u0003^\u0005^\u0469\n",
    "^\u0003^\u0003^\u0003_\u0003_\u0003_\u0005_\u0470\n_\u0003_\u0003_\u0003",
    "`\u0003`\u0003`\u0005`\u0477\n`\u0003`\u0003`\u0003a\u0003a\u0003b\u0003",
    "b\u0003c\u0003c\u0003c\u0003c\u0003c\u0003d\u0003d\u0003e\u0003e\u0003",
    "f\u0003f\u0003f\u0007f\u048b\nf\ff\u000ef\u048e\u000bf\u0003g\u0005",
    "g\u0491\ng\u0003g\u0003g\u0003h\u0003h\u0003i\u0003i\u0003j\u0003j\u0003",
    "k\u0003k\u0003l\u0003l\u0003l\u0005l\u04a0\nl\u0003l\u0003l\u0003m\u0003",
    "m\u0003n\u0003n\u0003o\u0003o\u0003p\u0003p\u0003q\u0003q\u0003r\u0003",
    "r\u0003s\u0003s\u0003t\u0003t\u0003u\u0003u\u0003v\u0003v\u0003w\u0003",
    "w\u0003x\u0003x\u0003x\u0005x\u04bd\nx\u0003x\u0003x\u0003y\u0003y\u0003",
    "z\u0003z\u0003{\u0003{\u0003|\u0003|\u0003}\u0003}\u0003~\u0003~\u0003",
    "\u007f\u0003\u007f\u0003\u0080\u0003\u0080\u0003\u0081\u0003\u0081\u0003",
    "\u0082\u0003\u0082\u0003\u0083\u0003\u0083\u0003\u0083\u0005\u0083\u04d8",
    "\n\u0083\u0003\u0083\u0003\u0083\u0003\u0084\u0003\u0084\u0003\u0085",
    "\u0003\u0085\u0003\u0086\u0003\u0086\u0003\u0087\u0003\u0087\u0003\u0087",
    "\u0005\u0087\u04e5\n\u0087\u0003\u0087\u0003\u0087\u0003\u0088\u0003",
    "\u0088\u0003\u0089\u0003\u0089\u0003\u008a\u0003\u008a\u0003\u008b\u0003",
    "\u008b\u0003\u008c\u0003\u008c\u0003\u008c\u0002\u0002\u008d\u0002\u0004",
    "\u0006\b\n\f\u000e\u0010\u0012\u0014\u0016\u0018\u001a\u001c\u001e ",
    "\"$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084",
    "\u0086\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c",
    "\u009e\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4",
    "\u00b6\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc",
    "\u00ce\u00d0\u00d2\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4",
    "\u00e6\u00e8\u00ea\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc",
    "\u00fe\u0100\u0102\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114",
    "\u0116\u0002\b\u0004\u000277WW\u0004\u0002SSZZ\u0006\u0002\u0016\u0016",
    "\u001a\u001a !((\u0004\u0002\u0016\u0016 !\u0004\u0002\u0017\u0017\"",
    "\"\u0003\u0002\\]\u0002\u0532\u0002\u0119\u0003\u0002\u0002\u0002\u0004",
    "\u011d\u0003\u0002\u0002\u0002\u0006\u0127\u0003\u0002\u0002\u0002\b",
    "\u013f\u0003\u0002\u0002\u0002\n\u0141\u0003\u0002\u0002\u0002\f\u0144",
    "\u0003\u0002\u0002\u0002\u000e\u0147\u0003\u0002\u0002\u0002\u0010\u014a",
    "\u0003\u0002\u0002\u0002\u0012\u014d\u0003\u0002\u0002\u0002\u0014\u0150",
    "\u0003\u0002\u0002\u0002\u0016\u0153\u0003\u0002\u0002\u0002\u0018\u0161",
    "\u0003\u0002\u0002\u0002\u001a\u0163\u0003\u0002\u0002\u0002\u001c\u0165",
    "\u0003\u0002\u0002\u0002\u001e\u0179\u0003\u0002\u0002\u0002 \u018b",
    "\u0003\u0002\u0002\u0002\"\u0199\u0003\u0002\u0002\u0002$\u01a9\u0003",
    "\u0002\u0002\u0002&\u01b7\u0003\u0002\u0002\u0002(\u01c8\u0003\u0002",
    "\u0002\u0002*\u01d7\u0003\u0002\u0002\u0002,\u01e6\u0003\u0002\u0002",
    "\u0002.\u01f4\u0003\u0002\u0002\u00020\u0202\u0003\u0002\u0002\u0002",
    "2\u0210\u0003\u0002\u0002\u00024\u0220\u0003\u0002\u0002\u00026\u0234",
    "\u0003\u0002\u0002\u00028\u023c\u0003\u0002\u0002\u0002:\u023e\u0003",
    "\u0002\u0002\u0002<\u0240\u0003\u0002\u0002\u0002>\u0251\u0003\u0002",
    "\u0002\u0002@\u025b\u0003\u0002\u0002\u0002B\u025e\u0003\u0002\u0002",
    "\u0002D\u026f\u0003\u0002\u0002\u0002F\u027d\u0003\u0002\u0002\u0002",
    "H\u028d\u0003\u0002\u0002\u0002J\u029b\u0003\u0002\u0002\u0002L\u02a3",
    "\u0003\u0002\u0002\u0002N\u02a5\u0003\u0002\u0002\u0002P\u02b3\u0003",
    "\u0002\u0002\u0002R\u02c4\u0003\u0002\u0002\u0002T\u02c7\u0003\u0002",
    "\u0002\u0002V\u02cd\u0003\u0002\u0002\u0002X\u02d8\u0003\u0002\u0002",
    "\u0002Z\u02e2\u0003\u0002\u0002\u0002\\\u02ec\u0003\u0002\u0002\u0002",
    "^\u02f9\u0003\u0002\u0002\u0002`\u02fd\u0003\u0002\u0002\u0002b\u0311",
    "\u0003\u0002\u0002\u0002d\u0313\u0003\u0002\u0002\u0002f\u0316\u0003",
    "\u0002\u0002\u0002h\u0319\u0003\u0002\u0002\u0002j\u031c\u0003\u0002",
    "\u0002\u0002l\u0321\u0003\u0002\u0002\u0002n\u0323\u0003\u0002\u0002",
    "\u0002p\u0326\u0003\u0002\u0002\u0002r\u0329\u0003\u0002\u0002\u0002",
    "t\u0331\u0003\u0002\u0002\u0002v\u0333\u0003\u0002\u0002\u0002x\u0335",
    "\u0003\u0002\u0002\u0002z\u0338\u0003\u0002\u0002\u0002|\u033a\u0003",
    "\u0002\u0002\u0002~\u033e\u0003\u0002\u0002\u0002\u0080\u0340\u0003",
    "\u0002\u0002\u0002\u0082\u0342\u0003\u0002\u0002\u0002\u0084\u0344\u0003",
    "\u0002\u0002\u0002\u0086\u0347\u0003\u0002\u0002\u0002\u0088\u0351\u0003",
    "\u0002\u0002\u0002\u008a\u0353\u0003\u0002\u0002\u0002\u008c\u0359\u0003",
    "\u0002\u0002\u0002\u008e\u035c\u0003\u0002\u0002\u0002\u0090\u0376\u0003",
    "\u0002\u0002\u0002\u0092\u0378\u0003\u0002\u0002\u0002\u0094\u037f\u0003",
    "\u0002\u0002\u0002\u0096\u0386\u0003\u0002\u0002\u0002\u0098\u038d\u0003",
    "\u0002\u0002\u0002\u009a\u0394\u0003\u0002\u0002\u0002\u009c\u03a2\u0003",
    "\u0002\u0002\u0002\u009e\u03a9\u0003\u0002\u0002\u0002\u00a0\u03b0\u0003",
    "\u0002\u0002\u0002\u00a2\u03b9\u0003\u0002\u0002\u0002\u00a4\u03c6\u0003",
    "\u0002\u0002\u0002\u00a6\u03d2\u0003\u0002\u0002\u0002\u00a8\u03de\u0003",
    "\u0002\u0002\u0002\u00aa\u03ea\u0003\u0002\u0002\u0002\u00ac\u03f1\u0003",
    "\u0002\u0002\u0002\u00ae\u0403\u0003\u0002\u0002\u0002\u00b0\u0415\u0003",
    "\u0002\u0002\u0002\u00b2\u0425\u0003\u0002\u0002\u0002\u00b4\u0435\u0003",
    "\u0002\u0002\u0002\u00b6\u0445\u0003\u0002\u0002\u0002\u00b8\u0455\u0003",
    "\u0002\u0002\u0002\u00ba\u0461\u0003\u0002\u0002\u0002\u00bc\u046c\u0003",
    "\u0002\u0002\u0002\u00be\u0473\u0003\u0002\u0002\u0002\u00c0\u047a\u0003",
    "\u0002\u0002\u0002\u00c2\u047c\u0003\u0002\u0002\u0002\u00c4\u047e\u0003",
    "\u0002\u0002\u0002\u00c6\u0483\u0003\u0002\u0002\u0002\u00c8\u0485\u0003",
    "\u0002\u0002\u0002\u00ca\u0487\u0003\u0002\u0002\u0002\u00cc\u0490\u0003",
    "\u0002\u0002\u0002\u00ce\u0494\u0003\u0002\u0002\u0002\u00d0\u0496\u0003",
    "\u0002\u0002\u0002\u00d2\u0498\u0003\u0002\u0002\u0002\u00d4\u049a\u0003",
    "\u0002\u0002\u0002\u00d6\u049f\u0003\u0002\u0002\u0002\u00d8\u04a3\u0003",
    "\u0002\u0002\u0002\u00da\u04a5\u0003\u0002\u0002\u0002\u00dc\u04a7\u0003",
    "\u0002\u0002\u0002\u00de\u04a9\u0003\u0002\u0002\u0002\u00e0\u04ab\u0003",
    "\u0002\u0002\u0002\u00e2\u04ad\u0003\u0002\u0002\u0002\u00e4\u04af\u0003",
    "\u0002\u0002\u0002\u00e6\u04b1\u0003\u0002\u0002\u0002\u00e8\u04b3\u0003",
    "\u0002\u0002\u0002\u00ea\u04b5\u0003\u0002\u0002\u0002\u00ec\u04b7\u0003",
    "\u0002\u0002\u0002\u00ee\u04bc\u0003\u0002\u0002\u0002\u00f0\u04c0\u0003",
    "\u0002\u0002\u0002\u00f2\u04c2\u0003\u0002\u0002\u0002\u00f4\u04c4\u0003",
    "\u0002\u0002\u0002\u00f6\u04c6\u0003\u0002\u0002\u0002\u00f8\u04c8\u0003",
    "\u0002\u0002\u0002\u00fa\u04ca\u0003\u0002\u0002\u0002\u00fc\u04cc\u0003",
    "\u0002\u0002\u0002\u00fe\u04ce\u0003\u0002\u0002\u0002\u0100\u04d0\u0003",
    "\u0002\u0002\u0002\u0102\u04d2\u0003\u0002\u0002\u0002\u0104\u04d7\u0003",
    "\u0002\u0002\u0002\u0106\u04db\u0003\u0002\u0002\u0002\u0108\u04dd\u0003",
    "\u0002\u0002\u0002\u010a\u04df\u0003\u0002\u0002\u0002\u010c\u04e4\u0003",
    "\u0002\u0002\u0002\u010e\u04e8\u0003\u0002\u0002\u0002\u0110\u04ea\u0003",
    "\u0002\u0002\u0002\u0112\u04ec\u0003\u0002\u0002\u0002\u0114\u04ee\u0003",
    "\u0002\u0002\u0002\u0116\u04f0\u0003\u0002\u0002\u0002\u0118\u011a\u0005",
    "\u0004\u0003\u0002\u0119\u0118\u0003\u0002\u0002\u0002\u011a\u011b\u0003",
    "\u0002\u0002\u0002\u011b\u0119\u0003\u0002\u0002\u0002\u011b\u011c\u0003",
    "\u0002\u0002\u0002\u011c\u0003\u0003\u0002\u0002\u0002\u011d\u011e\u0007",
    "\u0005\u0002\u0002\u011e\u011f\u0005\u0114\u008b\u0002\u011f\u0121\u0005",
    "\u0006\u0004\u0002\u0120\u0122\u0005\b\u0005\u0002\u0121\u0120\u0003",
    "\u0002\u0002\u0002\u0122\u0123\u0003\u0002\u0002\u0002\u0123\u0121\u0003",
    "\u0002\u0002\u0002\u0123\u0124\u0003\u0002\u0002\u0002\u0124\u0125\u0003",
    "\u0002\u0002\u0002\u0125\u0126\u0007\u0006\u0002\u0002\u0126\u0005\u0003",
    "\u0002\u0002\u0002\u0127\u0128\t\u0002\u0002\u0002\u0128\u0007\u0003",
    "\u0002\u0002\u0002\u0129\u0140\u0005\u0016\f\u0002\u012a\u0140\u0005",
    "\u001c\u000f\u0002\u012b\u0140\u0005 \u0011\u0002\u012c\u0140\u0005",
    "\"\u0012\u0002\u012d\u0140\u0005$\u0013\u0002\u012e\u0140\u0005&\u0014",
    "\u0002\u012f\u0140\u0005(\u0015\u0002\u0130\u0140\u0005*\u0016\u0002",
    "\u0131\u0140\u0005,\u0017\u0002\u0132\u0140\u0005.\u0018\u0002\u0133",
    "\u0140\u00050\u0019\u0002\u0134\u0140\u00052\u001a\u0002\u0135\u0140",
    "\u00054\u001b\u0002\u0136\u0140\u0005B\"\u0002\u0137\u0140\u0005D#\u0002",
    "\u0138\u0140\u0005F$\u0002\u0139\u0140\u0005H%\u0002\u013a\u0140\u0005",
    "N(\u0002\u013b\u0140\u0005P)\u0002\u013c\u0140\u0005\\/\u0002\u013d",
    "\u0140\u0005<\u001f\u0002\u013e\u0140\u0005`1\u0002\u013f\u0129\u0003",
    "\u0002\u0002\u0002\u013f\u012a\u0003\u0002\u0002\u0002\u013f\u012b\u0003",
    "\u0002\u0002\u0002\u013f\u012c\u0003\u0002\u0002\u0002\u013f\u012d\u0003",
    "\u0002\u0002\u0002\u013f\u012e\u0003\u0002\u0002\u0002\u013f\u012f\u0003",
    "\u0002\u0002\u0002\u013f\u0130\u0003\u0002\u0002\u0002\u013f\u0131\u0003",
    "\u0002\u0002\u0002\u013f\u0132\u0003\u0002\u0002\u0002\u013f\u0133\u0003",
    "\u0002\u0002\u0002\u013f\u0134\u0003\u0002\u0002\u0002\u013f\u0135\u0003",
    "\u0002\u0002\u0002\u013f\u0136\u0003\u0002\u0002\u0002\u013f\u0137\u0003",
    "\u0002\u0002\u0002\u013f\u0138\u0003\u0002\u0002\u0002\u013f\u0139\u0003",
    "\u0002\u0002\u0002\u013f\u013a\u0003\u0002\u0002\u0002\u013f\u013b\u0003",
    "\u0002\u0002\u0002\u013f\u013c\u0003\u0002\u0002\u0002\u013f\u013d\u0003",
    "\u0002\u0002\u0002\u013f\u013e\u0003\u0002\u0002\u0002\u0140\t\u0003",
    "\u0002\u0002\u0002\u0141\u0142\u0007Q\u0002\u0002\u0142\u0143\u0007",
    "Z\u0002\u0002\u0143\u000b\u0003\u0002\u0002\u0002\u0144\u0145\u0007",
    "Q\u0002\u0002\u0145\u0146\u0007Z\u0002\u0002\u0146\r\u0003\u0002\u0002",
    "\u0002\u0147\u0148\u0007R\u0002\u0002\u0148\u0149\u0007Z\u0002\u0002",
    "\u0149\u000f\u0003\u0002\u0002\u0002\u014a\u014b\u0007R\u0002\u0002",
    "\u014b\u014c\u0007Z\u0002\u0002\u014c\u0011\u0003\u0002\u0002\u0002",
    "\u014d\u014e\u0007R\u0002\u0002\u014e\u014f\u0007Z\u0002\u0002\u014f",
    "\u0013\u0003\u0002\u0002\u0002\u0150\u0151\u0007R\u0002\u0002\u0151",
    "\u0152\t\u0003\u0002\u0002\u0152\u0015\u0003\u0002\u0002\u0002\u0153",
    "\u0154\u0007\u0003\u0002\u0002\u0154\u0156\u0005\u00d0i\u0002\u0155",
    "\u0157\u0005\u0116\u008c\u0002\u0156\u0155\u0003\u0002\u0002\u0002\u0156",
    "\u0157\u0003\u0002\u0002\u0002\u0157\u0159\u0003\u0002\u0002\u0002\u0158",
    "\u015a\u0005\n\u0006\u0002\u0159\u0158\u0003\u0002\u0002\u0002\u0159",
    "\u015a\u0003\u0002\u0002\u0002\u015a\u015b\u0003\u0002\u0002\u0002\u015b",
    "\u015d\u0005\u000e\b\u0002\u015c\u015e\u0005\u0090I\u0002\u015d\u015c",
    "\u0003\u0002\u0002\u0002\u015e\u015f\u0003\u0002\u0002\u0002\u015f\u015d",
    "\u0003\u0002\u0002\u0002\u015f\u0160\u0003\u0002\u0002\u0002\u0160\u0017",
    "\u0003\u0002\u0002\u0002\u0161\u0162\u0005\u001a\u000e\u0002\u0162\u0019",
    "\u0003\u0002\u0002\u0002\u0163\u0164\u00078\u0002\u0002\u0164\u001b",
    "\u0003\u0002\u0002\u0002\u0165\u0166\u0007\u0004\u0002\u0002\u0166\u0168",
    "\u0005\u00d2j\u0002\u0167\u0169\u0005\u0116\u008c\u0002\u0168\u0167",
    "\u0003\u0002\u0002\u0002\u0168\u0169\u0003\u0002\u0002\u0002\u0169\u016b",
    "\u0003\u0002\u0002\u0002\u016a\u016c\u0005\n\u0006\u0002\u016b\u016a",
    "\u0003\u0002\u0002\u0002\u016b\u016c\u0003\u0002\u0002\u0002\u016c\u016d",
    "\u0003\u0002\u0002\u0002\u016d\u016f\u0005\u000e\b\u0002\u016e\u0170",
    "\u0005\u0018\r\u0002\u016f\u016e\u0003\u0002\u0002\u0002\u016f\u0170",
    "\u0003\u0002\u0002\u0002\u0170\u0171\u0003\u0002\u0002\u0002\u0171\u0172",
    "\u0005\u001e\u0010\u0002\u0172\u0176\u0005\u001e\u0010\u0002\u0173\u0175",
    "\u0005\u0090I\u0002\u0174\u0173\u0003\u0002\u0002\u0002\u0175\u0178",
    "\u0003\u0002\u0002\u0002\u0176\u0174\u0003\u0002\u0002\u0002\u0176\u0177",
    "\u0003\u0002\u0002\u0002\u0177\u001d\u0003\u0002\u0002\u0002\u0178\u0176",
    "\u0003\u0002\u0002\u0002\u0179\u017a\u0007!\u0002\u0002\u017a\u017c",
    "\u0005\u0104\u0083\u0002\u017b\u017d\u0005\u0116\u008c\u0002\u017c\u017b",
    "\u0003\u0002\u0002\u0002\u017c\u017d\u0003\u0002\u0002\u0002\u017d\u017f",
    "\u0003\u0002\u0002\u0002\u017e\u0180\u0005\f\u0007\u0002\u017f\u017e",
    "\u0003\u0002\u0002\u0002\u017f\u0180\u0003\u0002\u0002\u0002\u0180\u0181",
    "\u0003\u0002\u0002\u0002\u0181\u0183\u0005\u0014\u000b\u0002\u0182\u0184",
    "\u0005\u008aF\u0002\u0183\u0182\u0003\u0002\u0002\u0002\u0183\u0184",
    "\u0003\u0002\u0002\u0002\u0184\u0188\u0003\u0002\u0002\u0002\u0185\u0187",
    "\u0005\u00c4c\u0002\u0186\u0185\u0003\u0002\u0002\u0002\u0187\u018a",
    "\u0003\u0002\u0002\u0002\u0188\u0186\u0003\u0002\u0002\u0002\u0188\u0189",
    "\u0003\u0002\u0002\u0002\u0189\u001f\u0003\u0002\u0002\u0002\u018a\u0188",
    "\u0003\u0002\u0002\u0002\u018b\u018c\u0007\u0004\u0002\u0002\u018c\u018d",
    "\u0005\u00eex\u0002\u018d\u018f\u00075\u0002\u0002\u018e\u0190\u0005",
    "\u0116\u008c\u0002\u018f\u018e\u0003\u0002\u0002\u0002\u018f\u0190\u0003",
    "\u0002\u0002\u0002\u0190\u0192\u0003\u0002\u0002\u0002\u0191\u0193\u0005",
    "\n\u0006\u0002\u0192\u0191\u0003\u0002\u0002\u0002\u0192\u0193\u0003",
    "\u0002\u0002\u0002\u0193\u0195\u0003\u0002\u0002\u0002\u0194\u0196\u0005",
    "\u0090I\u0002\u0195\u0194\u0003\u0002\u0002\u0002\u0196\u0197\u0003",
    "\u0002\u0002\u0002\u0197\u0195\u0003\u0002\u0002\u0002\u0197\u0198\u0003",
    "\u0002\u0002\u0002\u0198!\u0003\u0002\u0002\u0002\u0199\u019a\u0007",
    "\u0004\u0002\u0002\u019a\u019b\u0005\u00d2j\u0002\u019b\u019c\u0007",
    "6\u0002\u0002\u019c\u019e\u0005\u00d6l\u0002\u019d\u019f\u0005\u0116",
    "\u008c\u0002\u019e\u019d\u0003\u0002\u0002\u0002\u019e\u019f\u0003\u0002",
    "\u0002\u0002\u019f\u01a1\u0003\u0002\u0002\u0002\u01a0\u01a2\u0005\n",
    "\u0006\u0002\u01a1\u01a0\u0003\u0002\u0002\u0002\u01a1\u01a2\u0003\u0002",
    "\u0002\u0002\u01a2\u01a3\u0003\u0002\u0002\u0002\u01a3\u01a5\u0005\u000e",
    "\b\u0002\u01a4\u01a6\u0005\u0090I\u0002\u01a5\u01a4\u0003\u0002\u0002",
    "\u0002\u01a6\u01a7\u0003\u0002\u0002\u0002\u01a7\u01a5\u0003\u0002\u0002",
    "\u0002\u01a7\u01a8\u0003\u0002\u0002\u0002\u01a8#\u0003\u0002\u0002",
    "\u0002\u01a9\u01aa\u0007\u0007\u0002\u0002\u01aa\u01ac\u0005\u00dan",
    "\u0002\u01ab\u01ad\u0005\u0116\u008c\u0002\u01ac\u01ab\u0003\u0002\u0002",
    "\u0002\u01ac\u01ad\u0003\u0002\u0002\u0002\u01ad\u01af\u0003\u0002\u0002",
    "\u0002\u01ae\u01b0\u0005\n\u0006\u0002\u01af\u01ae\u0003\u0002\u0002",
    "\u0002\u01af\u01b0\u0003\u0002\u0002\u0002\u01b0\u01b1\u0003\u0002\u0002",
    "\u0002\u01b1\u01b3\u0005\u000e\b\u0002\u01b2\u01b4\u0005\u0090I\u0002",
    "\u01b3\u01b2\u0003\u0002\u0002\u0002\u01b4\u01b5\u0003\u0002\u0002\u0002",
    "\u01b5\u01b3\u0003\u0002\u0002\u0002\u01b5\u01b6\u0003\u0002\u0002\u0002",
    "\u01b6%\u0003\u0002\u0002\u0002\u01b7\u01b8\u0007\u0010\u0002\u0002",
    "\u01b8\u01ba\u0005\u00dco\u0002\u01b9\u01bb\u0005\u0116\u008c\u0002",
    "\u01ba\u01b9\u0003\u0002\u0002\u0002\u01ba\u01bb\u0003\u0002\u0002\u0002",
    "\u01bb\u01bd\u0003\u0002\u0002\u0002\u01bc\u01be\u0005\n\u0006\u0002",
    "\u01bd\u01bc\u0003\u0002\u0002\u0002\u01bd\u01be\u0003\u0002\u0002\u0002",
    "\u01be\u01bf\u0003\u0002\u0002\u0002\u01bf\u01c0\u0005\u000e\b\u0002",
    "\u01c0\u01c1\u0005n8\u0002\u01c1\u01c3\u0005p9\u0002\u01c2\u01c4\u0005",
    "h5\u0002\u01c3\u01c2\u0003\u0002\u0002\u0002\u01c3\u01c4\u0003\u0002",
    "\u0002\u0002\u01c4\u01c6\u0003\u0002\u0002\u0002\u01c5\u01c7\u0005j",
    "6\u0002\u01c6\u01c5\u0003\u0002\u0002\u0002\u01c6\u01c7\u0003\u0002",
    "\u0002\u0002\u01c7\'\u0003\u0002\u0002\u0002\u01c8\u01c9\u0007\u0011",
    "\u0002\u0002\u01c9\u01cb\u0005\u00dep\u0002\u01ca\u01cc\u0005\u0116",
    "\u008c\u0002\u01cb\u01ca\u0003\u0002\u0002\u0002\u01cb\u01cc\u0003\u0002",
    "\u0002\u0002\u01cc\u01ce\u0003\u0002\u0002\u0002\u01cd\u01cf\u0005\n",
    "\u0006\u0002\u01ce\u01cd\u0003\u0002\u0002\u0002\u01ce\u01cf\u0003\u0002",
    "\u0002\u0002\u01cf\u01d0\u0003\u0002\u0002\u0002\u01d0\u01d2\u0005\u000e",
    "\b\u0002\u01d1\u01d3\u0005d3\u0002\u01d2\u01d1\u0003\u0002\u0002\u0002",
    "\u01d2\u01d3\u0003\u0002\u0002\u0002\u01d3\u01d5\u0003\u0002\u0002\u0002",
    "\u01d4\u01d6\u0005f4\u0002\u01d5\u01d4\u0003\u0002\u0002\u0002\u01d5",
    "\u01d6\u0003\u0002\u0002\u0002\u01d6)\u0003\u0002\u0002\u0002\u01d7",
    "\u01d8\u0007\u0012\u0002\u0002\u01d8\u01da\u0005\u00e2r\u0002\u01d9",
    "\u01db\u0005\u0116\u008c\u0002\u01da\u01d9\u0003\u0002\u0002\u0002\u01da",
    "\u01db\u0003\u0002\u0002\u0002\u01db\u01dd\u0003\u0002\u0002\u0002\u01dc",
    "\u01de\u0005\n\u0006\u0002\u01dd\u01dc\u0003\u0002\u0002\u0002\u01dd",
    "\u01de\u0003\u0002\u0002\u0002\u01de\u01df\u0003\u0002\u0002\u0002\u01df",
    "\u01e1\u0005\u000e\b\u0002\u01e0\u01e2\u0005d3\u0002\u01e1\u01e0\u0003",
    "\u0002\u0002\u0002\u01e1\u01e2\u0003\u0002\u0002\u0002\u01e2\u01e4\u0003",
    "\u0002\u0002\u0002\u01e3\u01e5\u0005f4\u0002\u01e4\u01e3\u0003\u0002",
    "\u0002\u0002\u01e4\u01e5\u0003\u0002\u0002\u0002\u01e5+\u0003\u0002",
    "\u0002\u0002\u01e6\u01e7\u0007\u0013\u0002\u0002\u01e7\u01e9\u0005\u00e4",
    "s\u0002\u01e8\u01ea\u0005\u0116\u008c\u0002\u01e9\u01e8\u0003\u0002",
    "\u0002\u0002\u01e9\u01ea\u0003\u0002\u0002\u0002\u01ea\u01ec\u0003\u0002",
    "\u0002\u0002\u01eb\u01ed\u0005\n\u0006\u0002\u01ec\u01eb\u0003\u0002",
    "\u0002\u0002\u01ec\u01ed\u0003\u0002\u0002\u0002\u01ed\u01ee\u0003\u0002",
    "\u0002\u0002\u01ee\u01f0\u0005\u000e\b\u0002\u01ef\u01f1\u0005\u008c",
    "G\u0002\u01f0\u01ef\u0003\u0002\u0002\u0002\u01f0\u01f1\u0003\u0002",
    "\u0002\u0002\u01f1\u01f2\u0003\u0002\u0002\u0002\u01f2\u01f3\u0005\u008e",
    "H\u0002\u01f3-\u0003\u0002\u0002\u0002\u01f4\u01f5\u0007\b\u0002\u0002",
    "\u01f5\u01f7\u0005\u00e0q\u0002\u01f6\u01f8\u0005\u0116\u008c\u0002",
    "\u01f7\u01f6\u0003\u0002\u0002\u0002\u01f7\u01f8\u0003\u0002\u0002\u0002",
    "\u01f8\u01fa\u0003\u0002\u0002\u0002\u01f9\u01fb\u0005\n\u0006\u0002",
    "\u01fa\u01f9\u0003\u0002\u0002\u0002\u01fa\u01fb\u0003\u0002\u0002\u0002",
    "\u01fb\u01fc\u0003\u0002\u0002\u0002\u01fc\u01fe\u0005\u000e\b\u0002",
    "\u01fd\u01ff\u0005\u0090I\u0002\u01fe\u01fd\u0003\u0002\u0002\u0002",
    "\u01ff\u0200\u0003\u0002\u0002\u0002\u0200\u01fe\u0003\u0002\u0002\u0002",
    "\u0200\u0201\u0003\u0002\u0002\u0002\u0201/\u0003\u0002\u0002\u0002",
    "\u0202\u0203\u0007\b\u0002\u0002\u0203\u0204\u0005\u00eex\u0002\u0204",
    "\u0206\u00075\u0002\u0002\u0205\u0207\u0005\u0116\u008c\u0002\u0206",
    "\u0205\u0003\u0002\u0002\u0002\u0206\u0207\u0003\u0002\u0002\u0002\u0207",
    "\u0209\u0003\u0002\u0002\u0002\u0208\u020a\u0005\n\u0006\u0002\u0209",
    "\u0208\u0003\u0002\u0002\u0002\u0209\u020a\u0003\u0002\u0002\u0002\u020a",
    "\u020c\u0003\u0002\u0002\u0002\u020b\u020d\u0005\u0090I\u0002\u020c",
    "\u020b\u0003\u0002\u0002\u0002\u020d\u020e\u0003\u0002\u0002\u0002\u020e",
    "\u020c\u0003\u0002\u0002\u0002\u020e\u020f\u0003\u0002\u0002\u0002\u020f",
    "1\u0003\u0002\u0002\u0002\u0210\u0211\u0007\b\u0002\u0002\u0211\u0212",
    "\u0005\u00e0q\u0002\u0212\u0213\u00076\u0002\u0002\u0213\u0215\u0005",
    "\u00d6l\u0002\u0214\u0216\u0005\u0116\u008c\u0002\u0215\u0214\u0003",
    "\u0002\u0002\u0002\u0215\u0216\u0003\u0002\u0002\u0002\u0216\u0218\u0003",
    "\u0002\u0002\u0002\u0217\u0219\u0005\n\u0006\u0002\u0218\u0217\u0003",
    "\u0002\u0002\u0002\u0218\u0219\u0003\u0002\u0002\u0002\u0219\u021a\u0003",
    "\u0002\u0002\u0002\u021a\u021c\u0005\u000e\b\u0002\u021b\u021d\u0005",
    "\u0090I\u0002\u021c\u021b\u0003\u0002\u0002\u0002\u021d\u021e\u0003",
    "\u0002\u0002\u0002\u021e\u021c\u0003\u0002\u0002\u0002\u021e\u021f\u0003",
    "\u0002\u0002\u0002\u021f3\u0003\u0002\u0002\u0002\u0220\u0221\u0007",
    "\t\u0002\u0002\u0221\u0223\u0005\u00e6t\u0002\u0222\u0224\u0005\u0116",
    "\u008c\u0002\u0223\u0222\u0003\u0002\u0002\u0002\u0223\u0224\u0003\u0002",
    "\u0002\u0002\u0224\u0226\u0003\u0002\u0002\u0002\u0225\u0227\u0005\n",
    "\u0006\u0002\u0226\u0225\u0003\u0002\u0002\u0002\u0226\u0227\u0003\u0002",
    "\u0002\u0002\u0227\u0228\u0003\u0002\u0002\u0002\u0228\u022c\u0005\u000e",
    "\b\u0002\u0229\u022b\u0005\u0090I\u0002\u022a\u0229\u0003\u0002\u0002",
    "\u0002\u022b\u022e\u0003\u0002\u0002\u0002\u022c\u022a\u0003\u0002\u0002",
    "\u0002\u022c\u022d\u0003\u0002\u0002\u0002\u022d\u0230\u0003\u0002\u0002",
    "\u0002\u022e\u022c\u0003\u0002\u0002\u0002\u022f\u0231\u00056\u001c",
    "\u0002\u0230\u022f\u0003\u0002\u0002\u0002\u0230\u0231\u0003\u0002\u0002",
    "\u0002\u02315\u0003\u0002\u0002\u0002\u0232\u0235\u00058\u001d\u0002",
    "\u0233\u0235\u0005:\u001e\u0002\u0234\u0232\u0003\u0002\u0002\u0002",
    "\u0234\u0233\u0003\u0002\u0002\u0002\u0235\u0236\u0003\u0002\u0002\u0002",
    "\u0236\u0238\u0005\u0012\n\u0002\u0237\u0239\u0005J&\u0002\u0238\u0237",
    "\u0003\u0002\u0002\u0002\u0239\u023a\u0003\u0002\u0002\u0002\u023a\u0238",
    "\u0003\u0002\u0002\u0002\u023a\u023b\u0003\u0002\u0002\u0002\u023b7",
    "\u0003\u0002\u0002\u0002\u023c\u023d\u0007P\u0002\u0002\u023d9\u0003",
    "\u0002\u0002\u0002\u023e\u023f\u0007O\u0002\u0002\u023f;\u0003\u0002",
    "\u0002\u0002\u0240\u0241\u0007\n\u0002\u0002\u0241\u0243\u0005\u00e8",
    "u\u0002\u0242\u0244\u0005\u0116\u008c\u0002\u0243\u0242\u0003\u0002",
    "\u0002\u0002\u0243\u0244\u0003\u0002\u0002\u0002\u0244\u0246\u0003\u0002",
    "\u0002\u0002\u0245\u0247\u0005\n\u0006\u0002\u0246\u0245\u0003\u0002",
    "\u0002\u0002\u0246\u0247\u0003\u0002\u0002\u0002\u0247\u0248\u0003\u0002",
    "\u0002\u0002\u0248\u024a\u0005\u000e\b\u0002\u0249\u024b\u0005> \u0002",
    "\u024a\u0249\u0003\u0002\u0002\u0002\u024b\u024c\u0003\u0002\u0002\u0002",
    "\u024c\u024a\u0003\u0002\u0002\u0002\u024c\u024d\u0003\u0002\u0002\u0002",
    "\u024d\u024f\u0003\u0002\u0002\u0002\u024e\u0250\u0005@!\u0002\u024f",
    "\u024e\u0003\u0002\u0002\u0002\u024f\u0250\u0003\u0002\u0002\u0002\u0250",
    "=\u0003\u0002\u0002\u0002\u0251\u0255\t\u0004\u0002\u0002\u0252\u0253",
    "\u0005\u00d8m\u0002\u0253\u0254\u0007^\u0002\u0002\u0254\u0256\u0003",
    "\u0002\u0002\u0002\u0255\u0252\u0003\u0002\u0002\u0002\u0255\u0256\u0003",
    "\u0002\u0002\u0002\u0256\u0257\u0003\u0002\u0002\u0002\u0257\u0259\u0005",
    "\u00f8}\u0002\u0258\u025a\u0005\u0116\u008c\u0002\u0259\u0258\u0003",
    "\u0002\u0002\u0002\u0259\u025a\u0003\u0002\u0002\u0002\u025a?\u0003",
    "\u0002\u0002\u0002\u025b\u025c\u0007V\u0002\u0002\u025c\u025d\u0007",
    "Z\u0002\u0002\u025dA\u0003\u0002\u0002\u0002\u025e\u025f\u0007\u000b",
    "\u0002\u0002\u025f\u0261\u0005\u00eav\u0002\u0260\u0262\u0005\u0116",
    "\u008c\u0002\u0261\u0260\u0003\u0002\u0002\u0002\u0261\u0262\u0003\u0002",
    "\u0002\u0002\u0262\u0264\u0003\u0002\u0002\u0002\u0263\u0265\u0005\n",
    "\u0006\u0002\u0264\u0263\u0003\u0002\u0002\u0002\u0264\u0265\u0003\u0002",
    "\u0002\u0002\u0265\u0266\u0003\u0002\u0002\u0002\u0266\u0268\u0005\u000e",
    "\b\u0002\u0267\u0269\u0005\u0018\r\u0002\u0268\u0267\u0003\u0002\u0002",
    "\u0002\u0268\u0269\u0003\u0002\u0002\u0002\u0269\u026b\u0003\u0002\u0002",
    "\u0002\u026a\u026c\u0005\u0090I\u0002\u026b\u026a\u0003\u0002\u0002",
    "\u0002\u026c\u026d\u0003\u0002\u0002\u0002\u026d\u026b\u0003\u0002\u0002",
    "\u0002\u026d\u026e\u0003\u0002\u0002\u0002\u026eC\u0003\u0002\u0002",
    "\u0002\u026f\u0270\u0007\u000b\u0002\u0002\u0270\u0271\u0005\u00eex",
    "\u0002\u0271\u0273\u00075\u0002\u0002\u0272\u0274\u0005\u0116\u008c",
    "\u0002\u0273\u0272\u0003\u0002\u0002\u0002\u0273\u0274\u0003\u0002\u0002",
    "\u0002\u0274\u0276\u0003\u0002\u0002\u0002\u0275\u0277\u0005\n\u0006",
    "\u0002\u0276\u0275\u0003\u0002\u0002\u0002\u0276\u0277\u0003\u0002\u0002",
    "\u0002\u0277\u0279\u0003\u0002\u0002\u0002\u0278\u027a\u0005\u0090I",
    "\u0002\u0279\u0278\u0003\u0002\u0002\u0002\u027a\u027b\u0003\u0002\u0002",
    "\u0002\u027b\u0279\u0003\u0002\u0002\u0002\u027b\u027c\u0003\u0002\u0002",
    "\u0002\u027cE\u0003\u0002\u0002\u0002\u027d\u027e\u0007\u000b\u0002",
    "\u0002\u027e\u027f\u0005\u00eav\u0002\u027f\u0280\u00076\u0002\u0002",
    "\u0280\u0282\u0005\u00d6l\u0002\u0281\u0283\u0005\u0116\u008c\u0002",
    "\u0282\u0281\u0003\u0002\u0002\u0002\u0282\u0283\u0003\u0002\u0002\u0002",
    "\u0283\u0285\u0003\u0002\u0002\u0002\u0284\u0286\u0005\n\u0006\u0002",
    "\u0285\u0284\u0003\u0002\u0002\u0002\u0285\u0286\u0003\u0002\u0002\u0002",
    "\u0286\u0287\u0003\u0002\u0002\u0002\u0287\u0289\u0005\u000e\b\u0002",
    "\u0288\u028a\u0005\u0090I\u0002\u0289\u0288\u0003\u0002\u0002\u0002",
    "\u028a\u028b\u0003\u0002\u0002\u0002\u028b\u0289\u0003\u0002\u0002\u0002",
    "\u028b\u028c\u0003\u0002\u0002\u0002\u028cG\u0003\u0002\u0002\u0002",
    "\u028d\u028e\u0007\f\u0002\u0002\u028e\u0290\u0005\u00ecw\u0002\u028f",
    "\u0291\u0005\u0116\u008c\u0002\u0290\u028f\u0003\u0002\u0002\u0002\u0290",
    "\u0291\u0003\u0002\u0002\u0002\u0291\u0293\u0003\u0002\u0002\u0002\u0292",
    "\u0294\u0005\n\u0006\u0002\u0293\u0292\u0003\u0002\u0002\u0002\u0293",
    "\u0294\u0003\u0002\u0002\u0002\u0294\u0295\u0003\u0002\u0002\u0002\u0295",
    "\u0297\u0005\u000e\b\u0002\u0296\u0298\u0005J&\u0002\u0297\u0296\u0003",
    "\u0002\u0002\u0002\u0298\u0299\u0003\u0002\u0002\u0002\u0299\u0297\u0003",
    "\u0002\u0002\u0002\u0299\u029a\u0003\u0002\u0002\u0002\u029aI\u0003",
    "\u0002\u0002\u0002\u029b\u029c\u0007\'\u0002\u0002\u029c\u029e\u0005",
    "L\'\u0002\u029d\u029f\u0005\u0116\u008c\u0002\u029e\u029d\u0003\u0002",
    "\u0002\u0002\u029e\u029f\u0003\u0002\u0002\u0002\u029f\u02a1\u0003\u0002",
    "\u0002\u0002\u02a0\u02a2\u0005\u0010\t\u0002\u02a1\u02a0\u0003\u0002",
    "\u0002\u0002\u02a1\u02a2\u0003\u0002\u0002\u0002\u02a2K\u0003\u0002",
    "\u0002\u0002\u02a3\u02a4\u0007Z\u0002\u0002\u02a4M\u0003\u0002\u0002",
    "\u0002\u02a5\u02a6\u0007\u000f\u0002\u0002\u02a6\u02a8\u0005\u00f2z",
    "\u0002\u02a7\u02a9\u0005\u0116\u008c\u0002\u02a8\u02a7\u0003\u0002\u0002",
    "\u0002\u02a8\u02a9\u0003\u0002\u0002\u0002\u02a9\u02ab\u0003\u0002\u0002",
    "\u0002\u02aa\u02ac\u0005\n\u0006\u0002\u02ab\u02aa\u0003\u0002\u0002",
    "\u0002\u02ab\u02ac\u0003\u0002\u0002\u0002\u02ac\u02ad\u0003\u0002\u0002",
    "\u0002\u02ad\u02af\u0005\u000e\b\u0002\u02ae\u02b0\u0005\u0090I\u0002",
    "\u02af\u02ae\u0003\u0002\u0002\u0002\u02b0\u02b1\u0003\u0002\u0002\u0002",
    "\u02b1\u02af\u0003\u0002\u0002\u0002\u02b1\u02b2\u0003\u0002\u0002\u0002",
    "\u02b2O\u0003\u0002\u0002\u0002\u02b3\u02b4\u0007\u000e\u0002\u0002",
    "\u02b4\u02b6\u0005\u00f4{\u0002\u02b5\u02b7\u0005\u0116\u008c\u0002",
    "\u02b6\u02b5\u0003\u0002\u0002\u0002\u02b6\u02b7\u0003\u0002\u0002\u0002",
    "\u02b7\u02b9\u0003\u0002\u0002\u0002\u02b8\u02ba\u0005\n\u0006\u0002",
    "\u02b9\u02b8\u0003\u0002\u0002\u0002\u02b9\u02ba\u0003\u0002\u0002\u0002",
    "\u02ba\u02bb\u0003\u0002\u0002\u0002\u02bb\u02bd\u0005\u000e\b\u0002",
    "\u02bc\u02be\u0005R*\u0002\u02bd\u02bc\u0003\u0002\u0002\u0002\u02bd",
    "\u02be\u0003\u0002\u0002\u0002\u02be\u02c0\u0003\u0002\u0002\u0002\u02bf",
    "\u02c1\u0005T+\u0002\u02c0\u02bf\u0003\u0002\u0002\u0002\u02c0\u02c1",
    "\u0003\u0002\u0002\u0002\u02c1\u02c2\u0003\u0002\u0002\u0002\u02c2\u02c3",
    "\u0005V,\u0002\u02c3Q\u0003\u0002\u0002\u0002\u02c4\u02c5\u0007T\u0002",
    "\u0002\u02c5\u02c6\u0007Z\u0002\u0002\u02c6S\u0003\u0002\u0002\u0002",
    "\u02c7\u02c8\u0007U\u0002\u0002\u02c8\u02c9\u0007Z\u0002\u0002\u02c9",
    "U\u0003\u0002\u0002\u0002\u02ca\u02cc\u0005Z.\u0002\u02cb\u02ca\u0003",
    "\u0002\u0002\u0002\u02cc\u02cf\u0003\u0002\u0002\u0002\u02cd\u02cb\u0003",
    "\u0002\u0002\u0002\u02cd\u02ce\u0003\u0002\u0002\u0002\u02ce\u02d0\u0003",
    "\u0002\u0002\u0002\u02cf\u02cd\u0003\u0002\u0002\u0002\u02d0\u02d5\u0005",
    "X-\u0002\u02d1\u02d4\u0005X-\u0002\u02d2\u02d4\u0005Z.\u0002\u02d3\u02d1",
    "\u0003\u0002\u0002\u0002\u02d3\u02d2\u0003\u0002\u0002\u0002\u02d4\u02d7",
    "\u0003\u0002\u0002\u0002\u02d5\u02d3\u0003\u0002\u0002\u0002\u02d5\u02d6",
    "\u0003\u0002\u0002\u0002\u02d6W\u0003\u0002\u0002\u0002\u02d7\u02d5",
    "\u0003\u0002\u0002\u0002\u02d8\u02dc\t\u0005\u0002\u0002\u02d9\u02da",
    "\u0005\u00d8m\u0002\u02da\u02db\u0007^\u0002\u0002\u02db\u02dd\u0003",
    "\u0002\u0002\u0002\u02dc\u02d9\u0003\u0002\u0002\u0002\u02dc\u02dd\u0003",
    "\u0002\u0002\u0002\u02dd\u02de\u0003\u0002\u0002\u0002\u02de\u02e0\u0005",
    "\u00fc\u007f\u0002\u02df\u02e1\u0005\u0116\u008c\u0002\u02e0\u02df\u0003",
    "\u0002\u0002\u0002\u02e0\u02e1\u0003\u0002\u0002\u0002\u02e1Y\u0003",
    "\u0002\u0002\u0002\u02e2\u02e6\t\u0006\u0002\u0002\u02e3\u02e4\u0005",
    "\u00d8m\u0002\u02e4\u02e5\u0007^\u0002\u0002\u02e5\u02e7\u0003\u0002",
    "\u0002\u0002\u02e6\u02e3\u0003\u0002\u0002\u0002\u02e6\u02e7\u0003\u0002",
    "\u0002\u0002\u02e7\u02e8\u0003\u0002\u0002\u0002\u02e8\u02ea\u0005\u00fc",
    "\u007f\u0002\u02e9\u02eb\u0005\u0116\u008c\u0002\u02ea\u02e9\u0003\u0002",
    "\u0002\u0002\u02ea\u02eb\u0003\u0002\u0002\u0002\u02eb[\u0003\u0002",
    "\u0002\u0002\u02ec\u02ed\u0007\u000e\u0002\u0002\u02ed\u02ee\u0005\u00ee",
    "x\u0002\u02ee\u02f0\u00075\u0002\u0002\u02ef\u02f1\u0005\u0116\u008c",
    "\u0002\u02f0\u02ef\u0003\u0002\u0002\u0002\u02f0\u02f1\u0003\u0002\u0002",
    "\u0002\u02f1\u02f3\u0003\u0002\u0002\u0002\u02f2\u02f4\u0005\n\u0006",
    "\u0002\u02f3\u02f2\u0003\u0002\u0002\u0002\u02f3\u02f4\u0003\u0002\u0002",
    "\u0002\u02f4\u02f5\u0003\u0002\u0002\u0002\u02f5\u02f6\u0005^0\u0002",
    "\u02f6]\u0003\u0002\u0002\u0002\u02f7\u02fa\u0005X-\u0002\u02f8\u02fa",
    "\u0005Z.\u0002\u02f9\u02f7\u0003\u0002\u0002\u0002\u02f9\u02f8\u0003",
    "\u0002\u0002\u0002\u02fa\u02fb\u0003\u0002\u0002\u0002\u02fb\u02f9\u0003",
    "\u0002\u0002\u0002\u02fb\u02fc\u0003\u0002\u0002\u0002\u02fc_\u0003",
    "\u0002\u0002\u0002\u02fd\u02fe\u0007\u0014\u0002\u0002\u02fe\u02ff\u0005",
    "\u0112\u008a\u0002\u02ff\u0300\u0007K\u0002\u0002\u0300\u0302\u0005",
    "\u0102\u0082\u0002\u0301\u0303\u0005\u0116\u008c\u0002\u0302\u0301\u0003",
    "\u0002\u0002\u0002\u0302\u0303\u0003\u0002\u0002\u0002\u0303\u0305\u0003",
    "\u0002\u0002\u0002\u0304\u0306\u0005\n\u0006\u0002\u0305\u0304\u0003",
    "\u0002\u0002\u0002\u0305\u0306\u0003\u0002\u0002\u0002\u0306\u0307\u0003",
    "\u0002\u0002\u0002\u0307\u0309\u0005\u000e\b\u0002\u0308\u030a\u0005",
    "> \u0002\u0309\u0308\u0003\u0002\u0002\u0002\u030a\u030b\u0003\u0002",
    "\u0002\u0002\u030b\u0309\u0003\u0002\u0002\u0002\u030b\u030c\u0003\u0002",
    "\u0002\u0002\u030c\u030f\u0003\u0002\u0002\u0002\u030d\u030e\u0007L",
    "\u0002\u0002\u030e\u0310\u0005b2\u0002\u030f\u030d\u0003\u0002\u0002",
    "\u0002\u030f\u0310\u0003\u0002\u0002\u0002\u0310a\u0003\u0002\u0002",
    "\u0002\u0311\u0312\u0007X\u0002\u0002\u0312c\u0003\u0002\u0002\u0002",
    "\u0313\u0314\u0007C\u0002\u0002\u0314\u0315\u0005\u00ccg\u0002\u0315",
    "e\u0003\u0002\u0002\u0002\u0316\u0317\u0007D\u0002\u0002\u0317\u0318",
    "\u0005\u00ccg\u0002\u0318g\u0003\u0002\u0002\u0002\u0319\u031a\u0007",
    "C\u0002\u0002\u031a\u031b\u0005l7\u0002\u031bi\u0003\u0002\u0002\u0002",
    "\u031c\u031d\u0007D\u0002\u0002\u031d\u031e\u0005l7\u0002\u031ek\u0003",
    "\u0002\u0002\u0002\u031f\u0322\u0007Y\u0002\u0002\u0320\u0322\u0005",
    "\u00ccg\u0002\u0321\u031f\u0003\u0002\u0002\u0002\u0321\u0320\u0003",
    "\u0002\u0002\u0002\u0322m\u0003\u0002\u0002\u0002\u0323\u0324\u0007",
    "M\u0002\u0002\u0324\u0325\u0007X\u0002\u0002\u0325o\u0003\u0002\u0002",
    "\u0002\u0326\u0327\u00079\u0002\u0002\u0327\u0328\u0007X\u0002\u0002",
    "\u0328q\u0003\u0002\u0002\u0002\u0329\u032a\u0007\u001b\u0002\u0002",
    "\u032as\u0003\u0002\u0002\u0002\u032b\u0332\u0005v<\u0002\u032c\u0332",
    "\u0005x=\u0002\u032d\u0332\u0005z>\u0002\u032e\u0332\u0005|?\u0002\u032f",
    "\u0332\u0005~@\u0002\u0330\u0332\u0005\u0084C\u0002\u0331\u032b\u0003",
    "\u0002\u0002\u0002\u0331\u032c\u0003\u0002\u0002\u0002\u0331\u032d\u0003",
    "\u0002\u0002\u0002\u0331\u032e\u0003\u0002\u0002\u0002\u0331\u032f\u0003",
    "\u0002\u0002\u0002\u0331\u0330\u0003\u0002\u0002\u0002\u0332u\u0003",
    "\u0002\u0002\u0002\u0333\u0334\u0007:\u0002\u0002\u0334w\u0003\u0002",
    "\u0002\u0002\u0335\u0336\u0007;\u0002\u0002\u0336\u0337\u0005\u00d4",
    "k\u0002\u0337y\u0003\u0002\u0002\u0002\u0338\u0339\u0007G\u0002\u0002",
    "\u0339{\u0003\u0002\u0002\u0002\u033a\u033b\u0007E\u0002\u0002\u033b",
    "}\u0003\u0002\u0002\u0002\u033c\u033f\u0005\u0080A\u0002\u033d\u033f",
    "\u0005\u0082B\u0002\u033e\u033c\u0003\u0002\u0002\u0002\u033e\u033d",
    "\u0003\u0002\u0002\u0002\u033f\u007f\u0003\u0002\u0002\u0002\u0340\u0341",
    "\u0007H\u0002\u0002\u0341\u0081\u0003\u0002\u0002\u0002\u0342\u0343",
    "\u0007F\u0002\u0002\u0343\u0083\u0003\u0002\u0002\u0002\u0344\u0345",
    "\u0007=\u0002\u0002\u0345\u0085\u0003\u0002\u0002\u0002\u0346\u0348",
    "\u0005\f\u0007\u0002\u0347\u0346\u0003\u0002\u0002\u0002\u0347\u0348",
    "\u0003\u0002\u0002\u0002\u0348\u0349\u0003\u0002\u0002\u0002\u0349\u034a",
    "\u0005\u0014\u000b\u0002\u034a\u034c\u0005t;\u0002\u034b\u034d\u0005",
    "\u008aF\u0002\u034c\u034b\u0003\u0002\u0002\u0002\u034c\u034d\u0003",
    "\u0002\u0002\u0002\u034d\u034f\u0003\u0002\u0002\u0002\u034e\u0350\u0005",
    "\u0088E\u0002\u034f\u034e\u0003\u0002\u0002\u0002\u034f\u0350\u0003",
    "\u0002\u0002\u0002\u0350\u0087\u0003\u0002\u0002\u0002\u0351\u0352\u0007",
    "<\u0002\u0002\u0352\u0089\u0003\u0002\u0002\u0002\u0353\u0354\u0007",
    "I\u0002\u0002\u0354\u0357\u0005\u0108\u0085\u0002\u0355\u0356\u0007",
    "J\u0002\u0002\u0356\u0358\u0005\u010e\u0088\u0002\u0357\u0355\u0003",
    "\u0002\u0002\u0002\u0357\u0358\u0003\u0002\u0002\u0002\u0358\u008b\u0003",
    "\u0002\u0002\u0002\u0359\u035a\u0007A\u0002\u0002\u035a\u035b\u0007",
    "X\u0002\u0002\u035b\u008d\u0003\u0002\u0002\u0002\u035c\u035d\u0007",
    "B\u0002\u0002\u035d\u035e\u0007X\u0002\u0002\u035e\u008f\u0003\u0002",
    "\u0002\u0002\u035f\u0377\u0005\u00acW\u0002\u0360\u0377\u0005\u0092",
    "J\u0002\u0361\u0377\u0005\u00a6T\u0002\u0362\u0377\u0005\u00a2R\u0002",
    "\u0363\u0377\u0005\u0094K\u0002\u0364\u0377\u0005\u0096L\u0002\u0365",
    "\u0377\u0005\u0098M\u0002\u0366\u0377\u0005\u009aN\u0002\u0367\u0377",
    "\u0005\u009cO\u0002\u0368\u0377\u0005\u00aeX\u0002\u0369\u0377\u0005",
    "\u009eP\u0002\u036a\u0377\u0005\u00a0Q\u0002\u036b\u0377\u0005\u00a4",
    "S\u0002\u036c\u0377\u0005\u00a8U\u0002\u036d\u0377\u0005\u00aaV\u0002",
    "\u036e\u0377\u0005\u00b0Y\u0002\u036f\u0377\u0005\u00b2Z\u0002\u0370",
    "\u0377\u0005\u00b4[\u0002\u0371\u0377\u0005\u00b6\\\u0002\u0372\u0377",
    "\u0005\u00b8]\u0002\u0373\u0377\u0005\u00ba^\u0002\u0374\u0377\u0005",
    "\u00bc_\u0002\u0375\u0377\u0005\u00be`\u0002\u0376\u035f\u0003\u0002",
    "\u0002\u0002\u0376\u0360\u0003\u0002\u0002\u0002\u0376\u0361\u0003\u0002",
    "\u0002\u0002\u0376\u0362\u0003\u0002\u0002\u0002\u0376\u0363\u0003\u0002",
    "\u0002\u0002\u0376\u0364\u0003\u0002\u0002\u0002\u0376\u0365\u0003\u0002",
    "\u0002\u0002\u0376\u0366\u0003\u0002\u0002\u0002\u0376\u0367\u0003\u0002",
    "\u0002\u0002\u0376\u0368\u0003\u0002\u0002\u0002\u0376\u0369\u0003\u0002",
    "\u0002\u0002\u0376\u036a\u0003\u0002\u0002\u0002\u0376\u036b\u0003\u0002",
    "\u0002\u0002\u0376\u036c\u0003\u0002\u0002\u0002\u0376\u036d\u0003\u0002",
    "\u0002\u0002\u0376\u036e\u0003\u0002\u0002\u0002\u0376\u036f\u0003\u0002",
    "\u0002\u0002\u0376\u0370\u0003\u0002\u0002\u0002\u0376\u0371\u0003\u0002",
    "\u0002\u0002\u0376\u0372\u0003\u0002\u0002\u0002\u0376\u0373\u0003\u0002",
    "\u0002\u0002\u0376\u0374\u0003\u0002\u0002\u0002\u0376\u0375\u0003\u0002",
    "\u0002\u0002\u0377\u0091\u0003\u0002\u0002\u0002\u0378\u0379\u0007\u0018",
    "\u0002\u0002\u0379\u037b\u0005\u0110\u0089\u0002\u037a\u037c\u0005\u0116",
    "\u008c\u0002\u037b\u037a\u0003\u0002\u0002\u0002\u037b\u037c\u0003\u0002",
    "\u0002\u0002\u037c\u037d\u0003\u0002\u0002\u0002\u037d\u037e\u0005\u0086",
    "D\u0002\u037e\u0093\u0003\u0002\u0002\u0002\u037f\u0380\u0007\u001c",
    "\u0002\u0002\u0380\u0382\u0005\u0110\u0089\u0002\u0381\u0383\u0005\u0116",
    "\u008c\u0002\u0382\u0381\u0003\u0002\u0002\u0002\u0382\u0383\u0003\u0002",
    "\u0002\u0002\u0383\u0384\u0003\u0002\u0002\u0002\u0384\u0385\u0005\u0086",
    "D\u0002\u0385\u0095\u0003\u0002\u0002\u0002\u0386\u0387\u0007\u001d",
    "\u0002\u0002\u0387\u0389\u0005\u0110\u0089\u0002\u0388\u038a\u0005\u0116",
    "\u008c\u0002\u0389\u0388\u0003\u0002\u0002\u0002\u0389\u038a\u0003\u0002",
    "\u0002\u0002\u038a\u038b\u0003\u0002\u0002\u0002\u038b\u038c\u0005\u0086",
    "D\u0002\u038c\u0097\u0003\u0002\u0002\u0002\u038d\u038e\u0007\u001e",
    "\u0002\u0002\u038e\u0390\u0005\u0110\u0089\u0002\u038f\u0391\u0005\u0116",
    "\u008c\u0002\u0390\u038f\u0003\u0002\u0002\u0002\u0390\u0391\u0003\u0002",
    "\u0002\u0002\u0391\u0392\u0003\u0002\u0002\u0002\u0392\u0393\u0005\u0086",
    "D\u0002\u0393\u0099\u0003\u0002\u0002\u0002\u0394\u0395\u0007\u001f",
    "\u0002\u0002\u0395\u0397\u0005\u0110\u0089\u0002\u0396\u0398\u0005\u0116",
    "\u008c\u0002\u0397\u0396\u0003\u0002\u0002\u0002\u0397\u0398\u0003\u0002",
    "\u0002\u0002\u0398\u0399\u0003\u0002\u0002\u0002\u0399\u039a\u0005\u0086",
    "D\u0002\u039a\u039b\u0005n8\u0002\u039b\u039d\u0005p9\u0002\u039c\u039e",
    "\u0005h5\u0002\u039d\u039c\u0003\u0002\u0002\u0002\u039d\u039e\u0003",
    "\u0002\u0002\u0002\u039e\u03a0\u0003\u0002\u0002\u0002\u039f\u03a1\u0005",
    "j6\u0002\u03a0\u039f\u0003\u0002\u0002\u0002\u03a0\u03a1\u0003\u0002",
    "\u0002\u0002\u03a1\u009b\u0003\u0002\u0002\u0002\u03a2\u03a3\u0007 ",
    "\u0002\u0002\u03a3\u03a5\u0005\u0104\u0083\u0002\u03a4\u03a6\u0005\u0116",
    "\u008c\u0002\u03a5\u03a4\u0003\u0002\u0002\u0002\u03a5\u03a6\u0003\u0002",
    "\u0002\u0002\u03a6\u03a7\u0003\u0002\u0002\u0002\u03a7\u03a8\u0005\u0086",
    "D\u0002\u03a8\u009d\u0003\u0002\u0002\u0002\u03a9\u03aa\u0007$\u0002",
    "\u0002\u03aa\u03ac\u0005\u0110\u0089\u0002\u03ab\u03ad\u0005\u0116\u008c",
    "\u0002\u03ac\u03ab\u0003\u0002\u0002\u0002\u03ac\u03ad\u0003\u0002\u0002",
    "\u0002\u03ad\u03ae\u0003\u0002\u0002\u0002\u03ae\u03af\u0005\u0086D",
    "\u0002\u03af\u009f\u0003\u0002\u0002\u0002\u03b0\u03b1\u0007&\u0002",
    "\u0002\u03b1\u03b3\u0005\u0104\u0083\u0002\u03b2\u03b4\u0005\u0116\u008c",
    "\u0002\u03b3\u03b2\u0003\u0002\u0002\u0002\u03b3\u03b4\u0003\u0002\u0002",
    "\u0002\u03b4\u03b5\u0003\u0002\u0002\u0002\u03b5\u03b6\u0005\u0086D",
    "\u0002\u03b6\u00a1\u0003\u0002\u0002\u0002\u03b7\u03ba\u0007\u001a\u0002",
    "\u0002\u03b8\u03ba\u0005r:\u0002\u03b9\u03b7\u0003\u0002\u0002\u0002",
    "\u03b9\u03b8\u0003\u0002\u0002\u0002\u03ba\u03bb\u0003\u0002\u0002\u0002",
    "\u03bb\u03bd\u0005\u0104\u0083\u0002\u03bc\u03be\u0005\u0116\u008c\u0002",
    "\u03bd\u03bc\u0003\u0002\u0002\u0002\u03bd\u03be\u0003\u0002\u0002\u0002",
    "\u03be\u03bf\u0003\u0002\u0002\u0002\u03bf\u03c3\u0005\u0086D\u0002",
    "\u03c0\u03c2\u0005\u00c4c\u0002\u03c1\u03c0\u0003\u0002\u0002\u0002",
    "\u03c2\u03c5\u0003\u0002\u0002\u0002\u03c3\u03c1\u0003\u0002\u0002\u0002",
    "\u03c3\u03c4\u0003\u0002\u0002\u0002\u03c4\u00a3\u0003\u0002\u0002\u0002",
    "\u03c5\u03c3\u0003\u0002\u0002\u0002\u03c6\u03c7\u0007(\u0002\u0002",
    "\u03c7\u03c9\u0005\u0104\u0083\u0002\u03c8\u03ca\u0005\u0116\u008c\u0002",
    "\u03c9\u03c8\u0003\u0002\u0002\u0002\u03c9\u03ca\u0003\u0002\u0002\u0002",
    "\u03ca\u03cb\u0003\u0002\u0002\u0002\u03cb\u03cf\u0005\u0086D\u0002",
    "\u03cc\u03ce\u0005\u00c4c\u0002\u03cd\u03cc\u0003\u0002\u0002\u0002",
    "\u03ce\u03d1\u0003\u0002\u0002\u0002\u03cf\u03cd\u0003\u0002\u0002\u0002",
    "\u03cf\u03d0\u0003\u0002\u0002\u0002\u03d0\u00a5\u0003\u0002\u0002\u0002",
    "\u03d1\u03cf\u0003\u0002\u0002\u0002\u03d2\u03d3\u0007\u0019\u0002\u0002",
    "\u03d3\u03d5\u0005\u0104\u0083\u0002\u03d4\u03d6\u0005\u0116\u008c\u0002",
    "\u03d5\u03d4\u0003\u0002\u0002\u0002\u03d5\u03d6\u0003\u0002\u0002\u0002",
    "\u03d6\u03d7\u0003\u0002\u0002\u0002\u03d7\u03db\u0005\u0086D\u0002",
    "\u03d8\u03da\u0005\u00c4c\u0002\u03d9\u03d8\u0003\u0002\u0002\u0002",
    "\u03da\u03dd\u0003\u0002\u0002\u0002\u03db\u03d9\u0003\u0002\u0002\u0002",
    "\u03db\u03dc\u0003\u0002\u0002\u0002\u03dc\u00a7\u0003\u0002\u0002\u0002",
    "\u03dd\u03db\u0003\u0002\u0002\u0002\u03de\u03df\u0007)\u0002\u0002",
    "\u03df\u03e1\u0005\u0110\u0089\u0002\u03e0\u03e2\u0005\u0116\u008c\u0002",
    "\u03e1\u03e0\u0003\u0002\u0002\u0002\u03e1\u03e2\u0003\u0002\u0002\u0002",
    "\u03e2\u03e3\u0003\u0002\u0002\u0002\u03e3\u03e5\u0005\u0086D\u0002",
    "\u03e4\u03e6\u0005d3\u0002\u03e5\u03e4\u0003\u0002\u0002\u0002\u03e5",
    "\u03e6\u0003\u0002\u0002\u0002\u03e6\u03e8\u0003\u0002\u0002\u0002\u03e7",
    "\u03e9\u0005f4\u0002\u03e8\u03e7\u0003\u0002\u0002\u0002\u03e8\u03e9",
    "\u0003\u0002\u0002\u0002\u03e9\u00a9\u0003\u0002\u0002\u0002\u03ea\u03eb",
    "\u0007*\u0002\u0002\u03eb\u03ed\u0005\u0110\u0089\u0002\u03ec\u03ee",
    "\u0005\u0116\u008c\u0002\u03ed\u03ec\u0003\u0002\u0002\u0002\u03ed\u03ee",
    "\u0003\u0002\u0002\u0002\u03ee\u03ef\u0003\u0002\u0002\u0002\u03ef\u03f0",
    "\u0005\u0086D\u0002\u03f0\u00ab\u0003\u0002\u0002\u0002\u03f1\u03f2",
    "\u0007\u0016\u0002\u0002\u03f2\u03f4\u0005\u0104\u0083\u0002\u03f3\u03f5",
    "\u0005\u0116\u008c\u0002\u03f4\u03f3\u0003\u0002\u0002\u0002\u03f4\u03f5",
    "\u0003\u0002\u0002\u0002\u03f5\u03f6\u0003\u0002\u0002\u0002\u03f6\u03f8",
    "\u0005\u0086D\u0002\u03f7\u03f9\u0005\u00c2b\u0002\u03f8\u03f7\u0003",
    "\u0002\u0002\u0002\u03f8\u03f9\u0003\u0002\u0002\u0002\u03f9\u03fb\u0003",
    "\u0002\u0002\u0002\u03fa\u03fc\u0005\u00c0a\u0002\u03fb\u03fa\u0003",
    "\u0002\u0002\u0002\u03fb\u03fc\u0003\u0002\u0002\u0002\u03fc\u0400\u0003",
    "\u0002\u0002\u0002\u03fd\u03ff\u0005\u00c4c\u0002\u03fe\u03fd\u0003",
    "\u0002\u0002\u0002\u03ff\u0402\u0003\u0002\u0002\u0002\u0400\u03fe\u0003",
    "\u0002\u0002\u0002\u0400\u0401\u0003\u0002\u0002\u0002\u0401\u00ad\u0003",
    "\u0002\u0002\u0002\u0402\u0400\u0003\u0002\u0002\u0002\u0403\u0404\u0007",
    "!\u0002\u0002\u0404\u0406\u0005\u0104\u0083\u0002\u0405\u0407\u0005",
    "\u0116\u008c\u0002\u0406\u0405\u0003\u0002\u0002\u0002\u0406\u0407\u0003",
    "\u0002\u0002\u0002\u0407\u0408\u0003\u0002\u0002\u0002\u0408\u040a\u0005",
    "\u0086D\u0002\u0409\u040b\u0005\u00c2b\u0002\u040a\u0409\u0003\u0002",
    "\u0002\u0002\u040a\u040b\u0003\u0002\u0002\u0002\u040b\u040d\u0003\u0002",
    "\u0002\u0002\u040c\u040e\u0005\u00c0a\u0002\u040d\u040c\u0003\u0002",
    "\u0002\u0002\u040d\u040e\u0003\u0002\u0002\u0002\u040e\u0412\u0003\u0002",
    "\u0002\u0002\u040f\u0411\u0005\u00c4c\u0002\u0410\u040f\u0003\u0002",
    "\u0002\u0002\u0411\u0414\u0003\u0002\u0002\u0002\u0412\u0410\u0003\u0002",
    "\u0002\u0002\u0412\u0413\u0003\u0002\u0002\u0002\u0413\u00af\u0003\u0002",
    "\u0002\u0002\u0414\u0412\u0003\u0002\u0002\u0002\u0415\u0416\u0007,",
    "\u0002\u0002\u0416\u0419\u0005\u010c\u0087\u0002\u0417\u0418\u00070",
    "\u0002\u0002\u0418\u041a\u0005\u010a\u0086\u0002\u0419\u0417\u0003\u0002",
    "\u0002\u0002\u0419\u041a\u0003\u0002\u0002\u0002\u041a\u041c\u0003\u0002",
    "\u0002\u0002\u041b\u041d\u0005\u0116\u008c\u0002\u041c\u041b\u0003\u0002",
    "\u0002\u0002\u041c\u041d\u0003\u0002\u0002\u0002\u041d\u041e\u0003\u0002",
    "\u0002\u0002\u041e\u0422\u0005\u0086D\u0002\u041f\u0421\u0005\u00c4",
    "c\u0002\u0420\u041f\u0003\u0002\u0002\u0002\u0421\u0424\u0003\u0002",
    "\u0002\u0002\u0422\u0420\u0003\u0002\u0002\u0002\u0422\u0423\u0003\u0002",
    "\u0002\u0002\u0423\u00b1\u0003\u0002\u0002\u0002\u0424\u0422\u0003\u0002",
    "\u0002\u0002\u0425\u0426\u0007-\u0002\u0002\u0426\u0429\u0005\u010c",
    "\u0087\u0002\u0427\u0428\u00070\u0002\u0002\u0428\u042a\u0005\u010a",
    "\u0086\u0002\u0429\u0427\u0003\u0002\u0002\u0002\u0429\u042a\u0003\u0002",
    "\u0002\u0002\u042a\u042c\u0003\u0002\u0002\u0002\u042b\u042d\u0005\u0116",
    "\u008c\u0002\u042c\u042b\u0003\u0002\u0002\u0002\u042c\u042d\u0003\u0002",
    "\u0002\u0002\u042d\u042e\u0003\u0002\u0002\u0002\u042e\u0432\u0005\u0086",
    "D\u0002\u042f\u0431\u0005\u00c4c\u0002\u0430\u042f\u0003\u0002\u0002",
    "\u0002\u0431\u0434\u0003\u0002\u0002\u0002\u0432\u0430\u0003\u0002\u0002",
    "\u0002\u0432\u0433\u0003\u0002\u0002\u0002\u0433\u00b3\u0003\u0002\u0002",
    "\u0002\u0434\u0432\u0003\u0002\u0002\u0002\u0435\u0436\u0007.\u0002",
    "\u0002\u0436\u0439\u0005\u010c\u0087\u0002\u0437\u0438\u00070\u0002",
    "\u0002\u0438\u043a\u0005\u010a\u0086\u0002\u0439\u0437\u0003\u0002\u0002",
    "\u0002\u0439\u043a\u0003\u0002\u0002\u0002\u043a\u043c\u0003\u0002\u0002",
    "\u0002\u043b\u043d\u0005\u0116\u008c\u0002\u043c\u043b\u0003\u0002\u0002",
    "\u0002\u043c\u043d\u0003\u0002\u0002\u0002\u043d\u043e\u0003\u0002\u0002",
    "\u0002\u043e\u0442\u0005\u0086D\u0002\u043f\u0441\u0005\u00c4c\u0002",
    "\u0440\u043f\u0003\u0002\u0002\u0002\u0441\u0444\u0003\u0002\u0002\u0002",
    "\u0442\u0440\u0003\u0002\u0002\u0002\u0442\u0443\u0003\u0002\u0002\u0002",
    "\u0443\u00b5\u0003\u0002\u0002\u0002\u0444\u0442\u0003\u0002\u0002\u0002",
    "\u0445\u0446\u0007/\u0002\u0002\u0446\u0449\u0005\u010c\u0087\u0002",
    "\u0447\u0448\u00070\u0002\u0002\u0448\u044a\u0005\u010a\u0086\u0002",
    "\u0449\u0447\u0003\u0002\u0002\u0002\u0449\u044a\u0003\u0002\u0002\u0002",
    "\u044a\u044c\u0003\u0002\u0002\u0002\u044b\u044d\u0005\u0116\u008c\u0002",
    "\u044c\u044b\u0003\u0002\u0002\u0002\u044c\u044d\u0003\u0002\u0002\u0002",
    "\u044d\u044e\u0003\u0002\u0002\u0002\u044e\u0452\u0005\u0086D\u0002",
    "\u044f\u0451\u0005\u00c4c\u0002\u0450\u044f\u0003\u0002\u0002\u0002",
    "\u0451\u0454\u0003\u0002\u0002\u0002\u0452\u0450\u0003\u0002\u0002\u0002",
    "\u0452\u0453\u0003\u0002\u0002\u0002\u0453\u00b7\u0003\u0002\u0002\u0002",
    "\u0454\u0452\u0003\u0002\u0002\u0002\u0455\u0456\u00071\u0002\u0002",
    "\u0456\u0458\u0005\u0110\u0089\u0002\u0457\u0459\u0005\u0116\u008c\u0002",
    "\u0458\u0457\u0003\u0002\u0002\u0002\u0458\u0459\u0003\u0002\u0002\u0002",
    "\u0459\u045a\u0003\u0002\u0002\u0002\u045a\u045c\u0005\u0086D\u0002",
    "\u045b\u045d\u0005d3\u0002\u045c\u045b\u0003\u0002\u0002\u0002\u045c",
    "\u045d\u0003\u0002\u0002\u0002\u045d\u045f\u0003\u0002\u0002\u0002\u045e",
    "\u0460\u0005f4\u0002\u045f\u045e\u0003\u0002\u0002\u0002\u045f\u0460",
    "\u0003\u0002\u0002\u0002\u0460\u00b9\u0003\u0002\u0002\u0002\u0461\u0462",
    "\u00072\u0002\u0002\u0462\u0464\u0005\u0110\u0089\u0002\u0463\u0465",
    "\u0005\u0116\u008c\u0002\u0464\u0463\u0003\u0002\u0002\u0002\u0464\u0465",
    "\u0003\u0002\u0002\u0002\u0465\u0466\u0003\u0002\u0002\u0002\u0466\u0468",
    "\u0005\u0086D\u0002\u0467\u0469\u0005\u008cG\u0002\u0468\u0467\u0003",
    "\u0002\u0002\u0002\u0468\u0469\u0003\u0002\u0002\u0002\u0469\u046a\u0003",
    "\u0002\u0002\u0002\u046a\u046b\u0005\u008eH\u0002\u046b\u00bb\u0003",
    "\u0002\u0002\u0002\u046c\u046d\u00073\u0002\u0002\u046d\u046f\u0005",
    "\u0110\u0089\u0002\u046e\u0470\u0005\u0116\u008c\u0002\u046f\u046e\u0003",
    "\u0002\u0002\u0002\u046f\u0470\u0003\u0002\u0002\u0002\u0470\u0471\u0003",
    "\u0002\u0002\u0002\u0471\u0472\u0005\u0086D\u0002\u0472\u00bd\u0003",
    "\u0002\u0002\u0002\u0473\u0474\u00074\u0002\u0002\u0474\u0476\u0005",
    "\u0110\u0089\u0002\u0475\u0477\u0005\u0116\u008c\u0002\u0476\u0475\u0003",
    "\u0002\u0002\u0002\u0476\u0477\u0003\u0002\u0002\u0002\u0477\u0478\u0003",
    "\u0002\u0002\u0002\u0478\u0479\u0005\u0086D\u0002\u0479\u00bf\u0003",
    "\u0002\u0002\u0002\u047a\u047b\u0007>\u0002\u0002\u047b\u00c1\u0003",
    "\u0002\u0002\u0002\u047c\u047d\u0007?\u0002\u0002\u047d\u00c3\u0003",
    "\u0002\u0002\u0002\u047e\u047f\u0007@\u0002\u0002\u047f\u0480\u0005",
    "\u00c6d\u0002\u0480\u0481\u0007N\u0002\u0002\u0481\u0482\u0005\u00c8",
    "e\u0002\u0482\u00c5\u0003\u0002\u0002\u0002\u0483\u0484\u0005\u00ca",
    "f\u0002\u0484\u00c7\u0003\u0002\u0002\u0002\u0485\u0486\u0005\u00ca",
    "f\u0002\u0486\u00c9\u0003\u0002\u0002\u0002\u0487\u048c\u0007W\u0002",
    "\u0002\u0488\u0489\u0007^\u0002\u0002\u0489\u048b\u0007W\u0002\u0002",
    "\u048a\u0488\u0003\u0002\u0002\u0002\u048b\u048e\u0003\u0002\u0002\u0002",
    "\u048c\u048a\u0003\u0002\u0002\u0002\u048c\u048d\u0003\u0002\u0002\u0002",
    "\u048d\u00cb\u0003\u0002\u0002\u0002\u048e\u048c\u0003\u0002\u0002\u0002",
    "\u048f\u0491\u0005\u00ceh\u0002\u0490\u048f\u0003\u0002\u0002\u0002",
    "\u0490\u0491\u0003\u0002\u0002\u0002\u0491\u0492\u0003\u0002\u0002\u0002",
    "\u0492\u0493\u0007X\u0002\u0002\u0493\u00cd\u0003\u0002\u0002\u0002",
    "\u0494\u0495\t\u0007\u0002\u0002\u0495\u00cf\u0003\u0002\u0002\u0002",
    "\u0496\u0497\u0007W\u0002\u0002\u0497\u00d1\u0003\u0002\u0002\u0002",
    "\u0498\u0499\u0007W\u0002\u0002\u0499\u00d3\u0003\u0002\u0002\u0002",
    "\u049a\u049b\u0007W\u0002\u0002\u049b\u00d5\u0003\u0002\u0002\u0002",
    "\u049c\u049d\u0005\u00d8m\u0002\u049d\u049e\u0007^\u0002\u0002\u049e",
    "\u04a0\u0003\u0002\u0002\u0002\u049f\u049c\u0003\u0002\u0002\u0002\u049f",
    "\u04a0\u0003\u0002\u0002\u0002\u04a0\u04a1\u0003\u0002\u0002\u0002\u04a1",
    "\u04a2\u0005\u00f6|\u0002\u04a2\u00d7\u0003\u0002\u0002\u0002\u04a3",
    "\u04a4\u0007W\u0002\u0002\u04a4\u00d9\u0003\u0002\u0002\u0002\u04a5",
    "\u04a6\u0007W\u0002\u0002\u04a6\u00db\u0003\u0002\u0002\u0002\u04a7",
    "\u04a8\u0007W\u0002\u0002\u04a8\u00dd\u0003\u0002\u0002\u0002\u04a9",
    "\u04aa\u0007W\u0002\u0002\u04aa\u00df\u0003\u0002\u0002\u0002\u04ab",
    "\u04ac\u0007W\u0002\u0002\u04ac\u00e1\u0003\u0002\u0002\u0002\u04ad",
    "\u04ae\u0007W\u0002\u0002\u04ae\u00e3\u0003\u0002\u0002\u0002\u04af",
    "\u04b0\u0007W\u0002\u0002\u04b0\u00e5\u0003\u0002\u0002\u0002\u04b1",
    "\u04b2\u0007W\u0002\u0002\u04b2\u00e7\u0003\u0002\u0002\u0002\u04b3",
    "\u04b4\u0007W\u0002\u0002\u04b4\u00e9\u0003\u0002\u0002\u0002\u04b5",
    "\u04b6\u0007W\u0002\u0002\u04b6\u00eb\u0003\u0002\u0002\u0002\u04b7",
    "\u04b8\u0007W\u0002\u0002\u04b8\u00ed\u0003\u0002\u0002\u0002\u04b9",
    "\u04ba\u0005\u00f0y\u0002\u04ba\u04bb\u0007^\u0002\u0002\u04bb\u04bd",
    "\u0003\u0002\u0002\u0002\u04bc\u04b9\u0003\u0002\u0002\u0002\u04bc\u04bd",
    "\u0003\u0002\u0002\u0002\u04bd\u04be\u0003\u0002\u0002\u0002\u04be\u04bf",
    "\u0005\u00fa~\u0002\u04bf\u00ef\u0003\u0002\u0002\u0002\u04c0\u04c1",
    "\u0007W\u0002\u0002\u04c1\u00f1\u0003\u0002\u0002\u0002\u04c2\u04c3",
    "\u0007W\u0002\u0002\u04c3\u00f3\u0003\u0002\u0002\u0002\u04c4\u04c5",
    "\u0007W\u0002\u0002\u04c5\u00f5\u0003\u0002\u0002\u0002\u04c6\u04c7",
    "\u0007W\u0002\u0002\u04c7\u00f7\u0003\u0002\u0002\u0002\u04c8\u04c9",
    "\u0007W\u0002\u0002\u04c9\u00f9\u0003\u0002\u0002\u0002\u04ca\u04cb",
    "\u0007W\u0002\u0002\u04cb\u00fb\u0003\u0002\u0002\u0002\u04cc\u04cd",
    "\u0007W\u0002\u0002\u04cd\u00fd\u0003\u0002\u0002\u0002\u04ce\u04cf",
    "\u0007W\u0002\u0002\u04cf\u00ff\u0003\u0002\u0002\u0002\u04d0\u04d1",
    "\u0007W\u0002\u0002\u04d1\u0101\u0003\u0002\u0002\u0002\u04d2\u04d3",
    "\u0007W\u0002\u0002\u04d3\u0103\u0003\u0002\u0002\u0002\u04d4\u04d5",
    "\u0005\u0106\u0084\u0002\u04d5\u04d6\u0007^\u0002\u0002\u04d6\u04d8",
    "\u0003\u0002\u0002\u0002\u04d7\u04d4\u0003\u0002\u0002\u0002\u04d7\u04d8",
    "\u0003\u0002\u0002\u0002\u04d8\u04d9\u0003\u0002\u0002\u0002\u04d9\u04da",
    "\u0005\u00fe\u0080\u0002\u04da\u0105\u0003\u0002\u0002\u0002\u04db\u04dc",
    "\u0007W\u0002\u0002\u04dc\u0107\u0003\u0002\u0002\u0002\u04dd\u04de",
    "\u0007W\u0002\u0002\u04de\u0109\u0003\u0002\u0002\u0002\u04df\u04e0",
    "\u0007W\u0002\u0002\u04e0\u010b\u0003\u0002\u0002\u0002\u04e1\u04e2",
    "\u0005\u0106\u0084\u0002\u04e2\u04e3\u0007^\u0002\u0002\u04e3\u04e5",
    "\u0003\u0002\u0002\u0002\u04e4\u04e1\u0003\u0002\u0002\u0002\u04e4\u04e5",
    "\u0003\u0002\u0002\u0002\u04e5\u04e6\u0003\u0002\u0002\u0002\u04e6\u04e7",
    "\u0005\u0100\u0081\u0002\u04e7\u010d\u0003\u0002\u0002\u0002\u04e8\u04e9",
    "\u0007W\u0002\u0002\u04e9\u010f\u0003\u0002\u0002\u0002\u04ea\u04eb",
    "\u0005\u00fe\u0080\u0002\u04eb\u0111\u0003\u0002\u0002\u0002\u04ec\u04ed",
    "\u0007W\u0002\u0002\u04ed\u0113\u0003\u0002\u0002\u0002\u04ee\u04ef",
    "\u0007W\u0002\u0002\u04ef\u0115\u0003\u0002\u0002\u0002\u04f0\u04f1",
    "\u0007[\u0002\u0002\u04f1\u0117\u0003\u0002\u0002\u0002\u00a0\u011b",
    "\u0123\u013f\u0156\u0159\u015f\u0168\u016b\u016f\u0176\u017c\u017f\u0183",
    "\u0188\u018f\u0192\u0197\u019e\u01a1\u01a7\u01ac\u01af\u01b5\u01ba\u01bd",
    "\u01c3\u01c6\u01cb\u01ce\u01d2\u01d5\u01da\u01dd\u01e1\u01e4\u01e9\u01ec",
    "\u01f0\u01f7\u01fa\u0200\u0206\u0209\u020e\u0215\u0218\u021e\u0223\u0226",
    "\u022c\u0230\u0234\u023a\u0243\u0246\u024c\u024f\u0255\u0259\u0261\u0264",
    "\u0268\u026d\u0273\u0276\u027b\u0282\u0285\u028b\u0290\u0293\u0299\u029e",
    "\u02a1\u02a8\u02ab\u02b1\u02b6\u02b9\u02bd\u02c0\u02cd\u02d3\u02d5\u02dc",
    "\u02e0\u02e6\u02ea\u02f0\u02f3\u02f9\u02fb\u0302\u0305\u030b\u030f\u0321",
    "\u0331\u033e\u0347\u034c\u034f\u0357\u0376\u037b\u0382\u0389\u0390\u0397",
    "\u039d\u03a0\u03a5\u03ac\u03b3\u03b9\u03bd\u03c3\u03c9\u03cf\u03d5\u03db",
    "\u03e1\u03e5\u03e8\u03ed\u03f4\u03f8\u03fb\u0400\u0406\u040a\u040d\u0412",
    "\u0419\u041c\u0422\u0429\u042c\u0432\u0439\u043c\u0442\u0449\u044c\u0452",
    "\u0458\u045c\u045f\u0464\u0468\u046f\u0476\u048c\u0490\u049f\u04bc\u04d7",
    "\u04e4"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

const sharedContextCache = new antlr4.PredictionContextCache();

export default class MetaEdGrammar extends antlr4.Parser {

    static grammarFileName = "MetaEdGrammar.g4";
    static literalNames = [ null, "'Abstract Entity'", "'Association'", 
                            "'Begin Namespace'", "'End Namespace'", "'Choice'", 
                            "'Common'", "'Descriptor'", "'Domain'", "'Domain Entity'", 
                            "'Enumeration'", "'Inline'", "'Interchange'", 
                            "'Inline Common'", "'Shared Decimal'", "'Shared Integer'", 
                            "'Shared Short'", "'Shared String'", "'Subdomain'", 
                            "'Type'", "'association'", "'association identity'", 
                            "'bool'", "'choice'", "'common'", "'common extension'", 
                            "'currency'", "'date'", "'datetime'", "'decimal'", 
                            "'descriptor'", "'domain entity'", "'domain entity identity'", 
                            "'domain item'", "'duration'", "'element'", 
                            "'enumeration'", "'item'", "'inline common'", 
                            "'integer'", "'percent'", "'reference'", "'shared decimal'", 
                            "'shared integer'", "'shared short'", "'shared string'", 
                            "'named'", "'short'", "'string'", "'time'", 
                            "'year'", "'additions'", "'based on'", "'core'", 
                            "'allow primary key updates'", "'decimal places'", 
                            "'is part of identity'", "'renames identity property'", 
                            "'is queryable field'", "'is queryable only'", 
                            "'is weak'", "'potentially logical'", "'merge'", 
                            "'min length'", "'max length'", "'min value'", 
                            "'max value'", "'is optional'", "'is optional collection'", 
                            "'is required'", "'is required collection'", 
                            "'role name'", "'shorten to'", "'of'", "'position'", 
                            "'total digits'", "'with'", "'with optional map type'", 
                            "'with map type'", "'deprecated'", "'documentation'", 
                            "'inherited'", "'extended documentation'", "'use case documentation'", 
                            "'footer documentation'", null, null, null, 
                            null, null, "'+'", "'-'", "'.'" ];
    static symbolicNames = [ null, "ABSTRACT_ENTITY", "ASSOCIATION", "BEGIN_NAMESPACE", 
                             "END_NAMESPACE", "CHOICE", "COMMON", "DESCRIPTOR", 
                             "DOMAIN", "DOMAIN_ENTITY", "ENUMERATION", "INLINE", 
                             "INTERCHANGE", "INLINE_COMMON", "SHARED_DECIMAL", 
                             "SHARED_INTEGER", "SHARED_SHORT", "SHARED_STRING", 
                             "SUBDOMAIN", "TYPE", "ASSOCIATION_KEYWORD", 
                             "ASSOCIATION_IDENTITY", "BOOLEAN", "CHOICE_KEYWORD", 
                             "COMMON_KEYWORD", "COMMON_EXTENSION", "CURRENCY", 
                             "DATE", "DATETIME", "DECIMAL", "DESCRIPTOR_KEYWORD", 
                             "DOMAIN_ENTITY_KEYWORD", "DOMAIN_ENTITY_IDENTITY", 
                             "DOMAIN_ITEM", "DURATION", "ELEMENT", "ENUMERATION_KEYWORD", 
                             "ENUMERATION_ITEM", "INLINE_COMMON_KEYWORD", 
                             "INTEGER", "PERCENT", "REFERENCE", "SHARED_DECIMAL_KEYWORD", 
                             "SHARED_INTEGER_KEYWORD", "SHARED_SHORT_KEYWORD", 
                             "SHARED_STRING_KEYWORD", "SHARED_NAMED", "SHORT", 
                             "STRING", "TIME", "YEAR", "ADDITIONS", "BASED_ON", 
                             "CORE", "CASCADE_UPDATE", "DECIMAL_PLACES", 
                             "IDENTITY", "IDENTITY_RENAME", "IS_QUERYABLE_FIELD", 
                             "IS_QUERYABLE_ONLY", "IS_WEAK_REFERENCE", "POTENTIALLY_LOGICAL", 
                             "MERGE_REFERENCE", "MIN_LENGTH", "MAX_LENGTH", 
                             "MIN_VALUE", "MAX_VALUE", "OPTIONAL", "OPTIONAL_COLLECTION", 
                             "REQUIRED", "REQUIRED_COLLECTION", "ROLE_NAME", 
                             "SHORTEN_TO", "SUBDOMAIN_OF", "SUBDOMAIN_POSITION", 
                             "TOTAL_DIGITS", "WITH", "WITH_OPTIONAL_MAP_TYPE", 
                             "WITH_MAP_TYPE", "DEPRECATED", "DOCUMENTATION", 
                             "INHERITED", "EXTENDED_DOCUMENTATION", "USE_CASE_DOCUMENTATION", 
                             "FOOTER_DOCUMENTATION", "ID", "UNSIGNED_INT", 
                             "DECIMAL_VALUE", "TEXT", "METAED_ID", "POS_SIGN", 
                             "NEG_SIGN", "PERIOD", "LINE_COMMENT", "WS", 
                             "ERROR_CHARACTER" ];
    static ruleNames = [ "metaEd", "namespace", "namespaceType", "topLevelEntity", 
                         "deprecated", "propertyDeprecated", "documentation", 
                         "enumerationItemDocumentation", "mapTypeDocumentation", 
                         "propertyDocumentation", "abstractEntity", "entityConfiguration", 
                         "cascadeUpdate", "association", "definingDomainEntity", 
                         "associationExtension", "associationSubclass", 
                         "choice", "sharedDecimal", "sharedInteger", "sharedShort", 
                         "sharedString", "common", "commonExtension", "commonSubclass", 
                         "descriptor", "withMapType", "requiredMapType", 
                         "optionalMapType", "domain", "domainItem", "footerDocumentation", 
                         "domainEntity", "domainEntityExtension", "domainEntitySubclass", 
                         "enumeration", "enumerationItem", "shortDescription", 
                         "inlineCommon", "interchange", "extendedDocumentation", 
                         "useCaseDocumentation", "interchangeComponent", 
                         "interchangeElement", "interchangeIdentity", "interchangeExtension", 
                         "interchangeExtensionComponent", "subdomain", "subdomainPosition", 
                         "minValue", "maxValue", "minValueDecimal", "maxValueDecimal", 
                         "decimalValue", "totalDigits", "decimalPlaces", 
                         "commonExtensionOverride", "propertyAnnotation", 
                         "identity", "identityRename", "required", "optional", 
                         "collection", "requiredCollection", "optionalCollection", 
                         "isQueryableOnly", "propertyComponents", "isQueryableField", 
                         "roleName", "minLength", "maxLength", "property", 
                         "booleanProperty", "currencyProperty", "dateProperty", 
                         "datetimeProperty", "decimalProperty", "descriptorProperty", 
                         "durationProperty", "enumerationProperty", "commonProperty", 
                         "inlineCommonProperty", "choiceProperty", "integerProperty", 
                         "percentProperty", "associationProperty", "domainEntityProperty", 
                         "sharedDecimalProperty", "sharedIntegerProperty", 
                         "sharedShortProperty", "sharedStringProperty", 
                         "shortProperty", "stringProperty", "timeProperty", 
                         "yearProperty", "isWeakReference", "potentiallyLogical", 
                         "mergeDirective", "sourcePropertyPath", "targetPropertyPath", 
                         "propertyPath", "signed_int", "unaryOperator", 
                         "abstractEntityName", "associationName", "baseKeyName", 
                         "baseName", "baseNamespace", "choiceName", "sharedDecimalName", 
                         "sharedIntegerName", "commonName", "sharedShortName", 
                         "sharedStringName", "descriptorName", "domainName", 
                         "entityName", "enumerationName", "extendeeName", 
                         "extendeeNamespace", "inlineCommonName", "interchangeName", 
                         "localBaseName", "localDomainItemName", "localExtendeeName", 
                         "localInterchangeItemName", "localPropertyName", 
                         "localPropertyType", "parentDomainName", "propertyName", 
                         "propertyNamespace", "roleNameName", "sharedPropertyName", 
                         "sharedPropertyType", "shortenToName", "simplePropertyName", 
                         "subdomainName", "namespaceName", "metaEdId" ];

    constructor(input) {
        super(input);
        this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
        this.ruleNames = MetaEdGrammar.ruleNames;
        this.literalNames = MetaEdGrammar.literalNames;
        this.symbolicNames = MetaEdGrammar.symbolicNames;
    }

    get atn() {
        return atn;
    }



	metaEd() {
	    let localctx = new MetaEdContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 0, MetaEdGrammar.RULE_metaEd);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 279; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 278;
	            this.namespace();
	            this.state = 281; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(_la===MetaEdGrammar.BEGIN_NAMESPACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	namespace() {
	    let localctx = new NamespaceContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 2, MetaEdGrammar.RULE_namespace);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 283;
	        this.match(MetaEdGrammar.BEGIN_NAMESPACE);
	        this.state = 284;
	        this.namespaceName();
	        this.state = 285;
	        this.namespaceType();
	        this.state = 287; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 286;
	            this.topLevelEntity();
	            this.state = 289; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << MetaEdGrammar.ABSTRACT_ENTITY) | (1 << MetaEdGrammar.ASSOCIATION) | (1 << MetaEdGrammar.CHOICE) | (1 << MetaEdGrammar.COMMON) | (1 << MetaEdGrammar.DESCRIPTOR) | (1 << MetaEdGrammar.DOMAIN) | (1 << MetaEdGrammar.DOMAIN_ENTITY) | (1 << MetaEdGrammar.ENUMERATION) | (1 << MetaEdGrammar.INTERCHANGE) | (1 << MetaEdGrammar.INLINE_COMMON) | (1 << MetaEdGrammar.SHARED_DECIMAL) | (1 << MetaEdGrammar.SHARED_INTEGER) | (1 << MetaEdGrammar.SHARED_SHORT) | (1 << MetaEdGrammar.SHARED_STRING) | (1 << MetaEdGrammar.SUBDOMAIN))) !== 0));
	        this.state = 291;
	        this.match(MetaEdGrammar.END_NAMESPACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	namespaceType() {
	    let localctx = new NamespaceTypeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 4, MetaEdGrammar.RULE_namespaceType);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 293;
	        _la = this._input.LA(1);
	        if(!(_la===MetaEdGrammar.CORE || _la===MetaEdGrammar.ID)) {
	        this._errHandler.recoverInline(this);
	        }
	        else {
	        	this._errHandler.reportMatch(this);
	            this.consume();
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	topLevelEntity() {
	    let localctx = new TopLevelEntityContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 6, MetaEdGrammar.RULE_topLevelEntity);
	    try {
	        this.state = 317;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);
	        switch(la_) {
	        case 1:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 295;
	            this.abstractEntity();
	            break;

	        case 2:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 296;
	            this.association();
	            break;

	        case 3:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 297;
	            this.associationExtension();
	            break;

	        case 4:
	            this.enterOuterAlt(localctx, 4);
	            this.state = 298;
	            this.associationSubclass();
	            break;

	        case 5:
	            this.enterOuterAlt(localctx, 5);
	            this.state = 299;
	            this.choice();
	            break;

	        case 6:
	            this.enterOuterAlt(localctx, 6);
	            this.state = 300;
	            this.sharedDecimal();
	            break;

	        case 7:
	            this.enterOuterAlt(localctx, 7);
	            this.state = 301;
	            this.sharedInteger();
	            break;

	        case 8:
	            this.enterOuterAlt(localctx, 8);
	            this.state = 302;
	            this.sharedShort();
	            break;

	        case 9:
	            this.enterOuterAlt(localctx, 9);
	            this.state = 303;
	            this.sharedString();
	            break;

	        case 10:
	            this.enterOuterAlt(localctx, 10);
	            this.state = 304;
	            this.common();
	            break;

	        case 11:
	            this.enterOuterAlt(localctx, 11);
	            this.state = 305;
	            this.commonExtension();
	            break;

	        case 12:
	            this.enterOuterAlt(localctx, 12);
	            this.state = 306;
	            this.commonSubclass();
	            break;

	        case 13:
	            this.enterOuterAlt(localctx, 13);
	            this.state = 307;
	            this.descriptor();
	            break;

	        case 14:
	            this.enterOuterAlt(localctx, 14);
	            this.state = 308;
	            this.domainEntity();
	            break;

	        case 15:
	            this.enterOuterAlt(localctx, 15);
	            this.state = 309;
	            this.domainEntityExtension();
	            break;

	        case 16:
	            this.enterOuterAlt(localctx, 16);
	            this.state = 310;
	            this.domainEntitySubclass();
	            break;

	        case 17:
	            this.enterOuterAlt(localctx, 17);
	            this.state = 311;
	            this.enumeration();
	            break;

	        case 18:
	            this.enterOuterAlt(localctx, 18);
	            this.state = 312;
	            this.inlineCommon();
	            break;

	        case 19:
	            this.enterOuterAlt(localctx, 19);
	            this.state = 313;
	            this.interchange();
	            break;

	        case 20:
	            this.enterOuterAlt(localctx, 20);
	            this.state = 314;
	            this.interchangeExtension();
	            break;

	        case 21:
	            this.enterOuterAlt(localctx, 21);
	            this.state = 315;
	            this.domain();
	            break;

	        case 22:
	            this.enterOuterAlt(localctx, 22);
	            this.state = 316;
	            this.subdomain();
	            break;

	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	deprecated() {
	    let localctx = new DeprecatedContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 8, MetaEdGrammar.RULE_deprecated);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 319;
	        this.match(MetaEdGrammar.DEPRECATED);
	        this.state = 320;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	propertyDeprecated() {
	    let localctx = new PropertyDeprecatedContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 10, MetaEdGrammar.RULE_propertyDeprecated);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 322;
	        this.match(MetaEdGrammar.DEPRECATED);
	        this.state = 323;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	documentation() {
	    let localctx = new DocumentationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 12, MetaEdGrammar.RULE_documentation);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 325;
	        this.match(MetaEdGrammar.DOCUMENTATION);
	        this.state = 326;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	enumerationItemDocumentation() {
	    let localctx = new EnumerationItemDocumentationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 14, MetaEdGrammar.RULE_enumerationItemDocumentation);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 328;
	        this.match(MetaEdGrammar.DOCUMENTATION);
	        this.state = 329;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	mapTypeDocumentation() {
	    let localctx = new MapTypeDocumentationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 16, MetaEdGrammar.RULE_mapTypeDocumentation);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 331;
	        this.match(MetaEdGrammar.DOCUMENTATION);
	        this.state = 332;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	propertyDocumentation() {
	    let localctx = new PropertyDocumentationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 18, MetaEdGrammar.RULE_propertyDocumentation);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 334;
	        this.match(MetaEdGrammar.DOCUMENTATION);
	        this.state = 335;
	        _la = this._input.LA(1);
	        if(!(_la===MetaEdGrammar.INHERITED || _la===MetaEdGrammar.TEXT)) {
	        this._errHandler.recoverInline(this);
	        }
	        else {
	        	this._errHandler.reportMatch(this);
	            this.consume();
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	abstractEntity() {
	    let localctx = new AbstractEntityContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 20, MetaEdGrammar.RULE_abstractEntity);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 337;
	        this.match(MetaEdGrammar.ABSTRACT_ENTITY);
	        this.state = 338;
	        this.abstractEntityName();
	        this.state = 340;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 339;
	            this.metaEdId();
	        }

	        this.state = 343;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 342;
	            this.deprecated();
	        }

	        this.state = 345;
	        this.documentation();
	        this.state = 347; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 346;
	            this.property();
	            this.state = 349; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	entityConfiguration() {
	    let localctx = new EntityConfigurationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 22, MetaEdGrammar.RULE_entityConfiguration);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 351;
	        this.cascadeUpdate();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	cascadeUpdate() {
	    let localctx = new CascadeUpdateContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 24, MetaEdGrammar.RULE_cascadeUpdate);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 353;
	        this.match(MetaEdGrammar.CASCADE_UPDATE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	association() {
	    let localctx = new AssociationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 26, MetaEdGrammar.RULE_association);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 355;
	        this.match(MetaEdGrammar.ASSOCIATION);
	        this.state = 356;
	        this.associationName();
	        this.state = 358;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 357;
	            this.metaEdId();
	        }

	        this.state = 361;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 360;
	            this.deprecated();
	        }

	        this.state = 363;
	        this.documentation();
	        this.state = 365;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.CASCADE_UPDATE) {
	            this.state = 364;
	            this.entityConfiguration();
	        }

	        this.state = 367;
	        this.definingDomainEntity();
	        this.state = 368;
	        this.definingDomainEntity();
	        this.state = 372;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0)) {
	            this.state = 369;
	            this.property();
	            this.state = 374;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	definingDomainEntity() {
	    let localctx = new DefiningDomainEntityContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 28, MetaEdGrammar.RULE_definingDomainEntity);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 375;
	        this.match(MetaEdGrammar.DOMAIN_ENTITY_KEYWORD);
	        this.state = 376;
	        this.propertyName();
	        this.state = 378;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 377;
	            this.metaEdId();
	        }

	        this.state = 381;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 380;
	            this.propertyDeprecated();
	        }

	        this.state = 383;
	        this.propertyDocumentation();
	        this.state = 385;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.ROLE_NAME) {
	            this.state = 384;
	            this.roleName();
	        }

	        this.state = 390;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 387;
	            this.mergeDirective();
	            this.state = 392;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	associationExtension() {
	    let localctx = new AssociationExtensionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 30, MetaEdGrammar.RULE_associationExtension);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 393;
	        this.match(MetaEdGrammar.ASSOCIATION);
	        this.state = 394;
	        this.extendeeName();
	        this.state = 395;
	        this.match(MetaEdGrammar.ADDITIONS);
	        this.state = 397;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 396;
	            this.metaEdId();
	        }

	        this.state = 400;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 399;
	            this.deprecated();
	        }

	        this.state = 403; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 402;
	            this.property();
	            this.state = 405; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	associationSubclass() {
	    let localctx = new AssociationSubclassContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 32, MetaEdGrammar.RULE_associationSubclass);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 407;
	        this.match(MetaEdGrammar.ASSOCIATION);
	        this.state = 408;
	        this.associationName();
	        this.state = 409;
	        this.match(MetaEdGrammar.BASED_ON);
	        this.state = 410;
	        this.baseName();
	        this.state = 412;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 411;
	            this.metaEdId();
	        }

	        this.state = 415;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 414;
	            this.deprecated();
	        }

	        this.state = 417;
	        this.documentation();
	        this.state = 419; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 418;
	            this.property();
	            this.state = 421; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	choice() {
	    let localctx = new ChoiceContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 34, MetaEdGrammar.RULE_choice);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 423;
	        this.match(MetaEdGrammar.CHOICE);
	        this.state = 424;
	        this.choiceName();
	        this.state = 426;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 425;
	            this.metaEdId();
	        }

	        this.state = 429;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 428;
	            this.deprecated();
	        }

	        this.state = 431;
	        this.documentation();
	        this.state = 433; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 432;
	            this.property();
	            this.state = 435; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedDecimal() {
	    let localctx = new SharedDecimalContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 36, MetaEdGrammar.RULE_sharedDecimal);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 437;
	        this.match(MetaEdGrammar.SHARED_DECIMAL);
	        this.state = 438;
	        this.sharedDecimalName();
	        this.state = 440;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 439;
	            this.metaEdId();
	        }

	        this.state = 443;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 442;
	            this.deprecated();
	        }

	        this.state = 445;
	        this.documentation();
	        this.state = 446;
	        this.totalDigits();
	        this.state = 447;
	        this.decimalPlaces();
	        this.state = 449;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_VALUE) {
	            this.state = 448;
	            this.minValueDecimal();
	        }

	        this.state = 452;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MAX_VALUE) {
	            this.state = 451;
	            this.maxValueDecimal();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedInteger() {
	    let localctx = new SharedIntegerContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 38, MetaEdGrammar.RULE_sharedInteger);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 454;
	        this.match(MetaEdGrammar.SHARED_INTEGER);
	        this.state = 455;
	        this.sharedIntegerName();
	        this.state = 457;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 456;
	            this.metaEdId();
	        }

	        this.state = 460;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 459;
	            this.deprecated();
	        }

	        this.state = 462;
	        this.documentation();
	        this.state = 464;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_VALUE) {
	            this.state = 463;
	            this.minValue();
	        }

	        this.state = 467;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MAX_VALUE) {
	            this.state = 466;
	            this.maxValue();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedShort() {
	    let localctx = new SharedShortContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 40, MetaEdGrammar.RULE_sharedShort);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 469;
	        this.match(MetaEdGrammar.SHARED_SHORT);
	        this.state = 470;
	        this.sharedShortName();
	        this.state = 472;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 471;
	            this.metaEdId();
	        }

	        this.state = 475;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 474;
	            this.deprecated();
	        }

	        this.state = 477;
	        this.documentation();
	        this.state = 479;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_VALUE) {
	            this.state = 478;
	            this.minValue();
	        }

	        this.state = 482;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MAX_VALUE) {
	            this.state = 481;
	            this.maxValue();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedString() {
	    let localctx = new SharedStringContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 42, MetaEdGrammar.RULE_sharedString);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 484;
	        this.match(MetaEdGrammar.SHARED_STRING);
	        this.state = 485;
	        this.sharedStringName();
	        this.state = 487;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 486;
	            this.metaEdId();
	        }

	        this.state = 490;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 489;
	            this.deprecated();
	        }

	        this.state = 492;
	        this.documentation();
	        this.state = 494;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_LENGTH) {
	            this.state = 493;
	            this.minLength();
	        }

	        this.state = 496;
	        this.maxLength();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	common() {
	    let localctx = new CommonContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 44, MetaEdGrammar.RULE_common);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 498;
	        this.match(MetaEdGrammar.COMMON);
	        this.state = 499;
	        this.commonName();
	        this.state = 501;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 500;
	            this.metaEdId();
	        }

	        this.state = 504;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 503;
	            this.deprecated();
	        }

	        this.state = 506;
	        this.documentation();
	        this.state = 508; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 507;
	            this.property();
	            this.state = 510; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	commonExtension() {
	    let localctx = new CommonExtensionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 46, MetaEdGrammar.RULE_commonExtension);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 512;
	        this.match(MetaEdGrammar.COMMON);
	        this.state = 513;
	        this.extendeeName();
	        this.state = 514;
	        this.match(MetaEdGrammar.ADDITIONS);
	        this.state = 516;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 515;
	            this.metaEdId();
	        }

	        this.state = 519;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 518;
	            this.deprecated();
	        }

	        this.state = 522; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 521;
	            this.property();
	            this.state = 524; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	commonSubclass() {
	    let localctx = new CommonSubclassContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 48, MetaEdGrammar.RULE_commonSubclass);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 526;
	        this.match(MetaEdGrammar.COMMON);
	        this.state = 527;
	        this.commonName();
	        this.state = 528;
	        this.match(MetaEdGrammar.BASED_ON);
	        this.state = 529;
	        this.baseName();
	        this.state = 531;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 530;
	            this.metaEdId();
	        }

	        this.state = 534;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 533;
	            this.deprecated();
	        }

	        this.state = 536;
	        this.documentation();
	        this.state = 538; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 537;
	            this.property();
	            this.state = 540; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	descriptor() {
	    let localctx = new DescriptorContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 50, MetaEdGrammar.RULE_descriptor);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 542;
	        this.match(MetaEdGrammar.DESCRIPTOR);
	        this.state = 543;
	        this.descriptorName();
	        this.state = 545;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 544;
	            this.metaEdId();
	        }

	        this.state = 548;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 547;
	            this.deprecated();
	        }

	        this.state = 550;
	        this.documentation();
	        this.state = 554;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0)) {
	            this.state = 551;
	            this.property();
	            this.state = 556;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	        this.state = 558;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.WITH_OPTIONAL_MAP_TYPE || _la===MetaEdGrammar.WITH_MAP_TYPE) {
	            this.state = 557;
	            this.withMapType();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	withMapType() {
	    let localctx = new WithMapTypeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 52, MetaEdGrammar.RULE_withMapType);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 562;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case MetaEdGrammar.WITH_MAP_TYPE:
	            this.state = 560;
	            this.requiredMapType();
	            break;
	        case MetaEdGrammar.WITH_OPTIONAL_MAP_TYPE:
	            this.state = 561;
	            this.optionalMapType();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	        this.state = 564;
	        this.mapTypeDocumentation();
	        this.state = 566; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 565;
	            this.enumerationItem();
	            this.state = 568; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(_la===MetaEdGrammar.ENUMERATION_ITEM);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	requiredMapType() {
	    let localctx = new RequiredMapTypeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 54, MetaEdGrammar.RULE_requiredMapType);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 570;
	        this.match(MetaEdGrammar.WITH_MAP_TYPE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	optionalMapType() {
	    let localctx = new OptionalMapTypeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 56, MetaEdGrammar.RULE_optionalMapType);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 572;
	        this.match(MetaEdGrammar.WITH_OPTIONAL_MAP_TYPE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	domain() {
	    let localctx = new DomainContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 58, MetaEdGrammar.RULE_domain);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 574;
	        this.match(MetaEdGrammar.DOMAIN);
	        this.state = 575;
	        this.domainName();
	        this.state = 577;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 576;
	            this.metaEdId();
	        }

	        this.state = 580;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 579;
	            this.deprecated();
	        }

	        this.state = 582;
	        this.documentation();
	        this.state = 584; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 583;
	            this.domainItem();
	            this.state = 586; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)))) !== 0));
	        this.state = 589;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.FOOTER_DOCUMENTATION) {
	            this.state = 588;
	            this.footerDocumentation();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	domainItem() {
	    let localctx = new DomainItemContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 60, MetaEdGrammar.RULE_domainItem);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 591;
	        _la = this._input.LA(1);
	        if(!(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)))) !== 0))) {
	        this._errHandler.recoverInline(this);
	        }
	        else {
	        	this._errHandler.reportMatch(this);
	            this.consume();
	        }
	        this.state = 595;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,57,this._ctx);
	        if(la_===1) {
	            this.state = 592;
	            this.baseNamespace();
	            this.state = 593;
	            this.match(MetaEdGrammar.PERIOD);

	        }
	        this.state = 597;
	        this.localDomainItemName();
	        this.state = 599;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 598;
	            this.metaEdId();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	footerDocumentation() {
	    let localctx = new FooterDocumentationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 62, MetaEdGrammar.RULE_footerDocumentation);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 601;
	        this.match(MetaEdGrammar.FOOTER_DOCUMENTATION);
	        this.state = 602;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	domainEntity() {
	    let localctx = new DomainEntityContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 64, MetaEdGrammar.RULE_domainEntity);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 604;
	        this.match(MetaEdGrammar.DOMAIN_ENTITY);
	        this.state = 605;
	        this.entityName();
	        this.state = 607;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 606;
	            this.metaEdId();
	        }

	        this.state = 610;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 609;
	            this.deprecated();
	        }

	        this.state = 612;
	        this.documentation();
	        this.state = 614;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.CASCADE_UPDATE) {
	            this.state = 613;
	            this.entityConfiguration();
	        }

	        this.state = 617; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 616;
	            this.property();
	            this.state = 619; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	domainEntityExtension() {
	    let localctx = new DomainEntityExtensionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 66, MetaEdGrammar.RULE_domainEntityExtension);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 621;
	        this.match(MetaEdGrammar.DOMAIN_ENTITY);
	        this.state = 622;
	        this.extendeeName();
	        this.state = 623;
	        this.match(MetaEdGrammar.ADDITIONS);
	        this.state = 625;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 624;
	            this.metaEdId();
	        }

	        this.state = 628;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 627;
	            this.deprecated();
	        }

	        this.state = 631; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 630;
	            this.property();
	            this.state = 633; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	domainEntitySubclass() {
	    let localctx = new DomainEntitySubclassContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 68, MetaEdGrammar.RULE_domainEntitySubclass);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 635;
	        this.match(MetaEdGrammar.DOMAIN_ENTITY);
	        this.state = 636;
	        this.entityName();
	        this.state = 637;
	        this.match(MetaEdGrammar.BASED_ON);
	        this.state = 638;
	        this.baseName();
	        this.state = 640;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 639;
	            this.metaEdId();
	        }

	        this.state = 643;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 642;
	            this.deprecated();
	        }

	        this.state = 645;
	        this.documentation();
	        this.state = 647; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 646;
	            this.property();
	            this.state = 649; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	enumeration() {
	    let localctx = new EnumerationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 70, MetaEdGrammar.RULE_enumeration);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 651;
	        this.match(MetaEdGrammar.ENUMERATION);
	        this.state = 652;
	        this.enumerationName();
	        this.state = 654;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 653;
	            this.metaEdId();
	        }

	        this.state = 657;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 656;
	            this.deprecated();
	        }

	        this.state = 659;
	        this.documentation();
	        this.state = 661; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 660;
	            this.enumerationItem();
	            this.state = 663; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(_la===MetaEdGrammar.ENUMERATION_ITEM);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	enumerationItem() {
	    let localctx = new EnumerationItemContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 72, MetaEdGrammar.RULE_enumerationItem);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 665;
	        this.match(MetaEdGrammar.ENUMERATION_ITEM);
	        this.state = 666;
	        this.shortDescription();
	        this.state = 668;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 667;
	            this.metaEdId();
	        }

	        this.state = 671;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DOCUMENTATION) {
	            this.state = 670;
	            this.enumerationItemDocumentation();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	shortDescription() {
	    let localctx = new ShortDescriptionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 74, MetaEdGrammar.RULE_shortDescription);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 673;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	inlineCommon() {
	    let localctx = new InlineCommonContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 76, MetaEdGrammar.RULE_inlineCommon);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 675;
	        this.match(MetaEdGrammar.INLINE_COMMON);
	        this.state = 676;
	        this.inlineCommonName();
	        this.state = 678;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 677;
	            this.metaEdId();
	        }

	        this.state = 681;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 680;
	            this.deprecated();
	        }

	        this.state = 683;
	        this.documentation();
	        this.state = 685; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 684;
	            this.property();
	            this.state = 687; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.BOOLEAN - 20)) | (1 << (MetaEdGrammar.CHOICE_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_EXTENSION - 20)) | (1 << (MetaEdGrammar.CURRENCY - 20)) | (1 << (MetaEdGrammar.DATE - 20)) | (1 << (MetaEdGrammar.DATETIME - 20)) | (1 << (MetaEdGrammar.DECIMAL - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DURATION - 20)) | (1 << (MetaEdGrammar.ENUMERATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.INTEGER - 20)) | (1 << (MetaEdGrammar.PERCENT - 20)) | (1 << (MetaEdGrammar.SHARED_DECIMAL_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_INTEGER_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_SHORT_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHARED_STRING_KEYWORD - 20)) | (1 << (MetaEdGrammar.SHORT - 20)) | (1 << (MetaEdGrammar.STRING - 20)) | (1 << (MetaEdGrammar.TIME - 20)) | (1 << (MetaEdGrammar.YEAR - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	interchange() {
	    let localctx = new InterchangeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 78, MetaEdGrammar.RULE_interchange);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 689;
	        this.match(MetaEdGrammar.INTERCHANGE);
	        this.state = 690;
	        this.interchangeName();
	        this.state = 692;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 691;
	            this.metaEdId();
	        }

	        this.state = 695;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 694;
	            this.deprecated();
	        }

	        this.state = 697;
	        this.documentation();
	        this.state = 699;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.EXTENDED_DOCUMENTATION) {
	            this.state = 698;
	            this.extendedDocumentation();
	        }

	        this.state = 702;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.USE_CASE_DOCUMENTATION) {
	            this.state = 701;
	            this.useCaseDocumentation();
	        }

	        this.state = 704;
	        this.interchangeComponent();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	extendedDocumentation() {
	    let localctx = new ExtendedDocumentationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 80, MetaEdGrammar.RULE_extendedDocumentation);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 706;
	        this.match(MetaEdGrammar.EXTENDED_DOCUMENTATION);
	        this.state = 707;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	useCaseDocumentation() {
	    let localctx = new UseCaseDocumentationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 82, MetaEdGrammar.RULE_useCaseDocumentation);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 709;
	        this.match(MetaEdGrammar.USE_CASE_DOCUMENTATION);
	        this.state = 710;
	        this.match(MetaEdGrammar.TEXT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	interchangeComponent() {
	    let localctx = new InterchangeComponentContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 84, MetaEdGrammar.RULE_interchangeComponent);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 715;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.ASSOCIATION_IDENTITY || _la===MetaEdGrammar.DOMAIN_ENTITY_IDENTITY) {
	            this.state = 712;
	            this.interchangeIdentity();
	            this.state = 717;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	        this.state = 718;
	        this.interchangeElement();
	        this.state = 723;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.ASSOCIATION_IDENTITY - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_IDENTITY - 20)))) !== 0)) {
	            this.state = 721;
	            this._errHandler.sync(this);
	            switch(this._input.LA(1)) {
	            case MetaEdGrammar.ASSOCIATION_KEYWORD:
	            case MetaEdGrammar.DESCRIPTOR_KEYWORD:
	            case MetaEdGrammar.DOMAIN_ENTITY_KEYWORD:
	                this.state = 719;
	                this.interchangeElement();
	                break;
	            case MetaEdGrammar.ASSOCIATION_IDENTITY:
	            case MetaEdGrammar.DOMAIN_ENTITY_IDENTITY:
	                this.state = 720;
	                this.interchangeIdentity();
	                break;
	            default:
	                throw new antlr4.error.NoViableAltException(this);
	            }
	            this.state = 725;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	interchangeElement() {
	    let localctx = new InterchangeElementContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 86, MetaEdGrammar.RULE_interchangeElement);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 726;
	        _la = this._input.LA(1);
	        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << MetaEdGrammar.ASSOCIATION_KEYWORD) | (1 << MetaEdGrammar.DESCRIPTOR_KEYWORD) | (1 << MetaEdGrammar.DOMAIN_ENTITY_KEYWORD))) !== 0))) {
	        this._errHandler.recoverInline(this);
	        }
	        else {
	        	this._errHandler.reportMatch(this);
	            this.consume();
	        }
	        this.state = 730;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,84,this._ctx);
	        if(la_===1) {
	            this.state = 727;
	            this.baseNamespace();
	            this.state = 728;
	            this.match(MetaEdGrammar.PERIOD);

	        }
	        this.state = 732;
	        this.localInterchangeItemName();
	        this.state = 734;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 733;
	            this.metaEdId();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	interchangeIdentity() {
	    let localctx = new InterchangeIdentityContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 88, MetaEdGrammar.RULE_interchangeIdentity);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 736;
	        _la = this._input.LA(1);
	        if(!(_la===MetaEdGrammar.ASSOCIATION_IDENTITY || _la===MetaEdGrammar.DOMAIN_ENTITY_IDENTITY)) {
	        this._errHandler.recoverInline(this);
	        }
	        else {
	        	this._errHandler.reportMatch(this);
	            this.consume();
	        }
	        this.state = 740;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,86,this._ctx);
	        if(la_===1) {
	            this.state = 737;
	            this.baseNamespace();
	            this.state = 738;
	            this.match(MetaEdGrammar.PERIOD);

	        }
	        this.state = 742;
	        this.localInterchangeItemName();
	        this.state = 744;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 743;
	            this.metaEdId();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	interchangeExtension() {
	    let localctx = new InterchangeExtensionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 90, MetaEdGrammar.RULE_interchangeExtension);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 746;
	        this.match(MetaEdGrammar.INTERCHANGE);
	        this.state = 747;
	        this.extendeeName();
	        this.state = 748;
	        this.match(MetaEdGrammar.ADDITIONS);
	        this.state = 750;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 749;
	            this.metaEdId();
	        }

	        this.state = 753;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 752;
	            this.deprecated();
	        }

	        this.state = 755;
	        this.interchangeExtensionComponent();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	interchangeExtensionComponent() {
	    let localctx = new InterchangeExtensionComponentContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 92, MetaEdGrammar.RULE_interchangeExtensionComponent);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 759; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 759;
	            this._errHandler.sync(this);
	            switch(this._input.LA(1)) {
	            case MetaEdGrammar.ASSOCIATION_KEYWORD:
	            case MetaEdGrammar.DESCRIPTOR_KEYWORD:
	            case MetaEdGrammar.DOMAIN_ENTITY_KEYWORD:
	                this.state = 757;
	                this.interchangeElement();
	                break;
	            case MetaEdGrammar.ASSOCIATION_IDENTITY:
	            case MetaEdGrammar.DOMAIN_ENTITY_IDENTITY:
	                this.state = 758;
	                this.interchangeIdentity();
	                break;
	            default:
	                throw new antlr4.error.NoViableAltException(this);
	            }
	            this.state = 761; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.ASSOCIATION_IDENTITY - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_IDENTITY - 20)))) !== 0));
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	subdomain() {
	    let localctx = new SubdomainContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 94, MetaEdGrammar.RULE_subdomain);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 763;
	        this.match(MetaEdGrammar.SUBDOMAIN);
	        this.state = 764;
	        this.subdomainName();
	        this.state = 765;
	        this.match(MetaEdGrammar.SUBDOMAIN_OF);
	        this.state = 766;
	        this.parentDomainName();
	        this.state = 768;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 767;
	            this.metaEdId();
	        }

	        this.state = 771;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 770;
	            this.deprecated();
	        }

	        this.state = 773;
	        this.documentation();
	        this.state = 775; 
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        do {
	            this.state = 774;
	            this.domainItem();
	            this.state = 777; 
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        } while(((((_la - 20)) & ~0x1f) == 0 && ((1 << (_la - 20)) & ((1 << (MetaEdGrammar.ASSOCIATION_KEYWORD - 20)) | (1 << (MetaEdGrammar.COMMON_KEYWORD - 20)) | (1 << (MetaEdGrammar.DESCRIPTOR_KEYWORD - 20)) | (1 << (MetaEdGrammar.DOMAIN_ENTITY_KEYWORD - 20)) | (1 << (MetaEdGrammar.INLINE_COMMON_KEYWORD - 20)))) !== 0));
	        this.state = 781;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.SUBDOMAIN_POSITION) {
	            this.state = 779;
	            this.match(MetaEdGrammar.SUBDOMAIN_POSITION);
	            this.state = 780;
	            this.subdomainPosition();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	subdomainPosition() {
	    let localctx = new SubdomainPositionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 96, MetaEdGrammar.RULE_subdomainPosition);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 783;
	        this.match(MetaEdGrammar.UNSIGNED_INT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	minValue() {
	    let localctx = new MinValueContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 98, MetaEdGrammar.RULE_minValue);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 785;
	        this.match(MetaEdGrammar.MIN_VALUE);
	        this.state = 786;
	        this.signed_int();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	maxValue() {
	    let localctx = new MaxValueContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 100, MetaEdGrammar.RULE_maxValue);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 788;
	        this.match(MetaEdGrammar.MAX_VALUE);
	        this.state = 789;
	        this.signed_int();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	minValueDecimal() {
	    let localctx = new MinValueDecimalContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 102, MetaEdGrammar.RULE_minValueDecimal);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 791;
	        this.match(MetaEdGrammar.MIN_VALUE);
	        this.state = 792;
	        this.decimalValue();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	maxValueDecimal() {
	    let localctx = new MaxValueDecimalContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 104, MetaEdGrammar.RULE_maxValueDecimal);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 794;
	        this.match(MetaEdGrammar.MAX_VALUE);
	        this.state = 795;
	        this.decimalValue();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	decimalValue() {
	    let localctx = new DecimalValueContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 106, MetaEdGrammar.RULE_decimalValue);
	    try {
	        this.state = 799;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case MetaEdGrammar.DECIMAL_VALUE:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 797;
	            this.match(MetaEdGrammar.DECIMAL_VALUE);
	            break;
	        case MetaEdGrammar.UNSIGNED_INT:
	        case MetaEdGrammar.POS_SIGN:
	        case MetaEdGrammar.NEG_SIGN:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 798;
	            this.signed_int();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	totalDigits() {
	    let localctx = new TotalDigitsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 108, MetaEdGrammar.RULE_totalDigits);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 801;
	        this.match(MetaEdGrammar.TOTAL_DIGITS);
	        this.state = 802;
	        this.match(MetaEdGrammar.UNSIGNED_INT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	decimalPlaces() {
	    let localctx = new DecimalPlacesContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 110, MetaEdGrammar.RULE_decimalPlaces);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 804;
	        this.match(MetaEdGrammar.DECIMAL_PLACES);
	        this.state = 805;
	        this.match(MetaEdGrammar.UNSIGNED_INT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	commonExtensionOverride() {
	    let localctx = new CommonExtensionOverrideContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 112, MetaEdGrammar.RULE_commonExtensionOverride);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 807;
	        this.match(MetaEdGrammar.COMMON_EXTENSION);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	propertyAnnotation() {
	    let localctx = new PropertyAnnotationContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 114, MetaEdGrammar.RULE_propertyAnnotation);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 815;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case MetaEdGrammar.IDENTITY:
	            this.state = 809;
	            this.identity();
	            break;
	        case MetaEdGrammar.IDENTITY_RENAME:
	            this.state = 810;
	            this.identityRename();
	            break;
	        case MetaEdGrammar.REQUIRED:
	            this.state = 811;
	            this.required();
	            break;
	        case MetaEdGrammar.OPTIONAL:
	            this.state = 812;
	            this.optional();
	            break;
	        case MetaEdGrammar.OPTIONAL_COLLECTION:
	        case MetaEdGrammar.REQUIRED_COLLECTION:
	            this.state = 813;
	            this.collection();
	            break;
	        case MetaEdGrammar.IS_QUERYABLE_ONLY:
	            this.state = 814;
	            this.isQueryableOnly();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	identity() {
	    let localctx = new IdentityContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 116, MetaEdGrammar.RULE_identity);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 817;
	        this.match(MetaEdGrammar.IDENTITY);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	identityRename() {
	    let localctx = new IdentityRenameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 118, MetaEdGrammar.RULE_identityRename);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 819;
	        this.match(MetaEdGrammar.IDENTITY_RENAME);
	        this.state = 820;
	        this.baseKeyName();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	required() {
	    let localctx = new RequiredContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 120, MetaEdGrammar.RULE_required);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 822;
	        this.match(MetaEdGrammar.REQUIRED);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	optional() {
	    let localctx = new OptionalContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 122, MetaEdGrammar.RULE_optional);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 824;
	        this.match(MetaEdGrammar.OPTIONAL);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	collection() {
	    let localctx = new CollectionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 124, MetaEdGrammar.RULE_collection);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 828;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case MetaEdGrammar.REQUIRED_COLLECTION:
	            this.state = 826;
	            this.requiredCollection();
	            break;
	        case MetaEdGrammar.OPTIONAL_COLLECTION:
	            this.state = 827;
	            this.optionalCollection();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	requiredCollection() {
	    let localctx = new RequiredCollectionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 126, MetaEdGrammar.RULE_requiredCollection);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 830;
	        this.match(MetaEdGrammar.REQUIRED_COLLECTION);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	optionalCollection() {
	    let localctx = new OptionalCollectionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 128, MetaEdGrammar.RULE_optionalCollection);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 832;
	        this.match(MetaEdGrammar.OPTIONAL_COLLECTION);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	isQueryableOnly() {
	    let localctx = new IsQueryableOnlyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 130, MetaEdGrammar.RULE_isQueryableOnly);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 834;
	        this.match(MetaEdGrammar.IS_QUERYABLE_ONLY);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	propertyComponents() {
	    let localctx = new PropertyComponentsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 132, MetaEdGrammar.RULE_propertyComponents);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 837;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.DEPRECATED) {
	            this.state = 836;
	            this.propertyDeprecated();
	        }

	        this.state = 839;
	        this.propertyDocumentation();
	        this.state = 840;
	        this.propertyAnnotation();
	        this.state = 842;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.ROLE_NAME) {
	            this.state = 841;
	            this.roleName();
	        }

	        this.state = 845;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.IS_QUERYABLE_FIELD) {
	            this.state = 844;
	            this.isQueryableField();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	isQueryableField() {
	    let localctx = new IsQueryableFieldContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 134, MetaEdGrammar.RULE_isQueryableField);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 847;
	        this.match(MetaEdGrammar.IS_QUERYABLE_FIELD);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	roleName() {
	    let localctx = new RoleNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 136, MetaEdGrammar.RULE_roleName);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 849;
	        this.match(MetaEdGrammar.ROLE_NAME);
	        this.state = 850;
	        this.roleNameName();
	        this.state = 853;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.SHORTEN_TO) {
	            this.state = 851;
	            this.match(MetaEdGrammar.SHORTEN_TO);
	            this.state = 852;
	            this.shortenToName();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	minLength() {
	    let localctx = new MinLengthContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 138, MetaEdGrammar.RULE_minLength);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 855;
	        this.match(MetaEdGrammar.MIN_LENGTH);
	        this.state = 856;
	        this.match(MetaEdGrammar.UNSIGNED_INT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	maxLength() {
	    let localctx = new MaxLengthContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 140, MetaEdGrammar.RULE_maxLength);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 858;
	        this.match(MetaEdGrammar.MAX_LENGTH);
	        this.state = 859;
	        this.match(MetaEdGrammar.UNSIGNED_INT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	property() {
	    let localctx = new PropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 142, MetaEdGrammar.RULE_property);
	    try {
	        this.state = 884;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case MetaEdGrammar.ASSOCIATION_KEYWORD:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 861;
	            this.associationProperty();
	            break;
	        case MetaEdGrammar.BOOLEAN:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 862;
	            this.booleanProperty();
	            break;
	        case MetaEdGrammar.CHOICE_KEYWORD:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 863;
	            this.choiceProperty();
	            break;
	        case MetaEdGrammar.COMMON_KEYWORD:
	        case MetaEdGrammar.COMMON_EXTENSION:
	            this.enterOuterAlt(localctx, 4);
	            this.state = 864;
	            this.commonProperty();
	            break;
	        case MetaEdGrammar.CURRENCY:
	            this.enterOuterAlt(localctx, 5);
	            this.state = 865;
	            this.currencyProperty();
	            break;
	        case MetaEdGrammar.DATE:
	            this.enterOuterAlt(localctx, 6);
	            this.state = 866;
	            this.dateProperty();
	            break;
	        case MetaEdGrammar.DATETIME:
	            this.enterOuterAlt(localctx, 7);
	            this.state = 867;
	            this.datetimeProperty();
	            break;
	        case MetaEdGrammar.DECIMAL:
	            this.enterOuterAlt(localctx, 8);
	            this.state = 868;
	            this.decimalProperty();
	            break;
	        case MetaEdGrammar.DESCRIPTOR_KEYWORD:
	            this.enterOuterAlt(localctx, 9);
	            this.state = 869;
	            this.descriptorProperty();
	            break;
	        case MetaEdGrammar.DOMAIN_ENTITY_KEYWORD:
	            this.enterOuterAlt(localctx, 10);
	            this.state = 870;
	            this.domainEntityProperty();
	            break;
	        case MetaEdGrammar.DURATION:
	            this.enterOuterAlt(localctx, 11);
	            this.state = 871;
	            this.durationProperty();
	            break;
	        case MetaEdGrammar.ENUMERATION_KEYWORD:
	            this.enterOuterAlt(localctx, 12);
	            this.state = 872;
	            this.enumerationProperty();
	            break;
	        case MetaEdGrammar.INLINE_COMMON_KEYWORD:
	            this.enterOuterAlt(localctx, 13);
	            this.state = 873;
	            this.inlineCommonProperty();
	            break;
	        case MetaEdGrammar.INTEGER:
	            this.enterOuterAlt(localctx, 14);
	            this.state = 874;
	            this.integerProperty();
	            break;
	        case MetaEdGrammar.PERCENT:
	            this.enterOuterAlt(localctx, 15);
	            this.state = 875;
	            this.percentProperty();
	            break;
	        case MetaEdGrammar.SHARED_DECIMAL_KEYWORD:
	            this.enterOuterAlt(localctx, 16);
	            this.state = 876;
	            this.sharedDecimalProperty();
	            break;
	        case MetaEdGrammar.SHARED_INTEGER_KEYWORD:
	            this.enterOuterAlt(localctx, 17);
	            this.state = 877;
	            this.sharedIntegerProperty();
	            break;
	        case MetaEdGrammar.SHARED_SHORT_KEYWORD:
	            this.enterOuterAlt(localctx, 18);
	            this.state = 878;
	            this.sharedShortProperty();
	            break;
	        case MetaEdGrammar.SHARED_STRING_KEYWORD:
	            this.enterOuterAlt(localctx, 19);
	            this.state = 879;
	            this.sharedStringProperty();
	            break;
	        case MetaEdGrammar.SHORT:
	            this.enterOuterAlt(localctx, 20);
	            this.state = 880;
	            this.shortProperty();
	            break;
	        case MetaEdGrammar.STRING:
	            this.enterOuterAlt(localctx, 21);
	            this.state = 881;
	            this.stringProperty();
	            break;
	        case MetaEdGrammar.TIME:
	            this.enterOuterAlt(localctx, 22);
	            this.state = 882;
	            this.timeProperty();
	            break;
	        case MetaEdGrammar.YEAR:
	            this.enterOuterAlt(localctx, 23);
	            this.state = 883;
	            this.yearProperty();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	booleanProperty() {
	    let localctx = new BooleanPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 144, MetaEdGrammar.RULE_booleanProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 886;
	        this.match(MetaEdGrammar.BOOLEAN);
	        this.state = 887;
	        this.simplePropertyName();
	        this.state = 889;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 888;
	            this.metaEdId();
	        }

	        this.state = 891;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	currencyProperty() {
	    let localctx = new CurrencyPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 146, MetaEdGrammar.RULE_currencyProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 893;
	        this.match(MetaEdGrammar.CURRENCY);
	        this.state = 894;
	        this.simplePropertyName();
	        this.state = 896;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 895;
	            this.metaEdId();
	        }

	        this.state = 898;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	dateProperty() {
	    let localctx = new DatePropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 148, MetaEdGrammar.RULE_dateProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 900;
	        this.match(MetaEdGrammar.DATE);
	        this.state = 901;
	        this.simplePropertyName();
	        this.state = 903;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 902;
	            this.metaEdId();
	        }

	        this.state = 905;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	datetimeProperty() {
	    let localctx = new DatetimePropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 150, MetaEdGrammar.RULE_datetimeProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 907;
	        this.match(MetaEdGrammar.DATETIME);
	        this.state = 908;
	        this.simplePropertyName();
	        this.state = 910;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 909;
	            this.metaEdId();
	        }

	        this.state = 912;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	decimalProperty() {
	    let localctx = new DecimalPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 152, MetaEdGrammar.RULE_decimalProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 914;
	        this.match(MetaEdGrammar.DECIMAL);
	        this.state = 915;
	        this.simplePropertyName();
	        this.state = 917;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 916;
	            this.metaEdId();
	        }

	        this.state = 919;
	        this.propertyComponents();
	        this.state = 920;
	        this.totalDigits();
	        this.state = 921;
	        this.decimalPlaces();
	        this.state = 923;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_VALUE) {
	            this.state = 922;
	            this.minValueDecimal();
	        }

	        this.state = 926;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MAX_VALUE) {
	            this.state = 925;
	            this.maxValueDecimal();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	descriptorProperty() {
	    let localctx = new DescriptorPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 154, MetaEdGrammar.RULE_descriptorProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 928;
	        this.match(MetaEdGrammar.DESCRIPTOR_KEYWORD);
	        this.state = 929;
	        this.propertyName();
	        this.state = 931;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 930;
	            this.metaEdId();
	        }

	        this.state = 933;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	durationProperty() {
	    let localctx = new DurationPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 156, MetaEdGrammar.RULE_durationProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 935;
	        this.match(MetaEdGrammar.DURATION);
	        this.state = 936;
	        this.simplePropertyName();
	        this.state = 938;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 937;
	            this.metaEdId();
	        }

	        this.state = 940;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	enumerationProperty() {
	    let localctx = new EnumerationPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 158, MetaEdGrammar.RULE_enumerationProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 942;
	        this.match(MetaEdGrammar.ENUMERATION_KEYWORD);
	        this.state = 943;
	        this.propertyName();
	        this.state = 945;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 944;
	            this.metaEdId();
	        }

	        this.state = 947;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	commonProperty() {
	    let localctx = new CommonPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 160, MetaEdGrammar.RULE_commonProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 951;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case MetaEdGrammar.COMMON_KEYWORD:
	            this.state = 949;
	            this.match(MetaEdGrammar.COMMON_KEYWORD);
	            break;
	        case MetaEdGrammar.COMMON_EXTENSION:
	            this.state = 950;
	            this.commonExtensionOverride();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	        this.state = 953;
	        this.propertyName();
	        this.state = 955;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 954;
	            this.metaEdId();
	        }

	        this.state = 957;
	        this.propertyComponents();
	        this.state = 961;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 958;
	            this.mergeDirective();
	            this.state = 963;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	inlineCommonProperty() {
	    let localctx = new InlineCommonPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 162, MetaEdGrammar.RULE_inlineCommonProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 964;
	        this.match(MetaEdGrammar.INLINE_COMMON_KEYWORD);
	        this.state = 965;
	        this.propertyName();
	        this.state = 967;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 966;
	            this.metaEdId();
	        }

	        this.state = 969;
	        this.propertyComponents();
	        this.state = 973;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 970;
	            this.mergeDirective();
	            this.state = 975;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	choiceProperty() {
	    let localctx = new ChoicePropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 164, MetaEdGrammar.RULE_choiceProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 976;
	        this.match(MetaEdGrammar.CHOICE_KEYWORD);
	        this.state = 977;
	        this.propertyName();
	        this.state = 979;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 978;
	            this.metaEdId();
	        }

	        this.state = 981;
	        this.propertyComponents();
	        this.state = 985;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 982;
	            this.mergeDirective();
	            this.state = 987;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	integerProperty() {
	    let localctx = new IntegerPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 166, MetaEdGrammar.RULE_integerProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 988;
	        this.match(MetaEdGrammar.INTEGER);
	        this.state = 989;
	        this.simplePropertyName();
	        this.state = 991;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 990;
	            this.metaEdId();
	        }

	        this.state = 993;
	        this.propertyComponents();
	        this.state = 995;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_VALUE) {
	            this.state = 994;
	            this.minValue();
	        }

	        this.state = 998;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MAX_VALUE) {
	            this.state = 997;
	            this.maxValue();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	percentProperty() {
	    let localctx = new PercentPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 168, MetaEdGrammar.RULE_percentProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1000;
	        this.match(MetaEdGrammar.PERCENT);
	        this.state = 1001;
	        this.simplePropertyName();
	        this.state = 1003;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1002;
	            this.metaEdId();
	        }

	        this.state = 1005;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	associationProperty() {
	    let localctx = new AssociationPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 170, MetaEdGrammar.RULE_associationProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1007;
	        this.match(MetaEdGrammar.ASSOCIATION_KEYWORD);
	        this.state = 1008;
	        this.propertyName();
	        this.state = 1010;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1009;
	            this.metaEdId();
	        }

	        this.state = 1012;
	        this.propertyComponents();
	        this.state = 1014;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.POTENTIALLY_LOGICAL) {
	            this.state = 1013;
	            this.potentiallyLogical();
	        }

	        this.state = 1017;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.IS_WEAK_REFERENCE) {
	            this.state = 1016;
	            this.isWeakReference();
	        }

	        this.state = 1022;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 1019;
	            this.mergeDirective();
	            this.state = 1024;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	domainEntityProperty() {
	    let localctx = new DomainEntityPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 172, MetaEdGrammar.RULE_domainEntityProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1025;
	        this.match(MetaEdGrammar.DOMAIN_ENTITY_KEYWORD);
	        this.state = 1026;
	        this.propertyName();
	        this.state = 1028;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1027;
	            this.metaEdId();
	        }

	        this.state = 1030;
	        this.propertyComponents();
	        this.state = 1032;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.POTENTIALLY_LOGICAL) {
	            this.state = 1031;
	            this.potentiallyLogical();
	        }

	        this.state = 1035;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.IS_WEAK_REFERENCE) {
	            this.state = 1034;
	            this.isWeakReference();
	        }

	        this.state = 1040;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 1037;
	            this.mergeDirective();
	            this.state = 1042;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedDecimalProperty() {
	    let localctx = new SharedDecimalPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 174, MetaEdGrammar.RULE_sharedDecimalProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1043;
	        this.match(MetaEdGrammar.SHARED_DECIMAL_KEYWORD);
	        this.state = 1044;
	        this.sharedPropertyType();
	        this.state = 1047;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.SHARED_NAMED) {
	            this.state = 1045;
	            this.match(MetaEdGrammar.SHARED_NAMED);
	            this.state = 1046;
	            this.sharedPropertyName();
	        }

	        this.state = 1050;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1049;
	            this.metaEdId();
	        }

	        this.state = 1052;
	        this.propertyComponents();
	        this.state = 1056;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 1053;
	            this.mergeDirective();
	            this.state = 1058;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedIntegerProperty() {
	    let localctx = new SharedIntegerPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 176, MetaEdGrammar.RULE_sharedIntegerProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1059;
	        this.match(MetaEdGrammar.SHARED_INTEGER_KEYWORD);
	        this.state = 1060;
	        this.sharedPropertyType();
	        this.state = 1063;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.SHARED_NAMED) {
	            this.state = 1061;
	            this.match(MetaEdGrammar.SHARED_NAMED);
	            this.state = 1062;
	            this.sharedPropertyName();
	        }

	        this.state = 1066;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1065;
	            this.metaEdId();
	        }

	        this.state = 1068;
	        this.propertyComponents();
	        this.state = 1072;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 1069;
	            this.mergeDirective();
	            this.state = 1074;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedShortProperty() {
	    let localctx = new SharedShortPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 178, MetaEdGrammar.RULE_sharedShortProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1075;
	        this.match(MetaEdGrammar.SHARED_SHORT_KEYWORD);
	        this.state = 1076;
	        this.sharedPropertyType();
	        this.state = 1079;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.SHARED_NAMED) {
	            this.state = 1077;
	            this.match(MetaEdGrammar.SHARED_NAMED);
	            this.state = 1078;
	            this.sharedPropertyName();
	        }

	        this.state = 1082;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1081;
	            this.metaEdId();
	        }

	        this.state = 1084;
	        this.propertyComponents();
	        this.state = 1088;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 1085;
	            this.mergeDirective();
	            this.state = 1090;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedStringProperty() {
	    let localctx = new SharedStringPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 180, MetaEdGrammar.RULE_sharedStringProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1091;
	        this.match(MetaEdGrammar.SHARED_STRING_KEYWORD);
	        this.state = 1092;
	        this.sharedPropertyType();
	        this.state = 1095;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.SHARED_NAMED) {
	            this.state = 1093;
	            this.match(MetaEdGrammar.SHARED_NAMED);
	            this.state = 1094;
	            this.sharedPropertyName();
	        }

	        this.state = 1098;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1097;
	            this.metaEdId();
	        }

	        this.state = 1100;
	        this.propertyComponents();
	        this.state = 1104;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.MERGE_REFERENCE) {
	            this.state = 1101;
	            this.mergeDirective();
	            this.state = 1106;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	shortProperty() {
	    let localctx = new ShortPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 182, MetaEdGrammar.RULE_shortProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1107;
	        this.match(MetaEdGrammar.SHORT);
	        this.state = 1108;
	        this.simplePropertyName();
	        this.state = 1110;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1109;
	            this.metaEdId();
	        }

	        this.state = 1112;
	        this.propertyComponents();
	        this.state = 1114;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_VALUE) {
	            this.state = 1113;
	            this.minValue();
	        }

	        this.state = 1117;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MAX_VALUE) {
	            this.state = 1116;
	            this.maxValue();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	stringProperty() {
	    let localctx = new StringPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 184, MetaEdGrammar.RULE_stringProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1119;
	        this.match(MetaEdGrammar.STRING);
	        this.state = 1120;
	        this.simplePropertyName();
	        this.state = 1122;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1121;
	            this.metaEdId();
	        }

	        this.state = 1124;
	        this.propertyComponents();
	        this.state = 1126;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.MIN_LENGTH) {
	            this.state = 1125;
	            this.minLength();
	        }

	        this.state = 1128;
	        this.maxLength();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	timeProperty() {
	    let localctx = new TimePropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 186, MetaEdGrammar.RULE_timeProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1130;
	        this.match(MetaEdGrammar.TIME);
	        this.state = 1131;
	        this.simplePropertyName();
	        this.state = 1133;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1132;
	            this.metaEdId();
	        }

	        this.state = 1135;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	yearProperty() {
	    let localctx = new YearPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 188, MetaEdGrammar.RULE_yearProperty);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1137;
	        this.match(MetaEdGrammar.YEAR);
	        this.state = 1138;
	        this.simplePropertyName();
	        this.state = 1140;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.METAED_ID) {
	            this.state = 1139;
	            this.metaEdId();
	        }

	        this.state = 1142;
	        this.propertyComponents();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	isWeakReference() {
	    let localctx = new IsWeakReferenceContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 190, MetaEdGrammar.RULE_isWeakReference);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1144;
	        this.match(MetaEdGrammar.IS_WEAK_REFERENCE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	potentiallyLogical() {
	    let localctx = new PotentiallyLogicalContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 192, MetaEdGrammar.RULE_potentiallyLogical);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1146;
	        this.match(MetaEdGrammar.POTENTIALLY_LOGICAL);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	mergeDirective() {
	    let localctx = new MergeDirectiveContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 194, MetaEdGrammar.RULE_mergeDirective);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1148;
	        this.match(MetaEdGrammar.MERGE_REFERENCE);
	        this.state = 1149;
	        this.sourcePropertyPath();
	        this.state = 1150;
	        this.match(MetaEdGrammar.WITH);
	        this.state = 1151;
	        this.targetPropertyPath();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sourcePropertyPath() {
	    let localctx = new SourcePropertyPathContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 196, MetaEdGrammar.RULE_sourcePropertyPath);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1153;
	        this.propertyPath();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	targetPropertyPath() {
	    let localctx = new TargetPropertyPathContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 198, MetaEdGrammar.RULE_targetPropertyPath);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1155;
	        this.propertyPath();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	propertyPath() {
	    let localctx = new PropertyPathContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 200, MetaEdGrammar.RULE_propertyPath);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1157;
	        this.match(MetaEdGrammar.ID);
	        this.state = 1162;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===MetaEdGrammar.PERIOD) {
	            this.state = 1158;
	            this.match(MetaEdGrammar.PERIOD);
	            this.state = 1159;
	            this.match(MetaEdGrammar.ID);
	            this.state = 1164;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	signed_int() {
	    let localctx = new Signed_intContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 202, MetaEdGrammar.RULE_signed_int);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1166;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===MetaEdGrammar.POS_SIGN || _la===MetaEdGrammar.NEG_SIGN) {
	            this.state = 1165;
	            this.unaryOperator();
	        }

	        this.state = 1168;
	        this.match(MetaEdGrammar.UNSIGNED_INT);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	unaryOperator() {
	    let localctx = new UnaryOperatorContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 204, MetaEdGrammar.RULE_unaryOperator);
	    var _la = 0; // Token type
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1170;
	        _la = this._input.LA(1);
	        if(!(_la===MetaEdGrammar.POS_SIGN || _la===MetaEdGrammar.NEG_SIGN)) {
	        this._errHandler.recoverInline(this);
	        }
	        else {
	        	this._errHandler.reportMatch(this);
	            this.consume();
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	abstractEntityName() {
	    let localctx = new AbstractEntityNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 206, MetaEdGrammar.RULE_abstractEntityName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1172;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	associationName() {
	    let localctx = new AssociationNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 208, MetaEdGrammar.RULE_associationName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1174;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	baseKeyName() {
	    let localctx = new BaseKeyNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 210, MetaEdGrammar.RULE_baseKeyName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1176;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	baseName() {
	    let localctx = new BaseNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 212, MetaEdGrammar.RULE_baseName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1181;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,154,this._ctx);
	        if(la_===1) {
	            this.state = 1178;
	            this.baseNamespace();
	            this.state = 1179;
	            this.match(MetaEdGrammar.PERIOD);

	        }
	        this.state = 1183;
	        this.localBaseName();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	baseNamespace() {
	    let localctx = new BaseNamespaceContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 214, MetaEdGrammar.RULE_baseNamespace);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1185;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	choiceName() {
	    let localctx = new ChoiceNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 216, MetaEdGrammar.RULE_choiceName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1187;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedDecimalName() {
	    let localctx = new SharedDecimalNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 218, MetaEdGrammar.RULE_sharedDecimalName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1189;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedIntegerName() {
	    let localctx = new SharedIntegerNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 220, MetaEdGrammar.RULE_sharedIntegerName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1191;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	commonName() {
	    let localctx = new CommonNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 222, MetaEdGrammar.RULE_commonName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1193;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedShortName() {
	    let localctx = new SharedShortNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 224, MetaEdGrammar.RULE_sharedShortName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1195;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedStringName() {
	    let localctx = new SharedStringNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 226, MetaEdGrammar.RULE_sharedStringName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1197;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	descriptorName() {
	    let localctx = new DescriptorNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 228, MetaEdGrammar.RULE_descriptorName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1199;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	domainName() {
	    let localctx = new DomainNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 230, MetaEdGrammar.RULE_domainName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1201;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	entityName() {
	    let localctx = new EntityNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 232, MetaEdGrammar.RULE_entityName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1203;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	enumerationName() {
	    let localctx = new EnumerationNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 234, MetaEdGrammar.RULE_enumerationName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1205;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	extendeeName() {
	    let localctx = new ExtendeeNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 236, MetaEdGrammar.RULE_extendeeName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1210;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,155,this._ctx);
	        if(la_===1) {
	            this.state = 1207;
	            this.extendeeNamespace();
	            this.state = 1208;
	            this.match(MetaEdGrammar.PERIOD);

	        }
	        this.state = 1212;
	        this.localExtendeeName();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	extendeeNamespace() {
	    let localctx = new ExtendeeNamespaceContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 238, MetaEdGrammar.RULE_extendeeNamespace);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1214;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	inlineCommonName() {
	    let localctx = new InlineCommonNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 240, MetaEdGrammar.RULE_inlineCommonName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1216;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	interchangeName() {
	    let localctx = new InterchangeNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 242, MetaEdGrammar.RULE_interchangeName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1218;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	localBaseName() {
	    let localctx = new LocalBaseNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 244, MetaEdGrammar.RULE_localBaseName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1220;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	localDomainItemName() {
	    let localctx = new LocalDomainItemNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 246, MetaEdGrammar.RULE_localDomainItemName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1222;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	localExtendeeName() {
	    let localctx = new LocalExtendeeNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 248, MetaEdGrammar.RULE_localExtendeeName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1224;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	localInterchangeItemName() {
	    let localctx = new LocalInterchangeItemNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 250, MetaEdGrammar.RULE_localInterchangeItemName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1226;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	localPropertyName() {
	    let localctx = new LocalPropertyNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 252, MetaEdGrammar.RULE_localPropertyName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1228;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	localPropertyType() {
	    let localctx = new LocalPropertyTypeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 254, MetaEdGrammar.RULE_localPropertyType);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1230;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	parentDomainName() {
	    let localctx = new ParentDomainNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 256, MetaEdGrammar.RULE_parentDomainName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1232;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	propertyName() {
	    let localctx = new PropertyNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 258, MetaEdGrammar.RULE_propertyName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1237;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,156,this._ctx);
	        if(la_===1) {
	            this.state = 1234;
	            this.propertyNamespace();
	            this.state = 1235;
	            this.match(MetaEdGrammar.PERIOD);

	        }
	        this.state = 1239;
	        this.localPropertyName();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	propertyNamespace() {
	    let localctx = new PropertyNamespaceContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 260, MetaEdGrammar.RULE_propertyNamespace);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1241;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	roleNameName() {
	    let localctx = new RoleNameNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 262, MetaEdGrammar.RULE_roleNameName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1243;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedPropertyName() {
	    let localctx = new SharedPropertyNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 264, MetaEdGrammar.RULE_sharedPropertyName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1245;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedPropertyType() {
	    let localctx = new SharedPropertyTypeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 266, MetaEdGrammar.RULE_sharedPropertyType);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1250;
	        this._errHandler.sync(this);
	        var la_ = this._interp.adaptivePredict(this._input,157,this._ctx);
	        if(la_===1) {
	            this.state = 1247;
	            this.propertyNamespace();
	            this.state = 1248;
	            this.match(MetaEdGrammar.PERIOD);

	        }
	        this.state = 1252;
	        this.localPropertyType();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	shortenToName() {
	    let localctx = new ShortenToNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 268, MetaEdGrammar.RULE_shortenToName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1254;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	simplePropertyName() {
	    let localctx = new SimplePropertyNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 270, MetaEdGrammar.RULE_simplePropertyName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1256;
	        this.localPropertyName();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	subdomainName() {
	    let localctx = new SubdomainNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 272, MetaEdGrammar.RULE_subdomainName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1258;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	namespaceName() {
	    let localctx = new NamespaceNameContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 274, MetaEdGrammar.RULE_namespaceName);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1260;
	        this.match(MetaEdGrammar.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	metaEdId() {
	    let localctx = new MetaEdIdContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 276, MetaEdGrammar.RULE_metaEdId);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1262;
	        this.match(MetaEdGrammar.METAED_ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}


}

MetaEdGrammar.EOF = antlr4.Token.EOF;
MetaEdGrammar.ABSTRACT_ENTITY = 1;
MetaEdGrammar.ASSOCIATION = 2;
MetaEdGrammar.BEGIN_NAMESPACE = 3;
MetaEdGrammar.END_NAMESPACE = 4;
MetaEdGrammar.CHOICE = 5;
MetaEdGrammar.COMMON = 6;
MetaEdGrammar.DESCRIPTOR = 7;
MetaEdGrammar.DOMAIN = 8;
MetaEdGrammar.DOMAIN_ENTITY = 9;
MetaEdGrammar.ENUMERATION = 10;
MetaEdGrammar.INLINE = 11;
MetaEdGrammar.INTERCHANGE = 12;
MetaEdGrammar.INLINE_COMMON = 13;
MetaEdGrammar.SHARED_DECIMAL = 14;
MetaEdGrammar.SHARED_INTEGER = 15;
MetaEdGrammar.SHARED_SHORT = 16;
MetaEdGrammar.SHARED_STRING = 17;
MetaEdGrammar.SUBDOMAIN = 18;
MetaEdGrammar.TYPE = 19;
MetaEdGrammar.ASSOCIATION_KEYWORD = 20;
MetaEdGrammar.ASSOCIATION_IDENTITY = 21;
MetaEdGrammar.BOOLEAN = 22;
MetaEdGrammar.CHOICE_KEYWORD = 23;
MetaEdGrammar.COMMON_KEYWORD = 24;
MetaEdGrammar.COMMON_EXTENSION = 25;
MetaEdGrammar.CURRENCY = 26;
MetaEdGrammar.DATE = 27;
MetaEdGrammar.DATETIME = 28;
MetaEdGrammar.DECIMAL = 29;
MetaEdGrammar.DESCRIPTOR_KEYWORD = 30;
MetaEdGrammar.DOMAIN_ENTITY_KEYWORD = 31;
MetaEdGrammar.DOMAIN_ENTITY_IDENTITY = 32;
MetaEdGrammar.DOMAIN_ITEM = 33;
MetaEdGrammar.DURATION = 34;
MetaEdGrammar.ELEMENT = 35;
MetaEdGrammar.ENUMERATION_KEYWORD = 36;
MetaEdGrammar.ENUMERATION_ITEM = 37;
MetaEdGrammar.INLINE_COMMON_KEYWORD = 38;
MetaEdGrammar.INTEGER = 39;
MetaEdGrammar.PERCENT = 40;
MetaEdGrammar.REFERENCE = 41;
MetaEdGrammar.SHARED_DECIMAL_KEYWORD = 42;
MetaEdGrammar.SHARED_INTEGER_KEYWORD = 43;
MetaEdGrammar.SHARED_SHORT_KEYWORD = 44;
MetaEdGrammar.SHARED_STRING_KEYWORD = 45;
MetaEdGrammar.SHARED_NAMED = 46;
MetaEdGrammar.SHORT = 47;
MetaEdGrammar.STRING = 48;
MetaEdGrammar.TIME = 49;
MetaEdGrammar.YEAR = 50;
MetaEdGrammar.ADDITIONS = 51;
MetaEdGrammar.BASED_ON = 52;
MetaEdGrammar.CORE = 53;
MetaEdGrammar.CASCADE_UPDATE = 54;
MetaEdGrammar.DECIMAL_PLACES = 55;
MetaEdGrammar.IDENTITY = 56;
MetaEdGrammar.IDENTITY_RENAME = 57;
MetaEdGrammar.IS_QUERYABLE_FIELD = 58;
MetaEdGrammar.IS_QUERYABLE_ONLY = 59;
MetaEdGrammar.IS_WEAK_REFERENCE = 60;
MetaEdGrammar.POTENTIALLY_LOGICAL = 61;
MetaEdGrammar.MERGE_REFERENCE = 62;
MetaEdGrammar.MIN_LENGTH = 63;
MetaEdGrammar.MAX_LENGTH = 64;
MetaEdGrammar.MIN_VALUE = 65;
MetaEdGrammar.MAX_VALUE = 66;
MetaEdGrammar.OPTIONAL = 67;
MetaEdGrammar.OPTIONAL_COLLECTION = 68;
MetaEdGrammar.REQUIRED = 69;
MetaEdGrammar.REQUIRED_COLLECTION = 70;
MetaEdGrammar.ROLE_NAME = 71;
MetaEdGrammar.SHORTEN_TO = 72;
MetaEdGrammar.SUBDOMAIN_OF = 73;
MetaEdGrammar.SUBDOMAIN_POSITION = 74;
MetaEdGrammar.TOTAL_DIGITS = 75;
MetaEdGrammar.WITH = 76;
MetaEdGrammar.WITH_OPTIONAL_MAP_TYPE = 77;
MetaEdGrammar.WITH_MAP_TYPE = 78;
MetaEdGrammar.DEPRECATED = 79;
MetaEdGrammar.DOCUMENTATION = 80;
MetaEdGrammar.INHERITED = 81;
MetaEdGrammar.EXTENDED_DOCUMENTATION = 82;
MetaEdGrammar.USE_CASE_DOCUMENTATION = 83;
MetaEdGrammar.FOOTER_DOCUMENTATION = 84;
MetaEdGrammar.ID = 85;
MetaEdGrammar.UNSIGNED_INT = 86;
MetaEdGrammar.DECIMAL_VALUE = 87;
MetaEdGrammar.TEXT = 88;
MetaEdGrammar.METAED_ID = 89;
MetaEdGrammar.POS_SIGN = 90;
MetaEdGrammar.NEG_SIGN = 91;
MetaEdGrammar.PERIOD = 92;
MetaEdGrammar.LINE_COMMENT = 93;
MetaEdGrammar.WS = 94;
MetaEdGrammar.ERROR_CHARACTER = 95;

MetaEdGrammar.RULE_metaEd = 0;
MetaEdGrammar.RULE_namespace = 1;
MetaEdGrammar.RULE_namespaceType = 2;
MetaEdGrammar.RULE_topLevelEntity = 3;
MetaEdGrammar.RULE_deprecated = 4;
MetaEdGrammar.RULE_propertyDeprecated = 5;
MetaEdGrammar.RULE_documentation = 6;
MetaEdGrammar.RULE_enumerationItemDocumentation = 7;
MetaEdGrammar.RULE_mapTypeDocumentation = 8;
MetaEdGrammar.RULE_propertyDocumentation = 9;
MetaEdGrammar.RULE_abstractEntity = 10;
MetaEdGrammar.RULE_entityConfiguration = 11;
MetaEdGrammar.RULE_cascadeUpdate = 12;
MetaEdGrammar.RULE_association = 13;
MetaEdGrammar.RULE_definingDomainEntity = 14;
MetaEdGrammar.RULE_associationExtension = 15;
MetaEdGrammar.RULE_associationSubclass = 16;
MetaEdGrammar.RULE_choice = 17;
MetaEdGrammar.RULE_sharedDecimal = 18;
MetaEdGrammar.RULE_sharedInteger = 19;
MetaEdGrammar.RULE_sharedShort = 20;
MetaEdGrammar.RULE_sharedString = 21;
MetaEdGrammar.RULE_common = 22;
MetaEdGrammar.RULE_commonExtension = 23;
MetaEdGrammar.RULE_commonSubclass = 24;
MetaEdGrammar.RULE_descriptor = 25;
MetaEdGrammar.RULE_withMapType = 26;
MetaEdGrammar.RULE_requiredMapType = 27;
MetaEdGrammar.RULE_optionalMapType = 28;
MetaEdGrammar.RULE_domain = 29;
MetaEdGrammar.RULE_domainItem = 30;
MetaEdGrammar.RULE_footerDocumentation = 31;
MetaEdGrammar.RULE_domainEntity = 32;
MetaEdGrammar.RULE_domainEntityExtension = 33;
MetaEdGrammar.RULE_domainEntitySubclass = 34;
MetaEdGrammar.RULE_enumeration = 35;
MetaEdGrammar.RULE_enumerationItem = 36;
MetaEdGrammar.RULE_shortDescription = 37;
MetaEdGrammar.RULE_inlineCommon = 38;
MetaEdGrammar.RULE_interchange = 39;
MetaEdGrammar.RULE_extendedDocumentation = 40;
MetaEdGrammar.RULE_useCaseDocumentation = 41;
MetaEdGrammar.RULE_interchangeComponent = 42;
MetaEdGrammar.RULE_interchangeElement = 43;
MetaEdGrammar.RULE_interchangeIdentity = 44;
MetaEdGrammar.RULE_interchangeExtension = 45;
MetaEdGrammar.RULE_interchangeExtensionComponent = 46;
MetaEdGrammar.RULE_subdomain = 47;
MetaEdGrammar.RULE_subdomainPosition = 48;
MetaEdGrammar.RULE_minValue = 49;
MetaEdGrammar.RULE_maxValue = 50;
MetaEdGrammar.RULE_minValueDecimal = 51;
MetaEdGrammar.RULE_maxValueDecimal = 52;
MetaEdGrammar.RULE_decimalValue = 53;
MetaEdGrammar.RULE_totalDigits = 54;
MetaEdGrammar.RULE_decimalPlaces = 55;
MetaEdGrammar.RULE_commonExtensionOverride = 56;
MetaEdGrammar.RULE_propertyAnnotation = 57;
MetaEdGrammar.RULE_identity = 58;
MetaEdGrammar.RULE_identityRename = 59;
MetaEdGrammar.RULE_required = 60;
MetaEdGrammar.RULE_optional = 61;
MetaEdGrammar.RULE_collection = 62;
MetaEdGrammar.RULE_requiredCollection = 63;
MetaEdGrammar.RULE_optionalCollection = 64;
MetaEdGrammar.RULE_isQueryableOnly = 65;
MetaEdGrammar.RULE_propertyComponents = 66;
MetaEdGrammar.RULE_isQueryableField = 67;
MetaEdGrammar.RULE_roleName = 68;
MetaEdGrammar.RULE_minLength = 69;
MetaEdGrammar.RULE_maxLength = 70;
MetaEdGrammar.RULE_property = 71;
MetaEdGrammar.RULE_booleanProperty = 72;
MetaEdGrammar.RULE_currencyProperty = 73;
MetaEdGrammar.RULE_dateProperty = 74;
MetaEdGrammar.RULE_datetimeProperty = 75;
MetaEdGrammar.RULE_decimalProperty = 76;
MetaEdGrammar.RULE_descriptorProperty = 77;
MetaEdGrammar.RULE_durationProperty = 78;
MetaEdGrammar.RULE_enumerationProperty = 79;
MetaEdGrammar.RULE_commonProperty = 80;
MetaEdGrammar.RULE_inlineCommonProperty = 81;
MetaEdGrammar.RULE_choiceProperty = 82;
MetaEdGrammar.RULE_integerProperty = 83;
MetaEdGrammar.RULE_percentProperty = 84;
MetaEdGrammar.RULE_associationProperty = 85;
MetaEdGrammar.RULE_domainEntityProperty = 86;
MetaEdGrammar.RULE_sharedDecimalProperty = 87;
MetaEdGrammar.RULE_sharedIntegerProperty = 88;
MetaEdGrammar.RULE_sharedShortProperty = 89;
MetaEdGrammar.RULE_sharedStringProperty = 90;
MetaEdGrammar.RULE_shortProperty = 91;
MetaEdGrammar.RULE_stringProperty = 92;
MetaEdGrammar.RULE_timeProperty = 93;
MetaEdGrammar.RULE_yearProperty = 94;
MetaEdGrammar.RULE_isWeakReference = 95;
MetaEdGrammar.RULE_potentiallyLogical = 96;
MetaEdGrammar.RULE_mergeDirective = 97;
MetaEdGrammar.RULE_sourcePropertyPath = 98;
MetaEdGrammar.RULE_targetPropertyPath = 99;
MetaEdGrammar.RULE_propertyPath = 100;
MetaEdGrammar.RULE_signed_int = 101;
MetaEdGrammar.RULE_unaryOperator = 102;
MetaEdGrammar.RULE_abstractEntityName = 103;
MetaEdGrammar.RULE_associationName = 104;
MetaEdGrammar.RULE_baseKeyName = 105;
MetaEdGrammar.RULE_baseName = 106;
MetaEdGrammar.RULE_baseNamespace = 107;
MetaEdGrammar.RULE_choiceName = 108;
MetaEdGrammar.RULE_sharedDecimalName = 109;
MetaEdGrammar.RULE_sharedIntegerName = 110;
MetaEdGrammar.RULE_commonName = 111;
MetaEdGrammar.RULE_sharedShortName = 112;
MetaEdGrammar.RULE_sharedStringName = 113;
MetaEdGrammar.RULE_descriptorName = 114;
MetaEdGrammar.RULE_domainName = 115;
MetaEdGrammar.RULE_entityName = 116;
MetaEdGrammar.RULE_enumerationName = 117;
MetaEdGrammar.RULE_extendeeName = 118;
MetaEdGrammar.RULE_extendeeNamespace = 119;
MetaEdGrammar.RULE_inlineCommonName = 120;
MetaEdGrammar.RULE_interchangeName = 121;
MetaEdGrammar.RULE_localBaseName = 122;
MetaEdGrammar.RULE_localDomainItemName = 123;
MetaEdGrammar.RULE_localExtendeeName = 124;
MetaEdGrammar.RULE_localInterchangeItemName = 125;
MetaEdGrammar.RULE_localPropertyName = 126;
MetaEdGrammar.RULE_localPropertyType = 127;
MetaEdGrammar.RULE_parentDomainName = 128;
MetaEdGrammar.RULE_propertyName = 129;
MetaEdGrammar.RULE_propertyNamespace = 130;
MetaEdGrammar.RULE_roleNameName = 131;
MetaEdGrammar.RULE_sharedPropertyName = 132;
MetaEdGrammar.RULE_sharedPropertyType = 133;
MetaEdGrammar.RULE_shortenToName = 134;
MetaEdGrammar.RULE_simplePropertyName = 135;
MetaEdGrammar.RULE_subdomainName = 136;
MetaEdGrammar.RULE_namespaceName = 137;
MetaEdGrammar.RULE_metaEdId = 138;

class MetaEdContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_metaEd;
    }

	namespace = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(NamespaceContext);
	    } else {
	        return this.getTypedRuleContext(NamespaceContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMetaEd(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMetaEd(this);
		}
	}


}



class NamespaceContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_namespace;
    }

	BEGIN_NAMESPACE() {
	    return this.getToken(MetaEdGrammar.BEGIN_NAMESPACE, 0);
	};

	namespaceName() {
	    return this.getTypedRuleContext(NamespaceNameContext,0);
	};

	namespaceType() {
	    return this.getTypedRuleContext(NamespaceTypeContext,0);
	};

	END_NAMESPACE() {
	    return this.getToken(MetaEdGrammar.END_NAMESPACE, 0);
	};

	topLevelEntity = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(TopLevelEntityContext);
	    } else {
	        return this.getTypedRuleContext(TopLevelEntityContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterNamespace(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitNamespace(this);
		}
	}


}



class NamespaceTypeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_namespaceType;
    }

	CORE() {
	    return this.getToken(MetaEdGrammar.CORE, 0);
	};

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterNamespaceType(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitNamespaceType(this);
		}
	}


}



class TopLevelEntityContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_topLevelEntity;
    }

	abstractEntity() {
	    return this.getTypedRuleContext(AbstractEntityContext,0);
	};

	association() {
	    return this.getTypedRuleContext(AssociationContext,0);
	};

	associationExtension() {
	    return this.getTypedRuleContext(AssociationExtensionContext,0);
	};

	associationSubclass() {
	    return this.getTypedRuleContext(AssociationSubclassContext,0);
	};

	choice() {
	    return this.getTypedRuleContext(ChoiceContext,0);
	};

	sharedDecimal() {
	    return this.getTypedRuleContext(SharedDecimalContext,0);
	};

	sharedInteger() {
	    return this.getTypedRuleContext(SharedIntegerContext,0);
	};

	sharedShort() {
	    return this.getTypedRuleContext(SharedShortContext,0);
	};

	sharedString() {
	    return this.getTypedRuleContext(SharedStringContext,0);
	};

	common() {
	    return this.getTypedRuleContext(CommonContext,0);
	};

	commonExtension() {
	    return this.getTypedRuleContext(CommonExtensionContext,0);
	};

	commonSubclass() {
	    return this.getTypedRuleContext(CommonSubclassContext,0);
	};

	descriptor() {
	    return this.getTypedRuleContext(DescriptorContext,0);
	};

	domainEntity() {
	    return this.getTypedRuleContext(DomainEntityContext,0);
	};

	domainEntityExtension() {
	    return this.getTypedRuleContext(DomainEntityExtensionContext,0);
	};

	domainEntitySubclass() {
	    return this.getTypedRuleContext(DomainEntitySubclassContext,0);
	};

	enumeration() {
	    return this.getTypedRuleContext(EnumerationContext,0);
	};

	inlineCommon() {
	    return this.getTypedRuleContext(InlineCommonContext,0);
	};

	interchange() {
	    return this.getTypedRuleContext(InterchangeContext,0);
	};

	interchangeExtension() {
	    return this.getTypedRuleContext(InterchangeExtensionContext,0);
	};

	domain() {
	    return this.getTypedRuleContext(DomainContext,0);
	};

	subdomain() {
	    return this.getTypedRuleContext(SubdomainContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterTopLevelEntity(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitTopLevelEntity(this);
		}
	}


}



class DeprecatedContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_deprecated;
    }

	DEPRECATED() {
	    return this.getToken(MetaEdGrammar.DEPRECATED, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDeprecated(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDeprecated(this);
		}
	}


}



class PropertyDeprecatedContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_propertyDeprecated;
    }

	DEPRECATED() {
	    return this.getToken(MetaEdGrammar.DEPRECATED, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPropertyDeprecated(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPropertyDeprecated(this);
		}
	}


}



class DocumentationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_documentation;
    }

	DOCUMENTATION() {
	    return this.getToken(MetaEdGrammar.DOCUMENTATION, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDocumentation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDocumentation(this);
		}
	}


}



class EnumerationItemDocumentationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_enumerationItemDocumentation;
    }

	DOCUMENTATION() {
	    return this.getToken(MetaEdGrammar.DOCUMENTATION, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterEnumerationItemDocumentation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitEnumerationItemDocumentation(this);
		}
	}


}



class MapTypeDocumentationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_mapTypeDocumentation;
    }

	DOCUMENTATION() {
	    return this.getToken(MetaEdGrammar.DOCUMENTATION, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMapTypeDocumentation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMapTypeDocumentation(this);
		}
	}


}



class PropertyDocumentationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_propertyDocumentation;
    }

	DOCUMENTATION() {
	    return this.getToken(MetaEdGrammar.DOCUMENTATION, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	INHERITED() {
	    return this.getToken(MetaEdGrammar.INHERITED, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPropertyDocumentation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPropertyDocumentation(this);
		}
	}


}



class AbstractEntityContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_abstractEntity;
    }

	ABSTRACT_ENTITY() {
	    return this.getToken(MetaEdGrammar.ABSTRACT_ENTITY, 0);
	};

	abstractEntityName() {
	    return this.getTypedRuleContext(AbstractEntityNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterAbstractEntity(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitAbstractEntity(this);
		}
	}


}



class EntityConfigurationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_entityConfiguration;
    }

	cascadeUpdate() {
	    return this.getTypedRuleContext(CascadeUpdateContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterEntityConfiguration(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitEntityConfiguration(this);
		}
	}


}



class CascadeUpdateContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_cascadeUpdate;
    }

	CASCADE_UPDATE() {
	    return this.getToken(MetaEdGrammar.CASCADE_UPDATE, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCascadeUpdate(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCascadeUpdate(this);
		}
	}


}



class AssociationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_association;
    }

	ASSOCIATION() {
	    return this.getToken(MetaEdGrammar.ASSOCIATION, 0);
	};

	associationName() {
	    return this.getTypedRuleContext(AssociationNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	definingDomainEntity = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(DefiningDomainEntityContext);
	    } else {
	        return this.getTypedRuleContext(DefiningDomainEntityContext,i);
	    }
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	entityConfiguration() {
	    return this.getTypedRuleContext(EntityConfigurationContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterAssociation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitAssociation(this);
		}
	}


}



class DefiningDomainEntityContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_definingDomainEntity;
    }

	DOMAIN_ENTITY_KEYWORD() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY_KEYWORD, 0);
	};

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyDocumentation() {
	    return this.getTypedRuleContext(PropertyDocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	propertyDeprecated() {
	    return this.getTypedRuleContext(PropertyDeprecatedContext,0);
	};

	roleName() {
	    return this.getTypedRuleContext(RoleNameContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDefiningDomainEntity(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDefiningDomainEntity(this);
		}
	}


}



class AssociationExtensionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_associationExtension;
    }

	ASSOCIATION() {
	    return this.getToken(MetaEdGrammar.ASSOCIATION, 0);
	};

	extendeeName() {
	    return this.getTypedRuleContext(ExtendeeNameContext,0);
	};

	ADDITIONS() {
	    return this.getToken(MetaEdGrammar.ADDITIONS, 0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterAssociationExtension(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitAssociationExtension(this);
		}
	}


}



class AssociationSubclassContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_associationSubclass;
    }

	ASSOCIATION() {
	    return this.getToken(MetaEdGrammar.ASSOCIATION, 0);
	};

	associationName() {
	    return this.getTypedRuleContext(AssociationNameContext,0);
	};

	BASED_ON() {
	    return this.getToken(MetaEdGrammar.BASED_ON, 0);
	};

	baseName() {
	    return this.getTypedRuleContext(BaseNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterAssociationSubclass(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitAssociationSubclass(this);
		}
	}


}



class ChoiceContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_choice;
    }

	CHOICE() {
	    return this.getToken(MetaEdGrammar.CHOICE, 0);
	};

	choiceName() {
	    return this.getTypedRuleContext(ChoiceNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterChoice(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitChoice(this);
		}
	}


}



class SharedDecimalContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedDecimal;
    }

	SHARED_DECIMAL() {
	    return this.getToken(MetaEdGrammar.SHARED_DECIMAL, 0);
	};

	sharedDecimalName() {
	    return this.getTypedRuleContext(SharedDecimalNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	totalDigits() {
	    return this.getTypedRuleContext(TotalDigitsContext,0);
	};

	decimalPlaces() {
	    return this.getTypedRuleContext(DecimalPlacesContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	minValueDecimal() {
	    return this.getTypedRuleContext(MinValueDecimalContext,0);
	};

	maxValueDecimal() {
	    return this.getTypedRuleContext(MaxValueDecimalContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedDecimal(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedDecimal(this);
		}
	}


}



class SharedIntegerContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedInteger;
    }

	SHARED_INTEGER() {
	    return this.getToken(MetaEdGrammar.SHARED_INTEGER, 0);
	};

	sharedIntegerName() {
	    return this.getTypedRuleContext(SharedIntegerNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	minValue() {
	    return this.getTypedRuleContext(MinValueContext,0);
	};

	maxValue() {
	    return this.getTypedRuleContext(MaxValueContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedInteger(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedInteger(this);
		}
	}


}



class SharedShortContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedShort;
    }

	SHARED_SHORT() {
	    return this.getToken(MetaEdGrammar.SHARED_SHORT, 0);
	};

	sharedShortName() {
	    return this.getTypedRuleContext(SharedShortNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	minValue() {
	    return this.getTypedRuleContext(MinValueContext,0);
	};

	maxValue() {
	    return this.getTypedRuleContext(MaxValueContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedShort(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedShort(this);
		}
	}


}



class SharedStringContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedString;
    }

	SHARED_STRING() {
	    return this.getToken(MetaEdGrammar.SHARED_STRING, 0);
	};

	sharedStringName() {
	    return this.getTypedRuleContext(SharedStringNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	maxLength() {
	    return this.getTypedRuleContext(MaxLengthContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	minLength() {
	    return this.getTypedRuleContext(MinLengthContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedString(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedString(this);
		}
	}


}



class CommonContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_common;
    }

	COMMON() {
	    return this.getToken(MetaEdGrammar.COMMON, 0);
	};

	commonName() {
	    return this.getTypedRuleContext(CommonNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCommon(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCommon(this);
		}
	}


}



class CommonExtensionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_commonExtension;
    }

	COMMON() {
	    return this.getToken(MetaEdGrammar.COMMON, 0);
	};

	extendeeName() {
	    return this.getTypedRuleContext(ExtendeeNameContext,0);
	};

	ADDITIONS() {
	    return this.getToken(MetaEdGrammar.ADDITIONS, 0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCommonExtension(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCommonExtension(this);
		}
	}


}



class CommonSubclassContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_commonSubclass;
    }

	COMMON() {
	    return this.getToken(MetaEdGrammar.COMMON, 0);
	};

	commonName() {
	    return this.getTypedRuleContext(CommonNameContext,0);
	};

	BASED_ON() {
	    return this.getToken(MetaEdGrammar.BASED_ON, 0);
	};

	baseName() {
	    return this.getTypedRuleContext(BaseNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCommonSubclass(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCommonSubclass(this);
		}
	}


}



class DescriptorContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_descriptor;
    }

	DESCRIPTOR() {
	    return this.getToken(MetaEdGrammar.DESCRIPTOR, 0);
	};

	descriptorName() {
	    return this.getTypedRuleContext(DescriptorNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	withMapType() {
	    return this.getTypedRuleContext(WithMapTypeContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDescriptor(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDescriptor(this);
		}
	}


}



class WithMapTypeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_withMapType;
    }

	mapTypeDocumentation() {
	    return this.getTypedRuleContext(MapTypeDocumentationContext,0);
	};

	requiredMapType() {
	    return this.getTypedRuleContext(RequiredMapTypeContext,0);
	};

	optionalMapType() {
	    return this.getTypedRuleContext(OptionalMapTypeContext,0);
	};

	enumerationItem = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(EnumerationItemContext);
	    } else {
	        return this.getTypedRuleContext(EnumerationItemContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterWithMapType(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitWithMapType(this);
		}
	}


}



class RequiredMapTypeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_requiredMapType;
    }

	WITH_MAP_TYPE() {
	    return this.getToken(MetaEdGrammar.WITH_MAP_TYPE, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterRequiredMapType(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitRequiredMapType(this);
		}
	}


}



class OptionalMapTypeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_optionalMapType;
    }

	WITH_OPTIONAL_MAP_TYPE() {
	    return this.getToken(MetaEdGrammar.WITH_OPTIONAL_MAP_TYPE, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterOptionalMapType(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitOptionalMapType(this);
		}
	}


}



class DomainContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_domain;
    }

	DOMAIN() {
	    return this.getToken(MetaEdGrammar.DOMAIN, 0);
	};

	domainName() {
	    return this.getTypedRuleContext(DomainNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	domainItem = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(DomainItemContext);
	    } else {
	        return this.getTypedRuleContext(DomainItemContext,i);
	    }
	};

	footerDocumentation() {
	    return this.getTypedRuleContext(FooterDocumentationContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDomain(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDomain(this);
		}
	}


}



class DomainItemContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_domainItem;
    }

	localDomainItemName() {
	    return this.getTypedRuleContext(LocalDomainItemNameContext,0);
	};

	ASSOCIATION_KEYWORD() {
	    return this.getToken(MetaEdGrammar.ASSOCIATION_KEYWORD, 0);
	};

	COMMON_KEYWORD() {
	    return this.getToken(MetaEdGrammar.COMMON_KEYWORD, 0);
	};

	DOMAIN_ENTITY_KEYWORD() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY_KEYWORD, 0);
	};

	DESCRIPTOR_KEYWORD() {
	    return this.getToken(MetaEdGrammar.DESCRIPTOR_KEYWORD, 0);
	};

	INLINE_COMMON_KEYWORD() {
	    return this.getToken(MetaEdGrammar.INLINE_COMMON_KEYWORD, 0);
	};

	baseNamespace() {
	    return this.getTypedRuleContext(BaseNamespaceContext,0);
	};

	PERIOD() {
	    return this.getToken(MetaEdGrammar.PERIOD, 0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDomainItem(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDomainItem(this);
		}
	}


}



class FooterDocumentationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_footerDocumentation;
    }

	FOOTER_DOCUMENTATION() {
	    return this.getToken(MetaEdGrammar.FOOTER_DOCUMENTATION, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterFooterDocumentation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitFooterDocumentation(this);
		}
	}


}



class DomainEntityContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_domainEntity;
    }

	DOMAIN_ENTITY() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY, 0);
	};

	entityName() {
	    return this.getTypedRuleContext(EntityNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	entityConfiguration() {
	    return this.getTypedRuleContext(EntityConfigurationContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDomainEntity(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDomainEntity(this);
		}
	}


}



class DomainEntityExtensionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_domainEntityExtension;
    }

	DOMAIN_ENTITY() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY, 0);
	};

	extendeeName() {
	    return this.getTypedRuleContext(ExtendeeNameContext,0);
	};

	ADDITIONS() {
	    return this.getToken(MetaEdGrammar.ADDITIONS, 0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDomainEntityExtension(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDomainEntityExtension(this);
		}
	}


}



class DomainEntitySubclassContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_domainEntitySubclass;
    }

	DOMAIN_ENTITY() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY, 0);
	};

	entityName() {
	    return this.getTypedRuleContext(EntityNameContext,0);
	};

	BASED_ON() {
	    return this.getToken(MetaEdGrammar.BASED_ON, 0);
	};

	baseName() {
	    return this.getTypedRuleContext(BaseNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDomainEntitySubclass(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDomainEntitySubclass(this);
		}
	}


}



class EnumerationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_enumeration;
    }

	ENUMERATION() {
	    return this.getToken(MetaEdGrammar.ENUMERATION, 0);
	};

	enumerationName() {
	    return this.getTypedRuleContext(EnumerationNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	enumerationItem = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(EnumerationItemContext);
	    } else {
	        return this.getTypedRuleContext(EnumerationItemContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterEnumeration(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitEnumeration(this);
		}
	}


}



class EnumerationItemContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_enumerationItem;
    }

	ENUMERATION_ITEM() {
	    return this.getToken(MetaEdGrammar.ENUMERATION_ITEM, 0);
	};

	shortDescription() {
	    return this.getTypedRuleContext(ShortDescriptionContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enumerationItemDocumentation() {
	    return this.getTypedRuleContext(EnumerationItemDocumentationContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterEnumerationItem(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitEnumerationItem(this);
		}
	}


}



class ShortDescriptionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_shortDescription;
    }

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterShortDescription(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitShortDescription(this);
		}
	}


}



class InlineCommonContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_inlineCommon;
    }

	INLINE_COMMON() {
	    return this.getToken(MetaEdGrammar.INLINE_COMMON, 0);
	};

	inlineCommonName() {
	    return this.getTypedRuleContext(InlineCommonNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	property = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(PropertyContext);
	    } else {
	        return this.getTypedRuleContext(PropertyContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInlineCommon(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInlineCommon(this);
		}
	}


}



class InterchangeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_interchange;
    }

	INTERCHANGE() {
	    return this.getToken(MetaEdGrammar.INTERCHANGE, 0);
	};

	interchangeName() {
	    return this.getTypedRuleContext(InterchangeNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	interchangeComponent() {
	    return this.getTypedRuleContext(InterchangeComponentContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	extendedDocumentation() {
	    return this.getTypedRuleContext(ExtendedDocumentationContext,0);
	};

	useCaseDocumentation() {
	    return this.getTypedRuleContext(UseCaseDocumentationContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInterchange(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInterchange(this);
		}
	}


}



class ExtendedDocumentationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_extendedDocumentation;
    }

	EXTENDED_DOCUMENTATION() {
	    return this.getToken(MetaEdGrammar.EXTENDED_DOCUMENTATION, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterExtendedDocumentation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitExtendedDocumentation(this);
		}
	}


}



class UseCaseDocumentationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_useCaseDocumentation;
    }

	USE_CASE_DOCUMENTATION() {
	    return this.getToken(MetaEdGrammar.USE_CASE_DOCUMENTATION, 0);
	};

	TEXT() {
	    return this.getToken(MetaEdGrammar.TEXT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterUseCaseDocumentation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitUseCaseDocumentation(this);
		}
	}


}



class InterchangeComponentContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_interchangeComponent;
    }

	interchangeElement = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(InterchangeElementContext);
	    } else {
	        return this.getTypedRuleContext(InterchangeElementContext,i);
	    }
	};

	interchangeIdentity = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(InterchangeIdentityContext);
	    } else {
	        return this.getTypedRuleContext(InterchangeIdentityContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInterchangeComponent(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInterchangeComponent(this);
		}
	}


}



class InterchangeElementContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_interchangeElement;
    }

	localInterchangeItemName() {
	    return this.getTypedRuleContext(LocalInterchangeItemNameContext,0);
	};

	ASSOCIATION_KEYWORD() {
	    return this.getToken(MetaEdGrammar.ASSOCIATION_KEYWORD, 0);
	};

	DESCRIPTOR_KEYWORD() {
	    return this.getToken(MetaEdGrammar.DESCRIPTOR_KEYWORD, 0);
	};

	DOMAIN_ENTITY_KEYWORD() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY_KEYWORD, 0);
	};

	baseNamespace() {
	    return this.getTypedRuleContext(BaseNamespaceContext,0);
	};

	PERIOD() {
	    return this.getToken(MetaEdGrammar.PERIOD, 0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInterchangeElement(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInterchangeElement(this);
		}
	}


}



class InterchangeIdentityContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_interchangeIdentity;
    }

	localInterchangeItemName() {
	    return this.getTypedRuleContext(LocalInterchangeItemNameContext,0);
	};

	ASSOCIATION_IDENTITY() {
	    return this.getToken(MetaEdGrammar.ASSOCIATION_IDENTITY, 0);
	};

	DOMAIN_ENTITY_IDENTITY() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY_IDENTITY, 0);
	};

	baseNamespace() {
	    return this.getTypedRuleContext(BaseNamespaceContext,0);
	};

	PERIOD() {
	    return this.getToken(MetaEdGrammar.PERIOD, 0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInterchangeIdentity(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInterchangeIdentity(this);
		}
	}


}



class InterchangeExtensionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_interchangeExtension;
    }

	INTERCHANGE() {
	    return this.getToken(MetaEdGrammar.INTERCHANGE, 0);
	};

	extendeeName() {
	    return this.getTypedRuleContext(ExtendeeNameContext,0);
	};

	ADDITIONS() {
	    return this.getToken(MetaEdGrammar.ADDITIONS, 0);
	};

	interchangeExtensionComponent() {
	    return this.getTypedRuleContext(InterchangeExtensionComponentContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInterchangeExtension(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInterchangeExtension(this);
		}
	}


}



class InterchangeExtensionComponentContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_interchangeExtensionComponent;
    }

	interchangeElement = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(InterchangeElementContext);
	    } else {
	        return this.getTypedRuleContext(InterchangeElementContext,i);
	    }
	};

	interchangeIdentity = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(InterchangeIdentityContext);
	    } else {
	        return this.getTypedRuleContext(InterchangeIdentityContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInterchangeExtensionComponent(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInterchangeExtensionComponent(this);
		}
	}


}



class SubdomainContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_subdomain;
    }

	SUBDOMAIN() {
	    return this.getToken(MetaEdGrammar.SUBDOMAIN, 0);
	};

	subdomainName() {
	    return this.getTypedRuleContext(SubdomainNameContext,0);
	};

	SUBDOMAIN_OF() {
	    return this.getToken(MetaEdGrammar.SUBDOMAIN_OF, 0);
	};

	parentDomainName() {
	    return this.getTypedRuleContext(ParentDomainNameContext,0);
	};

	documentation() {
	    return this.getTypedRuleContext(DocumentationContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	deprecated() {
	    return this.getTypedRuleContext(DeprecatedContext,0);
	};

	domainItem = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(DomainItemContext);
	    } else {
	        return this.getTypedRuleContext(DomainItemContext,i);
	    }
	};

	SUBDOMAIN_POSITION() {
	    return this.getToken(MetaEdGrammar.SUBDOMAIN_POSITION, 0);
	};

	subdomainPosition() {
	    return this.getTypedRuleContext(SubdomainPositionContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSubdomain(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSubdomain(this);
		}
	}


}



class SubdomainPositionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_subdomainPosition;
    }

	UNSIGNED_INT() {
	    return this.getToken(MetaEdGrammar.UNSIGNED_INT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSubdomainPosition(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSubdomainPosition(this);
		}
	}


}



class MinValueContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_minValue;
    }

	MIN_VALUE() {
	    return this.getToken(MetaEdGrammar.MIN_VALUE, 0);
	};

	signed_int() {
	    return this.getTypedRuleContext(Signed_intContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMinValue(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMinValue(this);
		}
	}


}



class MaxValueContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_maxValue;
    }

	MAX_VALUE() {
	    return this.getToken(MetaEdGrammar.MAX_VALUE, 0);
	};

	signed_int() {
	    return this.getTypedRuleContext(Signed_intContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMaxValue(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMaxValue(this);
		}
	}


}



class MinValueDecimalContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_minValueDecimal;
    }

	MIN_VALUE() {
	    return this.getToken(MetaEdGrammar.MIN_VALUE, 0);
	};

	decimalValue() {
	    return this.getTypedRuleContext(DecimalValueContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMinValueDecimal(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMinValueDecimal(this);
		}
	}


}



class MaxValueDecimalContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_maxValueDecimal;
    }

	MAX_VALUE() {
	    return this.getToken(MetaEdGrammar.MAX_VALUE, 0);
	};

	decimalValue() {
	    return this.getTypedRuleContext(DecimalValueContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMaxValueDecimal(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMaxValueDecimal(this);
		}
	}


}



class DecimalValueContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_decimalValue;
    }

	DECIMAL_VALUE() {
	    return this.getToken(MetaEdGrammar.DECIMAL_VALUE, 0);
	};

	signed_int() {
	    return this.getTypedRuleContext(Signed_intContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDecimalValue(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDecimalValue(this);
		}
	}


}



class TotalDigitsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_totalDigits;
    }

	TOTAL_DIGITS() {
	    return this.getToken(MetaEdGrammar.TOTAL_DIGITS, 0);
	};

	UNSIGNED_INT() {
	    return this.getToken(MetaEdGrammar.UNSIGNED_INT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterTotalDigits(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitTotalDigits(this);
		}
	}


}



class DecimalPlacesContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_decimalPlaces;
    }

	DECIMAL_PLACES() {
	    return this.getToken(MetaEdGrammar.DECIMAL_PLACES, 0);
	};

	UNSIGNED_INT() {
	    return this.getToken(MetaEdGrammar.UNSIGNED_INT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDecimalPlaces(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDecimalPlaces(this);
		}
	}


}



class CommonExtensionOverrideContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_commonExtensionOverride;
    }

	COMMON_EXTENSION() {
	    return this.getToken(MetaEdGrammar.COMMON_EXTENSION, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCommonExtensionOverride(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCommonExtensionOverride(this);
		}
	}


}



class PropertyAnnotationContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_propertyAnnotation;
    }

	identity() {
	    return this.getTypedRuleContext(IdentityContext,0);
	};

	identityRename() {
	    return this.getTypedRuleContext(IdentityRenameContext,0);
	};

	required() {
	    return this.getTypedRuleContext(RequiredContext,0);
	};

	optional() {
	    return this.getTypedRuleContext(OptionalContext,0);
	};

	collection() {
	    return this.getTypedRuleContext(CollectionContext,0);
	};

	isQueryableOnly() {
	    return this.getTypedRuleContext(IsQueryableOnlyContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPropertyAnnotation(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPropertyAnnotation(this);
		}
	}


}



class IdentityContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_identity;
    }

	IDENTITY() {
	    return this.getToken(MetaEdGrammar.IDENTITY, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterIdentity(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitIdentity(this);
		}
	}


}



class IdentityRenameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_identityRename;
    }

	IDENTITY_RENAME() {
	    return this.getToken(MetaEdGrammar.IDENTITY_RENAME, 0);
	};

	baseKeyName() {
	    return this.getTypedRuleContext(BaseKeyNameContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterIdentityRename(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitIdentityRename(this);
		}
	}


}



class RequiredContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_required;
    }

	REQUIRED() {
	    return this.getToken(MetaEdGrammar.REQUIRED, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterRequired(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitRequired(this);
		}
	}


}



class OptionalContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_optional;
    }

	OPTIONAL() {
	    return this.getToken(MetaEdGrammar.OPTIONAL, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterOptional(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitOptional(this);
		}
	}


}



class CollectionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_collection;
    }

	requiredCollection() {
	    return this.getTypedRuleContext(RequiredCollectionContext,0);
	};

	optionalCollection() {
	    return this.getTypedRuleContext(OptionalCollectionContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCollection(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCollection(this);
		}
	}


}



class RequiredCollectionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_requiredCollection;
    }

	REQUIRED_COLLECTION() {
	    return this.getToken(MetaEdGrammar.REQUIRED_COLLECTION, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterRequiredCollection(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitRequiredCollection(this);
		}
	}


}



class OptionalCollectionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_optionalCollection;
    }

	OPTIONAL_COLLECTION() {
	    return this.getToken(MetaEdGrammar.OPTIONAL_COLLECTION, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterOptionalCollection(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitOptionalCollection(this);
		}
	}


}



class IsQueryableOnlyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_isQueryableOnly;
    }

	IS_QUERYABLE_ONLY() {
	    return this.getToken(MetaEdGrammar.IS_QUERYABLE_ONLY, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterIsQueryableOnly(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitIsQueryableOnly(this);
		}
	}


}



class PropertyComponentsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_propertyComponents;
    }

	propertyDocumentation() {
	    return this.getTypedRuleContext(PropertyDocumentationContext,0);
	};

	propertyAnnotation() {
	    return this.getTypedRuleContext(PropertyAnnotationContext,0);
	};

	propertyDeprecated() {
	    return this.getTypedRuleContext(PropertyDeprecatedContext,0);
	};

	roleName() {
	    return this.getTypedRuleContext(RoleNameContext,0);
	};

	isQueryableField() {
	    return this.getTypedRuleContext(IsQueryableFieldContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPropertyComponents(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPropertyComponents(this);
		}
	}


}



class IsQueryableFieldContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_isQueryableField;
    }

	IS_QUERYABLE_FIELD() {
	    return this.getToken(MetaEdGrammar.IS_QUERYABLE_FIELD, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterIsQueryableField(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitIsQueryableField(this);
		}
	}


}



class RoleNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_roleName;
    }

	ROLE_NAME() {
	    return this.getToken(MetaEdGrammar.ROLE_NAME, 0);
	};

	roleNameName() {
	    return this.getTypedRuleContext(RoleNameNameContext,0);
	};

	SHORTEN_TO() {
	    return this.getToken(MetaEdGrammar.SHORTEN_TO, 0);
	};

	shortenToName() {
	    return this.getTypedRuleContext(ShortenToNameContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterRoleName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitRoleName(this);
		}
	}


}



class MinLengthContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_minLength;
    }

	MIN_LENGTH() {
	    return this.getToken(MetaEdGrammar.MIN_LENGTH, 0);
	};

	UNSIGNED_INT() {
	    return this.getToken(MetaEdGrammar.UNSIGNED_INT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMinLength(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMinLength(this);
		}
	}


}



class MaxLengthContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_maxLength;
    }

	MAX_LENGTH() {
	    return this.getToken(MetaEdGrammar.MAX_LENGTH, 0);
	};

	UNSIGNED_INT() {
	    return this.getToken(MetaEdGrammar.UNSIGNED_INT, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMaxLength(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMaxLength(this);
		}
	}


}



class PropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_property;
    }

	associationProperty() {
	    return this.getTypedRuleContext(AssociationPropertyContext,0);
	};

	booleanProperty() {
	    return this.getTypedRuleContext(BooleanPropertyContext,0);
	};

	choiceProperty() {
	    return this.getTypedRuleContext(ChoicePropertyContext,0);
	};

	commonProperty() {
	    return this.getTypedRuleContext(CommonPropertyContext,0);
	};

	currencyProperty() {
	    return this.getTypedRuleContext(CurrencyPropertyContext,0);
	};

	dateProperty() {
	    return this.getTypedRuleContext(DatePropertyContext,0);
	};

	datetimeProperty() {
	    return this.getTypedRuleContext(DatetimePropertyContext,0);
	};

	decimalProperty() {
	    return this.getTypedRuleContext(DecimalPropertyContext,0);
	};

	descriptorProperty() {
	    return this.getTypedRuleContext(DescriptorPropertyContext,0);
	};

	domainEntityProperty() {
	    return this.getTypedRuleContext(DomainEntityPropertyContext,0);
	};

	durationProperty() {
	    return this.getTypedRuleContext(DurationPropertyContext,0);
	};

	enumerationProperty() {
	    return this.getTypedRuleContext(EnumerationPropertyContext,0);
	};

	inlineCommonProperty() {
	    return this.getTypedRuleContext(InlineCommonPropertyContext,0);
	};

	integerProperty() {
	    return this.getTypedRuleContext(IntegerPropertyContext,0);
	};

	percentProperty() {
	    return this.getTypedRuleContext(PercentPropertyContext,0);
	};

	sharedDecimalProperty() {
	    return this.getTypedRuleContext(SharedDecimalPropertyContext,0);
	};

	sharedIntegerProperty() {
	    return this.getTypedRuleContext(SharedIntegerPropertyContext,0);
	};

	sharedShortProperty() {
	    return this.getTypedRuleContext(SharedShortPropertyContext,0);
	};

	sharedStringProperty() {
	    return this.getTypedRuleContext(SharedStringPropertyContext,0);
	};

	shortProperty() {
	    return this.getTypedRuleContext(ShortPropertyContext,0);
	};

	stringProperty() {
	    return this.getTypedRuleContext(StringPropertyContext,0);
	};

	timeProperty() {
	    return this.getTypedRuleContext(TimePropertyContext,0);
	};

	yearProperty() {
	    return this.getTypedRuleContext(YearPropertyContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitProperty(this);
		}
	}


}



class BooleanPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_booleanProperty;
    }

	BOOLEAN() {
	    return this.getToken(MetaEdGrammar.BOOLEAN, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterBooleanProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitBooleanProperty(this);
		}
	}


}



class CurrencyPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_currencyProperty;
    }

	CURRENCY() {
	    return this.getToken(MetaEdGrammar.CURRENCY, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCurrencyProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCurrencyProperty(this);
		}
	}


}



class DatePropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_dateProperty;
    }

	DATE() {
	    return this.getToken(MetaEdGrammar.DATE, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDateProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDateProperty(this);
		}
	}


}



class DatetimePropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_datetimeProperty;
    }

	DATETIME() {
	    return this.getToken(MetaEdGrammar.DATETIME, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDatetimeProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDatetimeProperty(this);
		}
	}


}



class DecimalPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_decimalProperty;
    }

	DECIMAL() {
	    return this.getToken(MetaEdGrammar.DECIMAL, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	totalDigits() {
	    return this.getTypedRuleContext(TotalDigitsContext,0);
	};

	decimalPlaces() {
	    return this.getTypedRuleContext(DecimalPlacesContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	minValueDecimal() {
	    return this.getTypedRuleContext(MinValueDecimalContext,0);
	};

	maxValueDecimal() {
	    return this.getTypedRuleContext(MaxValueDecimalContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDecimalProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDecimalProperty(this);
		}
	}


}



class DescriptorPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_descriptorProperty;
    }

	DESCRIPTOR_KEYWORD() {
	    return this.getToken(MetaEdGrammar.DESCRIPTOR_KEYWORD, 0);
	};

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDescriptorProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDescriptorProperty(this);
		}
	}


}



class DurationPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_durationProperty;
    }

	DURATION() {
	    return this.getToken(MetaEdGrammar.DURATION, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDurationProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDurationProperty(this);
		}
	}


}



class EnumerationPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_enumerationProperty;
    }

	ENUMERATION_KEYWORD() {
	    return this.getToken(MetaEdGrammar.ENUMERATION_KEYWORD, 0);
	};

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterEnumerationProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitEnumerationProperty(this);
		}
	}


}



class CommonPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_commonProperty;
    }

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	COMMON_KEYWORD() {
	    return this.getToken(MetaEdGrammar.COMMON_KEYWORD, 0);
	};

	commonExtensionOverride() {
	    return this.getTypedRuleContext(CommonExtensionOverrideContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCommonProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCommonProperty(this);
		}
	}


}



class InlineCommonPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_inlineCommonProperty;
    }

	INLINE_COMMON_KEYWORD() {
	    return this.getToken(MetaEdGrammar.INLINE_COMMON_KEYWORD, 0);
	};

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInlineCommonProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInlineCommonProperty(this);
		}
	}


}



class ChoicePropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_choiceProperty;
    }

	CHOICE_KEYWORD() {
	    return this.getToken(MetaEdGrammar.CHOICE_KEYWORD, 0);
	};

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterChoiceProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitChoiceProperty(this);
		}
	}


}



class IntegerPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_integerProperty;
    }

	INTEGER() {
	    return this.getToken(MetaEdGrammar.INTEGER, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	minValue() {
	    return this.getTypedRuleContext(MinValueContext,0);
	};

	maxValue() {
	    return this.getTypedRuleContext(MaxValueContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterIntegerProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitIntegerProperty(this);
		}
	}


}



class PercentPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_percentProperty;
    }

	PERCENT() {
	    return this.getToken(MetaEdGrammar.PERCENT, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPercentProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPercentProperty(this);
		}
	}


}



class AssociationPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_associationProperty;
    }

	ASSOCIATION_KEYWORD() {
	    return this.getToken(MetaEdGrammar.ASSOCIATION_KEYWORD, 0);
	};

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	potentiallyLogical() {
	    return this.getTypedRuleContext(PotentiallyLogicalContext,0);
	};

	isWeakReference() {
	    return this.getTypedRuleContext(IsWeakReferenceContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterAssociationProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitAssociationProperty(this);
		}
	}


}



class DomainEntityPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_domainEntityProperty;
    }

	DOMAIN_ENTITY_KEYWORD() {
	    return this.getToken(MetaEdGrammar.DOMAIN_ENTITY_KEYWORD, 0);
	};

	propertyName() {
	    return this.getTypedRuleContext(PropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	potentiallyLogical() {
	    return this.getTypedRuleContext(PotentiallyLogicalContext,0);
	};

	isWeakReference() {
	    return this.getTypedRuleContext(IsWeakReferenceContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDomainEntityProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDomainEntityProperty(this);
		}
	}


}



class SharedDecimalPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedDecimalProperty;
    }

	SHARED_DECIMAL_KEYWORD() {
	    return this.getToken(MetaEdGrammar.SHARED_DECIMAL_KEYWORD, 0);
	};

	sharedPropertyType() {
	    return this.getTypedRuleContext(SharedPropertyTypeContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	SHARED_NAMED() {
	    return this.getToken(MetaEdGrammar.SHARED_NAMED, 0);
	};

	sharedPropertyName() {
	    return this.getTypedRuleContext(SharedPropertyNameContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedDecimalProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedDecimalProperty(this);
		}
	}


}



class SharedIntegerPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedIntegerProperty;
    }

	SHARED_INTEGER_KEYWORD() {
	    return this.getToken(MetaEdGrammar.SHARED_INTEGER_KEYWORD, 0);
	};

	sharedPropertyType() {
	    return this.getTypedRuleContext(SharedPropertyTypeContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	SHARED_NAMED() {
	    return this.getToken(MetaEdGrammar.SHARED_NAMED, 0);
	};

	sharedPropertyName() {
	    return this.getTypedRuleContext(SharedPropertyNameContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedIntegerProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedIntegerProperty(this);
		}
	}


}



class SharedShortPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedShortProperty;
    }

	SHARED_SHORT_KEYWORD() {
	    return this.getToken(MetaEdGrammar.SHARED_SHORT_KEYWORD, 0);
	};

	sharedPropertyType() {
	    return this.getTypedRuleContext(SharedPropertyTypeContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	SHARED_NAMED() {
	    return this.getToken(MetaEdGrammar.SHARED_NAMED, 0);
	};

	sharedPropertyName() {
	    return this.getTypedRuleContext(SharedPropertyNameContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedShortProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedShortProperty(this);
		}
	}


}



class SharedStringPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedStringProperty;
    }

	SHARED_STRING_KEYWORD() {
	    return this.getToken(MetaEdGrammar.SHARED_STRING_KEYWORD, 0);
	};

	sharedPropertyType() {
	    return this.getTypedRuleContext(SharedPropertyTypeContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	SHARED_NAMED() {
	    return this.getToken(MetaEdGrammar.SHARED_NAMED, 0);
	};

	sharedPropertyName() {
	    return this.getTypedRuleContext(SharedPropertyNameContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	mergeDirective = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MergeDirectiveContext);
	    } else {
	        return this.getTypedRuleContext(MergeDirectiveContext,i);
	    }
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedStringProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedStringProperty(this);
		}
	}


}



class ShortPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_shortProperty;
    }

	SHORT() {
	    return this.getToken(MetaEdGrammar.SHORT, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	minValue() {
	    return this.getTypedRuleContext(MinValueContext,0);
	};

	maxValue() {
	    return this.getTypedRuleContext(MaxValueContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterShortProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitShortProperty(this);
		}
	}


}



class StringPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_stringProperty;
    }

	STRING() {
	    return this.getToken(MetaEdGrammar.STRING, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	maxLength() {
	    return this.getTypedRuleContext(MaxLengthContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	minLength() {
	    return this.getTypedRuleContext(MinLengthContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterStringProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitStringProperty(this);
		}
	}


}



class TimePropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_timeProperty;
    }

	TIME() {
	    return this.getToken(MetaEdGrammar.TIME, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterTimeProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitTimeProperty(this);
		}
	}


}



class YearPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_yearProperty;
    }

	YEAR() {
	    return this.getToken(MetaEdGrammar.YEAR, 0);
	};

	simplePropertyName() {
	    return this.getTypedRuleContext(SimplePropertyNameContext,0);
	};

	propertyComponents() {
	    return this.getTypedRuleContext(PropertyComponentsContext,0);
	};

	metaEdId() {
	    return this.getTypedRuleContext(MetaEdIdContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterYearProperty(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitYearProperty(this);
		}
	}


}



class IsWeakReferenceContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_isWeakReference;
    }

	IS_WEAK_REFERENCE() {
	    return this.getToken(MetaEdGrammar.IS_WEAK_REFERENCE, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterIsWeakReference(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitIsWeakReference(this);
		}
	}


}



class PotentiallyLogicalContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_potentiallyLogical;
    }

	POTENTIALLY_LOGICAL() {
	    return this.getToken(MetaEdGrammar.POTENTIALLY_LOGICAL, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPotentiallyLogical(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPotentiallyLogical(this);
		}
	}


}



class MergeDirectiveContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_mergeDirective;
    }

	MERGE_REFERENCE() {
	    return this.getToken(MetaEdGrammar.MERGE_REFERENCE, 0);
	};

	sourcePropertyPath() {
	    return this.getTypedRuleContext(SourcePropertyPathContext,0);
	};

	WITH() {
	    return this.getToken(MetaEdGrammar.WITH, 0);
	};

	targetPropertyPath() {
	    return this.getTypedRuleContext(TargetPropertyPathContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMergeDirective(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMergeDirective(this);
		}
	}


}



class SourcePropertyPathContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sourcePropertyPath;
    }

	propertyPath() {
	    return this.getTypedRuleContext(PropertyPathContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSourcePropertyPath(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSourcePropertyPath(this);
		}
	}


}



class TargetPropertyPathContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_targetPropertyPath;
    }

	propertyPath() {
	    return this.getTypedRuleContext(PropertyPathContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterTargetPropertyPath(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitTargetPropertyPath(this);
		}
	}


}



class PropertyPathContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_propertyPath;
    }

	ID = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(MetaEdGrammar.ID);
	    } else {
	        return this.getToken(MetaEdGrammar.ID, i);
	    }
	};


	PERIOD = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(MetaEdGrammar.PERIOD);
	    } else {
	        return this.getToken(MetaEdGrammar.PERIOD, i);
	    }
	};


	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPropertyPath(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPropertyPath(this);
		}
	}


}



class Signed_intContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_signed_int;
    }

	UNSIGNED_INT() {
	    return this.getToken(MetaEdGrammar.UNSIGNED_INT, 0);
	};

	unaryOperator() {
	    return this.getTypedRuleContext(UnaryOperatorContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSigned_int(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSigned_int(this);
		}
	}


}



class UnaryOperatorContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_unaryOperator;
    }

	POS_SIGN() {
	    return this.getToken(MetaEdGrammar.POS_SIGN, 0);
	};

	NEG_SIGN() {
	    return this.getToken(MetaEdGrammar.NEG_SIGN, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterUnaryOperator(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitUnaryOperator(this);
		}
	}


}



class AbstractEntityNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_abstractEntityName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterAbstractEntityName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitAbstractEntityName(this);
		}
	}


}



class AssociationNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_associationName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterAssociationName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitAssociationName(this);
		}
	}


}



class BaseKeyNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_baseKeyName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterBaseKeyName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitBaseKeyName(this);
		}
	}


}



class BaseNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_baseName;
    }

	localBaseName() {
	    return this.getTypedRuleContext(LocalBaseNameContext,0);
	};

	baseNamespace() {
	    return this.getTypedRuleContext(BaseNamespaceContext,0);
	};

	PERIOD() {
	    return this.getToken(MetaEdGrammar.PERIOD, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterBaseName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitBaseName(this);
		}
	}


}



class BaseNamespaceContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_baseNamespace;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterBaseNamespace(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitBaseNamespace(this);
		}
	}


}



class ChoiceNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_choiceName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterChoiceName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitChoiceName(this);
		}
	}


}



class SharedDecimalNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedDecimalName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedDecimalName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedDecimalName(this);
		}
	}


}



class SharedIntegerNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedIntegerName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedIntegerName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedIntegerName(this);
		}
	}


}



class CommonNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_commonName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterCommonName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitCommonName(this);
		}
	}


}



class SharedShortNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedShortName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedShortName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedShortName(this);
		}
	}


}



class SharedStringNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedStringName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedStringName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedStringName(this);
		}
	}


}



class DescriptorNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_descriptorName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDescriptorName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDescriptorName(this);
		}
	}


}



class DomainNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_domainName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterDomainName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitDomainName(this);
		}
	}


}



class EntityNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_entityName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterEntityName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitEntityName(this);
		}
	}


}



class EnumerationNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_enumerationName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterEnumerationName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitEnumerationName(this);
		}
	}


}



class ExtendeeNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_extendeeName;
    }

	localExtendeeName() {
	    return this.getTypedRuleContext(LocalExtendeeNameContext,0);
	};

	extendeeNamespace() {
	    return this.getTypedRuleContext(ExtendeeNamespaceContext,0);
	};

	PERIOD() {
	    return this.getToken(MetaEdGrammar.PERIOD, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterExtendeeName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitExtendeeName(this);
		}
	}


}



class ExtendeeNamespaceContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_extendeeNamespace;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterExtendeeNamespace(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitExtendeeNamespace(this);
		}
	}


}



class InlineCommonNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_inlineCommonName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInlineCommonName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInlineCommonName(this);
		}
	}


}



class InterchangeNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_interchangeName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterInterchangeName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitInterchangeName(this);
		}
	}


}



class LocalBaseNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_localBaseName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterLocalBaseName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitLocalBaseName(this);
		}
	}


}



class LocalDomainItemNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_localDomainItemName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterLocalDomainItemName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitLocalDomainItemName(this);
		}
	}


}



class LocalExtendeeNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_localExtendeeName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterLocalExtendeeName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitLocalExtendeeName(this);
		}
	}


}



class LocalInterchangeItemNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_localInterchangeItemName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterLocalInterchangeItemName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitLocalInterchangeItemName(this);
		}
	}


}



class LocalPropertyNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_localPropertyName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterLocalPropertyName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitLocalPropertyName(this);
		}
	}


}



class LocalPropertyTypeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_localPropertyType;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterLocalPropertyType(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitLocalPropertyType(this);
		}
	}


}



class ParentDomainNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_parentDomainName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterParentDomainName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitParentDomainName(this);
		}
	}


}



class PropertyNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_propertyName;
    }

	localPropertyName() {
	    return this.getTypedRuleContext(LocalPropertyNameContext,0);
	};

	propertyNamespace() {
	    return this.getTypedRuleContext(PropertyNamespaceContext,0);
	};

	PERIOD() {
	    return this.getToken(MetaEdGrammar.PERIOD, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPropertyName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPropertyName(this);
		}
	}


}



class PropertyNamespaceContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_propertyNamespace;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterPropertyNamespace(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitPropertyNamespace(this);
		}
	}


}



class RoleNameNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_roleNameName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterRoleNameName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitRoleNameName(this);
		}
	}


}



class SharedPropertyNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedPropertyName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedPropertyName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedPropertyName(this);
		}
	}


}



class SharedPropertyTypeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_sharedPropertyType;
    }

	localPropertyType() {
	    return this.getTypedRuleContext(LocalPropertyTypeContext,0);
	};

	propertyNamespace() {
	    return this.getTypedRuleContext(PropertyNamespaceContext,0);
	};

	PERIOD() {
	    return this.getToken(MetaEdGrammar.PERIOD, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSharedPropertyType(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSharedPropertyType(this);
		}
	}


}



class ShortenToNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_shortenToName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterShortenToName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitShortenToName(this);
		}
	}


}



class SimplePropertyNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_simplePropertyName;
    }

	localPropertyName() {
	    return this.getTypedRuleContext(LocalPropertyNameContext,0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSimplePropertyName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSimplePropertyName(this);
		}
	}


}



class SubdomainNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_subdomainName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterSubdomainName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitSubdomainName(this);
		}
	}


}



class NamespaceNameContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_namespaceName;
    }

	ID() {
	    return this.getToken(MetaEdGrammar.ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterNamespaceName(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitNamespaceName(this);
		}
	}


}



class MetaEdIdContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = MetaEdGrammar.RULE_metaEdId;
    }

	METAED_ID() {
	    return this.getToken(MetaEdGrammar.METAED_ID, 0);
	};

	enterRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.enterMetaEdId(this);
		}
	}

	exitRule(listener) {
	    if(listener instanceof MetaEdGrammarListener ) {
	        listener.exitMetaEdId(this);
		}
	}


}




MetaEdGrammar.MetaEdContext = MetaEdContext; 
MetaEdGrammar.NamespaceContext = NamespaceContext; 
MetaEdGrammar.NamespaceTypeContext = NamespaceTypeContext; 
MetaEdGrammar.TopLevelEntityContext = TopLevelEntityContext; 
MetaEdGrammar.DeprecatedContext = DeprecatedContext; 
MetaEdGrammar.PropertyDeprecatedContext = PropertyDeprecatedContext; 
MetaEdGrammar.DocumentationContext = DocumentationContext; 
MetaEdGrammar.EnumerationItemDocumentationContext = EnumerationItemDocumentationContext; 
MetaEdGrammar.MapTypeDocumentationContext = MapTypeDocumentationContext; 
MetaEdGrammar.PropertyDocumentationContext = PropertyDocumentationContext; 
MetaEdGrammar.AbstractEntityContext = AbstractEntityContext; 
MetaEdGrammar.EntityConfigurationContext = EntityConfigurationContext; 
MetaEdGrammar.CascadeUpdateContext = CascadeUpdateContext; 
MetaEdGrammar.AssociationContext = AssociationContext; 
MetaEdGrammar.DefiningDomainEntityContext = DefiningDomainEntityContext; 
MetaEdGrammar.AssociationExtensionContext = AssociationExtensionContext; 
MetaEdGrammar.AssociationSubclassContext = AssociationSubclassContext; 
MetaEdGrammar.ChoiceContext = ChoiceContext; 
MetaEdGrammar.SharedDecimalContext = SharedDecimalContext; 
MetaEdGrammar.SharedIntegerContext = SharedIntegerContext; 
MetaEdGrammar.SharedShortContext = SharedShortContext; 
MetaEdGrammar.SharedStringContext = SharedStringContext; 
MetaEdGrammar.CommonContext = CommonContext; 
MetaEdGrammar.CommonExtensionContext = CommonExtensionContext; 
MetaEdGrammar.CommonSubclassContext = CommonSubclassContext; 
MetaEdGrammar.DescriptorContext = DescriptorContext; 
MetaEdGrammar.WithMapTypeContext = WithMapTypeContext; 
MetaEdGrammar.RequiredMapTypeContext = RequiredMapTypeContext; 
MetaEdGrammar.OptionalMapTypeContext = OptionalMapTypeContext; 
MetaEdGrammar.DomainContext = DomainContext; 
MetaEdGrammar.DomainItemContext = DomainItemContext; 
MetaEdGrammar.FooterDocumentationContext = FooterDocumentationContext; 
MetaEdGrammar.DomainEntityContext = DomainEntityContext; 
MetaEdGrammar.DomainEntityExtensionContext = DomainEntityExtensionContext; 
MetaEdGrammar.DomainEntitySubclassContext = DomainEntitySubclassContext; 
MetaEdGrammar.EnumerationContext = EnumerationContext; 
MetaEdGrammar.EnumerationItemContext = EnumerationItemContext; 
MetaEdGrammar.ShortDescriptionContext = ShortDescriptionContext; 
MetaEdGrammar.InlineCommonContext = InlineCommonContext; 
MetaEdGrammar.InterchangeContext = InterchangeContext; 
MetaEdGrammar.ExtendedDocumentationContext = ExtendedDocumentationContext; 
MetaEdGrammar.UseCaseDocumentationContext = UseCaseDocumentationContext; 
MetaEdGrammar.InterchangeComponentContext = InterchangeComponentContext; 
MetaEdGrammar.InterchangeElementContext = InterchangeElementContext; 
MetaEdGrammar.InterchangeIdentityContext = InterchangeIdentityContext; 
MetaEdGrammar.InterchangeExtensionContext = InterchangeExtensionContext; 
MetaEdGrammar.InterchangeExtensionComponentContext = InterchangeExtensionComponentContext; 
MetaEdGrammar.SubdomainContext = SubdomainContext; 
MetaEdGrammar.SubdomainPositionContext = SubdomainPositionContext; 
MetaEdGrammar.MinValueContext = MinValueContext; 
MetaEdGrammar.MaxValueContext = MaxValueContext; 
MetaEdGrammar.MinValueDecimalContext = MinValueDecimalContext; 
MetaEdGrammar.MaxValueDecimalContext = MaxValueDecimalContext; 
MetaEdGrammar.DecimalValueContext = DecimalValueContext; 
MetaEdGrammar.TotalDigitsContext = TotalDigitsContext; 
MetaEdGrammar.DecimalPlacesContext = DecimalPlacesContext; 
MetaEdGrammar.CommonExtensionOverrideContext = CommonExtensionOverrideContext; 
MetaEdGrammar.PropertyAnnotationContext = PropertyAnnotationContext; 
MetaEdGrammar.IdentityContext = IdentityContext; 
MetaEdGrammar.IdentityRenameContext = IdentityRenameContext; 
MetaEdGrammar.RequiredContext = RequiredContext; 
MetaEdGrammar.OptionalContext = OptionalContext; 
MetaEdGrammar.CollectionContext = CollectionContext; 
MetaEdGrammar.RequiredCollectionContext = RequiredCollectionContext; 
MetaEdGrammar.OptionalCollectionContext = OptionalCollectionContext; 
MetaEdGrammar.IsQueryableOnlyContext = IsQueryableOnlyContext; 
MetaEdGrammar.PropertyComponentsContext = PropertyComponentsContext; 
MetaEdGrammar.IsQueryableFieldContext = IsQueryableFieldContext; 
MetaEdGrammar.RoleNameContext = RoleNameContext; 
MetaEdGrammar.MinLengthContext = MinLengthContext; 
MetaEdGrammar.MaxLengthContext = MaxLengthContext; 
MetaEdGrammar.PropertyContext = PropertyContext; 
MetaEdGrammar.BooleanPropertyContext = BooleanPropertyContext; 
MetaEdGrammar.CurrencyPropertyContext = CurrencyPropertyContext; 
MetaEdGrammar.DatePropertyContext = DatePropertyContext; 
MetaEdGrammar.DatetimePropertyContext = DatetimePropertyContext; 
MetaEdGrammar.DecimalPropertyContext = DecimalPropertyContext; 
MetaEdGrammar.DescriptorPropertyContext = DescriptorPropertyContext; 
MetaEdGrammar.DurationPropertyContext = DurationPropertyContext; 
MetaEdGrammar.EnumerationPropertyContext = EnumerationPropertyContext; 
MetaEdGrammar.CommonPropertyContext = CommonPropertyContext; 
MetaEdGrammar.InlineCommonPropertyContext = InlineCommonPropertyContext; 
MetaEdGrammar.ChoicePropertyContext = ChoicePropertyContext; 
MetaEdGrammar.IntegerPropertyContext = IntegerPropertyContext; 
MetaEdGrammar.PercentPropertyContext = PercentPropertyContext; 
MetaEdGrammar.AssociationPropertyContext = AssociationPropertyContext; 
MetaEdGrammar.DomainEntityPropertyContext = DomainEntityPropertyContext; 
MetaEdGrammar.SharedDecimalPropertyContext = SharedDecimalPropertyContext; 
MetaEdGrammar.SharedIntegerPropertyContext = SharedIntegerPropertyContext; 
MetaEdGrammar.SharedShortPropertyContext = SharedShortPropertyContext; 
MetaEdGrammar.SharedStringPropertyContext = SharedStringPropertyContext; 
MetaEdGrammar.ShortPropertyContext = ShortPropertyContext; 
MetaEdGrammar.StringPropertyContext = StringPropertyContext; 
MetaEdGrammar.TimePropertyContext = TimePropertyContext; 
MetaEdGrammar.YearPropertyContext = YearPropertyContext; 
MetaEdGrammar.IsWeakReferenceContext = IsWeakReferenceContext; 
MetaEdGrammar.PotentiallyLogicalContext = PotentiallyLogicalContext; 
MetaEdGrammar.MergeDirectiveContext = MergeDirectiveContext; 
MetaEdGrammar.SourcePropertyPathContext = SourcePropertyPathContext; 
MetaEdGrammar.TargetPropertyPathContext = TargetPropertyPathContext; 
MetaEdGrammar.PropertyPathContext = PropertyPathContext; 
MetaEdGrammar.Signed_intContext = Signed_intContext; 
MetaEdGrammar.UnaryOperatorContext = UnaryOperatorContext; 
MetaEdGrammar.AbstractEntityNameContext = AbstractEntityNameContext; 
MetaEdGrammar.AssociationNameContext = AssociationNameContext; 
MetaEdGrammar.BaseKeyNameContext = BaseKeyNameContext; 
MetaEdGrammar.BaseNameContext = BaseNameContext; 
MetaEdGrammar.BaseNamespaceContext = BaseNamespaceContext; 
MetaEdGrammar.ChoiceNameContext = ChoiceNameContext; 
MetaEdGrammar.SharedDecimalNameContext = SharedDecimalNameContext; 
MetaEdGrammar.SharedIntegerNameContext = SharedIntegerNameContext; 
MetaEdGrammar.CommonNameContext = CommonNameContext; 
MetaEdGrammar.SharedShortNameContext = SharedShortNameContext; 
MetaEdGrammar.SharedStringNameContext = SharedStringNameContext; 
MetaEdGrammar.DescriptorNameContext = DescriptorNameContext; 
MetaEdGrammar.DomainNameContext = DomainNameContext; 
MetaEdGrammar.EntityNameContext = EntityNameContext; 
MetaEdGrammar.EnumerationNameContext = EnumerationNameContext; 
MetaEdGrammar.ExtendeeNameContext = ExtendeeNameContext; 
MetaEdGrammar.ExtendeeNamespaceContext = ExtendeeNamespaceContext; 
MetaEdGrammar.InlineCommonNameContext = InlineCommonNameContext; 
MetaEdGrammar.InterchangeNameContext = InterchangeNameContext; 
MetaEdGrammar.LocalBaseNameContext = LocalBaseNameContext; 
MetaEdGrammar.LocalDomainItemNameContext = LocalDomainItemNameContext; 
MetaEdGrammar.LocalExtendeeNameContext = LocalExtendeeNameContext; 
MetaEdGrammar.LocalInterchangeItemNameContext = LocalInterchangeItemNameContext; 
MetaEdGrammar.LocalPropertyNameContext = LocalPropertyNameContext; 
MetaEdGrammar.LocalPropertyTypeContext = LocalPropertyTypeContext; 
MetaEdGrammar.ParentDomainNameContext = ParentDomainNameContext; 
MetaEdGrammar.PropertyNameContext = PropertyNameContext; 
MetaEdGrammar.PropertyNamespaceContext = PropertyNamespaceContext; 
MetaEdGrammar.RoleNameNameContext = RoleNameNameContext; 
MetaEdGrammar.SharedPropertyNameContext = SharedPropertyNameContext; 
MetaEdGrammar.SharedPropertyTypeContext = SharedPropertyTypeContext; 
MetaEdGrammar.ShortenToNameContext = ShortenToNameContext; 
MetaEdGrammar.SimplePropertyNameContext = SimplePropertyNameContext; 
MetaEdGrammar.SubdomainNameContext = SubdomainNameContext; 
MetaEdGrammar.NamespaceNameContext = NamespaceNameContext; 
MetaEdGrammar.MetaEdIdContext = MetaEdIdContext; 
