// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when validating abstract entity is missing metaEdId for entity should have validation failures: when validating abstract entity is missing metaEdId for entity should have validation failures -> message 1`] = `"Abstract Entity AbstractEntityName is missing a MetaEdId value."`;

exports[`when validating abstract entity is missing metaEdId for entity should have validation failures: when validating abstract entity is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Abstract Entity",
}
`;

exports[`when validating association extension is missing metaEdId for entity should have validation failures: when validating association extension is missing metaEdId for entity should have validation failures -> message 1`] = `"Association Extension AssociationExtensionName is missing a MetaEdId value."`;

exports[`when validating association extension is missing metaEdId for entity should have validation failures: when validating association extension is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Association",
}
`;

exports[`when validating association is missing metaEdId for entity should have validation failures: when validating association is missing metaEdId for entity should have validation failures -> message 1`] = `"Association AssociationName is missing a MetaEdId value."`;

exports[`when validating association is missing metaEdId for entity should have validation failures: when validating association is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Association",
}
`;

exports[`when validating association subclass is missing metaEdId for entity should have validation failures: when validating association subclass is missing metaEdId for entity should have validation failures -> message 1`] = `"Association Subclass AssociationSubclassName is missing a MetaEdId value."`;

exports[`when validating association subclass is missing metaEdId for entity should have validation failures: when validating association subclass is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Association",
}
`;

exports[`when validating choice is missing metaEdId for entity should have validation failures: when validating choice is missing metaEdId for entity should have validation failures -> message 1`] = `"Choice ChoiceName is missing a MetaEdId value."`;

exports[`when validating choice is missing metaEdId for entity should have validation failures: when validating choice is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Choice",
}
`;

exports[`when validating common extension is missing metaEdId for entity should have validation failures: when validating common extension is missing metaEdId for entity should have validation failures -> message 1`] = `"Common Extension CommonExtensionName is missing a MetaEdId value."`;

exports[`when validating common extension is missing metaEdId for entity should have validation failures: when validating common extension is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Common",
}
`;

exports[`when validating common is missing metaEdId for entity should have validation failures: when validating common is missing metaEdId for entity should have validation failures -> message 1`] = `"Common CommonName is missing a MetaEdId value."`;

exports[`when validating common is missing metaEdId for entity should have validation failures: when validating common is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Common",
}
`;

exports[`when validating descriptor is missing metaEdId for entity should have validation failures: when validating descriptor is missing metaEdId for entity should have validation failures -> message 1`] = `"Descriptor DescriptorName is missing a MetaEdId value."`;

exports[`when validating descriptor is missing metaEdId for entity should have validation failures: when validating descriptor is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Descriptor",
}
`;

exports[`when validating domain entity extension is missing metaEdId for entity should have validation failures: when validating domain entity extension is missing metaEdId for entity should have validation failures -> message 1`] = `"Domain Entity Extension DomainEntityExtensionName is missing a MetaEdId value."`;

exports[`when validating domain entity extension is missing metaEdId for entity should have validation failures: when validating domain entity extension is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Domain Entity",
}
`;

exports[`when validating domain entity is missing metaEdId for entity should have validation failures: when validating domain entity is missing metaEdId for entity should have validation failures -> message 1`] = `"Domain Entity DomainEntityName is missing a MetaEdId value."`;

exports[`when validating domain entity is missing metaEdId for entity should have validation failures: when validating domain entity is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Domain Entity",
}
`;

exports[`when validating domain entity subclass is missing metaEdId for entity should have validation failures: when validating domain entity subclass is missing metaEdId for entity should have validation failures -> message 1`] = `"Domain Entity Subclass DomainEntitySubclassName is missing a MetaEdId value."`;

exports[`when validating domain entity subclass is missing metaEdId for entity should have validation failures: when validating domain entity subclass is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Domain Entity",
}
`;

exports[`when validating domain is missing metaEdId for entity should have validation failures: when validating domain is missing metaEdId for entity should have validation failures -> message 1`] = `"Domain DomainName is missing a MetaEdId value."`;

exports[`when validating domain is missing metaEdId for entity should have validation failures: when validating domain is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Domain",
}
`;

exports[`when validating enumeration is missing metaEdId for entity should have validation failures: when validating enumeration is missing metaEdId for entity should have validation failures -> message 1`] = `"Enumeration EnumerationName is missing a MetaEdId value."`;

exports[`when validating enumeration is missing metaEdId for entity should have validation failures: when validating enumeration is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Enumeration",
}
`;

exports[`when validating inline common is missing metaEdId for entity should have validation failures: when validating inline common is missing metaEdId for entity should have validation failures -> message 1`] = `"Inline Common InlineCommonName is missing a MetaEdId value."`;

exports[`when validating inline common is missing metaEdId for entity should have validation failures: when validating inline common is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Inline Common",
}
`;

exports[`when validating interchange extension is missing metaEdId for entity should have validation failures: when validating interchange extension is missing metaEdId for entity should have validation failures -> message 1`] = `"Interchange Extension InterchangeExtensionName is missing a MetaEdId value."`;

exports[`when validating interchange extension is missing metaEdId for entity should have validation failures: when validating interchange extension is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Interchange",
}
`;

exports[`when validating interchange is missing metaEdId for entity should have validation failures: when validating interchange is missing metaEdId for entity should have validation failures -> message 1`] = `"Interchange InterchangeName is missing a MetaEdId value."`;

exports[`when validating interchange is missing metaEdId for entity should have validation failures: when validating interchange is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Interchange",
}
`;

exports[`when validating map type enumeration is missing metaEdId for entity should have validation failures: when validating map type enumeration is missing metaEdId for entity should have validation failures -> message 1`] = `"Descriptor DescriptorName is missing a MetaEdId value."`;

exports[`when validating map type enumeration is missing metaEdId for entity should have validation failures: when validating map type enumeration is missing metaEdId for entity should have validation failures -> message 2`] = `"Map Type Enumeration DescriptorNameMap is missing a MetaEdId value."`;

exports[`when validating map type enumeration is missing metaEdId for entity should have validation failures: when validating map type enumeration is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Descriptor",
}
`;

exports[`when validating map type enumeration is missing metaEdId for entity should have validation failures: when validating map type enumeration is missing metaEdId for entity should have validation failures -> sourceMap 2`] = `
Object {
  "column": 4,
  "line": 5,
  "tokenText": "with map type",
}
`;

exports[`when validating school year enumeration is missing metaEdId for entity should have validation failures: when validating school year enumeration is missing metaEdId for entity should have validation failures -> message 1`] = `"School Year Enumeration SchoolYear is missing a MetaEdId value."`;

exports[`when validating school year enumeration is missing metaEdId for entity should have validation failures: when validating school year enumeration is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 14,
  "line": 2,
  "tokenText": "SchoolYear",
}
`;

exports[`when validating shared decimal is missing metaEdId for entity should have validation failures: when validating shared decimal is missing metaEdId for entity should have validation failures -> message 1`] = `"Shared Decimal SharedDecimalName is missing a MetaEdId value."`;

exports[`when validating shared decimal is missing metaEdId for entity should have validation failures: when validating shared decimal is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Shared Decimal",
}
`;

exports[`when validating shared integer is missing metaEdId for entity should have validation failures: when validating shared integer is missing metaEdId for entity should have validation failures -> message 1`] = `"Shared Integer SharedIntegerName is missing a MetaEdId value."`;

exports[`when validating shared integer is missing metaEdId for entity should have validation failures: when validating shared integer is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Shared Integer",
}
`;

exports[`when validating shared short is missing metaEdId for entity should have validation failures: when validating shared short is missing metaEdId for entity should have validation failures -> message 1`] = `"Shared Integer SharedShortName is missing a MetaEdId value."`;

exports[`when validating shared short is missing metaEdId for entity should have validation failures: when validating shared short is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Shared Short",
}
`;

exports[`when validating shared string is missing metaEdId for entity should have validation failures: when validating shared string is missing metaEdId for entity should have validation failures -> message 1`] = `"Shared String SharedStringName is missing a MetaEdId value."`;

exports[`when validating shared string is missing metaEdId for entity should have validation failures: when validating shared string is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Shared String",
}
`;

exports[`when validating subdomain is missing metaEdId for entity should have validation failures: when validating subdomain is missing metaEdId for entity should have validation failures -> message 1`] = `"Subdomain SubdomainName is missing a MetaEdId value."`;

exports[`when validating subdomain is missing metaEdId for entity should have validation failures: when validating subdomain is missing metaEdId for entity should have validation failures -> sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Subdomain",
}
`;
