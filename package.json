{
  "name": "metaed-js",
  "description": "MetaEd for JavaScript",
  "private": true,
  "devDependencies": {
    "@babel/core": "^7.21.3",
    "@babel/preset-env": "^7.20.2",
    "@octokit/core": "^4.1.0",
    "@types/jest": "^29.4.0",
    "@types/node": "17.0.45",
    "@typescript-eslint/eslint-plugin": "5.40.1",
    "@typescript-eslint/parser": "5.40.1",
    "babel-jest": "^29.5.0",
    "babel-plugin-transform-import-meta": "^2.2.0",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "esbuild": "^0.16.10",
    "eslint": "8.26.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-config-typescript": "3.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jasmine": "^4.1.3",
    "eslint-plugin-json": "3.1.0",
    "eslint-plugin-prettier": "4.2.1",
    "jest": "^29.4.3",
    "jest-junit": "^13.2.0",
    "jsinspect": "^0.12.7",
    "lerna": "^6.0.1",
    "pgtools": "^0.3.2",
    "prettier": "2.7.1",
    "rimraf": "^2.7.1",
    "ts-jest": "^29.0.5",
    "ts-node": "8.10.2",
    "typescript": "4.9.5"
  },
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "antlr-gen": "java -jar ./antlr/antlr-4.12.0-complete.jar -Dlanguage=TypeScript -o ./packages/metaed-core/src/grammar/gen ./packages/metaed-core/src/grammar/language/BaseLexer.g4 ./packages/metaed-core/src/grammar/language/MetaEdGrammar.g4",
    "metaed:build": "node ./packages/metaed-console/dist/index.js",
    "metaed:deploy": "node ./packages/metaed-odsapi-deploy/dist/index.js",
    "build": "lerna run build --stream",
    "build:clean": "lerna run build:clean --stream",
    "test": "npm run build:clean && npm run test:lint && npm run test:unit",
    "test:coverage": "rimraf coverage/ && jest --coverage",
    "test:lint": "npm run test:lint:ts && npm run test:lint:eslint",
    "test:lint:eslint": "eslint --max-warnings 0 --ext .js,.ts .",
    "test:lint:ts": "tsc -p . --noEmit",
    "test:unit": "npm run test:unit:unified && npm run test:unit:ods && npm run test:unit:everything-else",
    "test:unit:ci": "npm run test:unit:unified -- --ci  --config ./jest.ci-config.js && npm run test:unit:ods:ci && npm run test:unit:everything-else -- --ci  --config ./jest.ci-config.js",
    "test:unit:unified": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest packages/metaed-plugin-edfi-unified",
    "test:unit:ods": "npm run test:unit:ods:changequery:all && npm run test:unit:ods:postgresql:non-db && npm run test:unit:ods:ro:all && npm run test:unit:ods:relational && npm run test:unit:ods:sqlserver:all && npm run test:unit:odsapi",
    "test:unit:ods:ci": "npm run test:unit:ods:changequery:all -- --ci  --config ./jest.ci-config.js && npm run test:unit:ods:postgresql:non-db -- --ci  --config ./jest.ci-config.js && npm run test:unit:ods:ro:all -- --ci  --config ./jest.ci-config.js && npm run test:unit:ods:relational -- --ci  --config ./jest.ci-config.js && npm run test:unit:ods:sqlserver:non-db -- --ci  --config ./jest.ci-config.js && npm run test:unit:odsapi -- --ci  --config ./jest.ci-config.js",
    "test:unit:ods:changequery:all": "npm run test:unit:ods:changequery && npm run test:unit:ods:changequery:postgresql && npm run test:unit:ods:changequery:sqlserver",
    "test:unit:ods:changequery": "cross-env NODE_OPTIONS=--max-old-space-size=4096 npx jest packages/metaed-plugin-edfi-ods-changequery",
    "test:unit:ods:changequery:postgresql": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest \"packages/metaed-plugin-edfi-ods-changequery-postgresql\"",
    "test:unit:ods:changequery:sqlserver": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest \"packages/metaed-plugin-edfi-ods-changequery-sqlserver\"",
    "test:unit:ods:postgresql:db": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest packages/metaed-plugin-edfi-ods-postgresql/test/database -i",
    "test:unit:ods:postgresql:non-db": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest \"packages/metaed-plugin-edfi-ods-postgresql/test/(enhancer|generator|integration)\"",
    "test:unit:ods:postgresql:setup-db": "npx dropdbjs metaed_integration_tests --password=docker && npx createdbjs metaed_integration_tests --password=docker && psql -d metaed_integration_tests -U postgres",
    "test:unit:ods:ro:all": "npm run test:unit:ods:ro && npm run test:unit:ods:ro:postgresql && npm run test:unit:ods:ro:sqlserver",
    "test:unit:ods:ro": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest packages/metaed-plugin-edfi-ods-recordownership",
    "test:unit:ods:ro:postgresql": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest \"packages/metaed-plugin-edfi-ods-recordownership-postgresql\"",
    "test:unit:ods:ro:sqlserver": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest \"packages/metaed-plugin-edfi-ods-recordownership-sqlserver\"",
    "test:unit:ods:relational": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest packages/metaed-plugin-edfi-ods-relational",
    "test:unit:ods:sqlserver:all": "npm run test:unit:ods:sqlserver && npm run test:unit:ods:sqlserver:db && npm run test:unit:ods:sqlserver:non-db",
    "test:unit:ods:sqlserver": "cross-env NODE_OPTIONS=--max-old-space-size=4096 ts-node packages/metaed-plugin-edfi-ods-sqlserver/test/database/InitializeOdsIntegrationTestDatabase.ts && npx jest packages/metaed-plugin-edfi-ods-sqlserver -i",
    "test:unit:ods:sqlserver:db": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest packages/metaed-plugin-edfi-ods-sqlserver/test/database -i",
    "test:unit:ods:sqlserver:non-db": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest \"packages/metaed-plugin-edfi-ods-sqlserver/test/(enhancer|generator|integration|diminisher)\"",
    "test:unit:odsapi": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest packages/metaed-plugin-edfi-odsapi",
    "test:unit:everything-else": "cross-env NODE_OPTIONS=--max-old-space-size=4096 jest \"packages/(?!metaed-plugin-edfi-ods|metaed-plugin-edfi-unified)\"",
    "test:unit:debug": "node --inspect-brk ./node_modules/.bin/jest --runInBand",
    "test:code-duplication": "npx jsinspect -t 50 --ignore \"test|gen|dist\" ./packages",
    "version": "npm install && git stage package-lock.json"
  }
}
