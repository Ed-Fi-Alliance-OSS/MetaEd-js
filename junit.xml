<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="5901" failures="0" errors="0" time="92.285">
  <testsuite name="packages\metaed-core\test\integration\FileSystemFileNameLoader.test.ts" errors="0" failures="0" skipped="3" timestamp="2025-07-11T22:27:29" time="9.572" tests="3">
    <testcase classname="When a single file" name="Should load the file contents" time="0">
      <skipped/>
    </testcase>
    <testcase classname="When an empty project" name="Should load the file contents" time="0">
      <skipped/>
    </testcase>
    <testcase classname="When multiple files" name="Should load the file contents" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\OpenApiExtensionFragmentEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="17.249" tests="20">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct openApiExtensionResourceFragments" time="0.018">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct openApiExtensionDescriptorFragments" time="0.002">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct openApiExtensionResourceFragments" time="0.008">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct openApiExtensionDescriptorFragments" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct openApiExtensionResourceFragments" time="0.034">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct openApiExtensionDescriptorFragments" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct openApiExtensionResourceFragments" time="0.012">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct openApiExtensionDescriptorFragments" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct openApiExtensionResourceFragments" time="0.005">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct openApiExtensionDescriptorFragments" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct openApiExtensionResourceFragments" time="0.01">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct openApiExtensionDescriptorFragments" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be a correct schema for core namespace" time="0.002">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be a correct ext for extension namespace that references core schema" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension references domain entity collection in different namespace" name="should be a correct ext for extension namespace that references core schema" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension has a simple string collection" name="should be a correct ext for extension with simple collection" time="0.001">
    </testcase>
    <testcase classname="when domain entity in extension has a DS common collection" name="should be a correct ext for extension with DS common collection" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass in extension has a DS common collection" name="should be a correct ext for extension with DS common collection" time="0.001">
    </testcase>
    <testcase classname="when domain entity superclass in DS has a common collection" name="should be a correct ext for extension with DS common collection" time="0.001">
    </testcase>
    <testcase classname="when building an abstract domain entity" name="should be correct openApiExtensionResourceFragments" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\integration\ApiSchemaAuthoritativeCompare_v7_3.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:30" time="26.973" tests="4">
    <testcase classname="when generating ApiSchema for data standard 5.2 and TPDM 1.1 for ODS/API 7.3" name="should have no DS file differences" time="0.534">
    </testcase>
    <testcase classname="when generating ApiSchema for data standard 5.2 and TPDM 1.1 for ODS/API 7.3" name="should have no TPDM file differences" time="0.641">
    </testcase>
    <testcase classname="when generating ApiSchema for data standard 5.2 and Sample 1.1 for ODS/API 7.3" name="should have no Sample file differences" time="0.369">
    </testcase>
    <testcase classname="when generating ApiSchema for data standard 5.2 and Homograph 1.0 for ODS/API 7.3" name="should have no Homograph file differences" time="0.358">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\OpenApiCoreSpecificationEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:57" time="1.479" tests="7">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct OpenApiSpecification" time="0.012">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct OpenApiSpecification" time="0.007">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct OpenApiSpecification" time="0.02">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct OpenApiSpecification" time="0.015">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct OpenApiSpecification" time="0.009">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct OpenApiSpecification" time="0.004">
    </testcase>
    <testcase classname="when building an abstract domain entity" name="should be correct OpenApiSpecification" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\integration\OdsAuthoritativeCompare_v5.0.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:30" time="29.745" tests="12">
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have correct table order" time="0.034">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have correct foreign key order" time="0.006">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have tables file with no differences" time="0.43">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have foreign keys file with no differences" time="0.236">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have extended properties file with no differences" time="0.256">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have school years file with no differences" time="0.259">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have id index file with no differences" time="0.2">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have core with no differences" time="0.372">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have extension with no differences" time="0.244">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have core with no differences" time="0.54">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0" name="should have extension with no differences" time="0.287">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\SimpleTypeMergeCompare_v7_2.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:30" time="29.922" tests="6">
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.2" name="should have core with no differences" time="0.264">
    </testcase>
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.2" name="should have extension with no differences" time="0.183">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.2" name="should have core with no differences" time="0.295">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.2" name="should have extension with no differences" time="0.341">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.2" name="should have core with no differences" time="0.589">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.2" name="should have extension with no differences" time="0.319">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\OdsAuthoritativeCompare_v5_AllianceMode.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:39" time="22.981" tests="10">
    <testcase classname="when generating ods and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance Mode" name="should have correct table order" time="0.014">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance Mode" name="should have correct foreign key order" time="0.004">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance Mode" name="should have correct row order" time="0.002">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance Mode" name="should have core with no differences" time="0.452">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance mode" name="should have core with no differences" time="0.283">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance mode" name="should have extension with no differences" time="0.239">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance mode" name="should have core with no differences" time="0.342">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2 authoritative artifacts for ODS/API 5.0 in Alliance mode" name="should have extension with no differences" time="0.397">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.3b authoritative artifacts for ODS/API 5.3 in Alliance mode" name="should have core with no differences" time="0.334">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.3b authoritative artifacts for ODS/API 5.3 in Alliance mode" name="should have extension with no differences" time="0.195">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\OdsAuthoritativeCompare_v7_1.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:30" time="32.807" tests="9">
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have correct table order" time="0.015">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have correct foreign key order" time="0.005">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have correct row order" time="0.002">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have core with no differences" time="0.227">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have core with no differences" time="0.35">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have core with no differences" time="0.278">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have extension with no differences" time="0.357">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have core with no differences" time="0.203">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have extension with no differences" time="0.326">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\integration\OdsAuthoritativeCompare_v7.3.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="35.516" tests="11">
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have correct table order" time="0.015">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have correct foreign key order" time="0.005">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.175">
    </testcase>
    <testcase classname="when generating CreateEducationOrganizationAuthorizationIndexes and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.836">
    </testcase>
    <testcase classname="when generating UpdateEducationOrganizationAuthorizationIndexes and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.522">
    </testcase>
    <testcase classname="when generating AggregateIdColumns and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.427">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.42">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have extension with no differences" time="0.481">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.387">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have extension with no differences" time="0.366">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\integration\DeleteTrackingTriggerAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:30" time="36.78" tests="9">
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.501">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no core file differences" time="0.28">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no extension file differences" time="0.245">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.281">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.293">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.379">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no differences" time="0.347">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.445">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.369">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\OdsAuthoritativeCompare_v7_2.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:47" time="19.812" tests="9">
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have correct table order" time="0.004">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have correct foreign key order" time="0.004">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have core with no differences" time="0.219">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have core with no differences" time="0.378">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have core with no differences" time="0.266">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have extension with no differences" time="0.37">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have core with no differences" time="0.35">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2" name="should have extension with no differences" time="0.309">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\CreateTriggerUpdateChangeVersionAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="37.481" tests="8">
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.347">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no core file differences" time="0.183">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no extension file differences" time="0.251">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.326">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.41">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.381">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no core file differences" time="0.248">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no extension file differences" time="0.287">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\integration\CreateTrackedDeleteTablesAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="37.795" tests="7">
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0.0 authoritative artifacts" name="should have no differences" time="0.46">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no core file differences" time="0.185">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no extension file differences" time="0.382">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.382">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.308">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.206">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no differences" time="0.296">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\DeleteTrackingTriggerAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="37.879" tests="8">
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.269">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no core file differences" time="0.223">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no extension file differences" time="0.211">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.387">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.368">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.226">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no core file differences" time="0.301">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no extension file differences" time="0.218">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\CreateTrackedDeleteTablesAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="38.151" tests="8">
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.24">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no core file differences" time="0.205">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no extension file differences" time="0.186">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.448">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.266">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.228">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no core file differences" time="0.19">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no extension file differences" time="0.28">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\integration\CreateTriggerUpdateChangeVersionAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="43.61" tests="9">
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.687">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no core file differences" time="0.713">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts" name="should have no extension file differences" time="0.303">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.398">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.344">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.384">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no differences" time="0.353">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0 authoritative artifacts in Alliance mode" name="should have no core file differences" time="0.225">
    </testcase>
    <testcase classname="when generating change event scripts with simple extensions and comparing to ODS/API 6.0 authoritative artifacts in Alliance mode" name="should have no extension file differences" time="0.263">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\integration\OdsAuthoritativeCompare_v7.1.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:58" time="15.142" tests="13">
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have correct table order" time="0.006">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have correct foreign key order" time="0.005">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have tables file with no differences" time="0.23">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have foreign keys file with no differences" time="0.282">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have extended properties file with no differences" time="0.302">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have school years file with no differences" time="0.354">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have id index file with no differences" time="0.303">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have educationOrganizationAuthorizationIndexes file with no differences" time="0.257">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have core with no differences" time="0.378">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have extension with no differences" time="0.256">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have core with no differences" time="0.31">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1.0" name="should have extension with no differences" time="0.316">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\integration\CreateChangesSchemaAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:00" time="14.214" tests="3">
    <testcase classname="when generating change event schema and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.276">
    </testcase>
    <testcase classname="when generating change event schema and comparing to ODS/API 5.0 authoritative artifacts in Alliance Mode" name="should have no differences" time="0.249">
    </testcase>
    <testcase classname="when generating change event schema and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no differences" time="0.318">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\integration\CreateChangesVersionSequenceAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:59" time="14.857" tests="3">
    <testcase classname="when generating change queries version sequence and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.41">
    </testcase>
    <testcase classname="when generating change queries version sequence and comparing to ODS/API 5.0 authoritative artifacts in Alliance Mode" name="should have no differences" time="0.269">
    </testcase>
    <testcase classname="when generating change queries version sequence and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no differences" time="0.347">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\integration\SimpleTypeMergeCompare_v7_2.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:02" time="14.51" tests="6">
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.2" name="should have core with no differences" time="0.336">
    </testcase>
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.2" name="should have extension with no differences" time="0.269">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.2" name="should have core with no differences" time="0.325">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.2" name="should have extension with no differences" time="0.363">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.2" name="should have core with no differences" time="0.39">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.2" name="should have extension with no differences" time="0.26">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\integration\OdsAuthoritativeCompare_v7.2.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:03" time="15.894" tests="13">
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have correct table order" time="0.006">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have correct foreign key order" time="0.005">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have tables file with no differences" time="0.336">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have foreign keys file with no differences" time="0.218">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have extended properties file with no differences" time="0.278">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have school years file with no differences" time="0.251">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have id index file with no differences" time="0.281">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have educationOrganizationAuthorizationIndexes file with no differences" time="0.373">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have core with no differences" time="0.393">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have extension with no differences" time="0.368">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have core with no differences" time="0.315">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.2.0" name="should have extension with no differences" time="0.319">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\integration\OdsAuthoritativeCompare_v5.0_AllianceMode.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:05" time="13.962" tests="12">
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have correct table order" time="0.006">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have correct foreign key order" time="0.006">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have tables file with no differences" time="0.432">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have foreign keys file with no differences" time="0.465">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have extended properties file with no differences" time="0.455">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have school years file with no differences" time="0.304">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have id index file with no differences" time="0.313">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance Mode" name="should have core with no differences" time="0.426">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance Mode" name="should have extension with no differences" time="0.226">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have core with no differences" time="0.325">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0.0 in Alliance mode" name="should have extension with no differences" time="0.256">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\OdsAuthoritativeCompare_v7_3.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="49.713" tests="15">
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have correct table order" time="0.016">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have correct foreign key order" time="0.016">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.228">
    </testcase>
    <testcase classname="when generating CreateEducationOrganizationAuthorizationIndexes and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.268">
    </testcase>
    <testcase classname="when generating UpdateEducationOrganizationAuthorizationIndexes and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.276">
    </testcase>
    <testcase classname="when generating AggregateIdColumns and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.297">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.336">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have extension with no differences" time="0.401">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.377">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have extension with no differences" time="0.24">
    </testcase>
    <testcase classname="when generating ods with TPDM extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.494">
    </testcase>
    <testcase classname="when generating ods with TPDM extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have extension with no differences" time="0.331">
    </testcase>
    <testcase classname="when generating ods foreign keys file with TPDM extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have core with no differences" time="0.28">
    </testcase>
    <testcase classname="when generating ods foreign keys file with TPDM extensions and comparing it to data standard 5.2 authoritative artifacts for ODS/API 7.3" name="should have extension with no differences" time="0.305">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\integration\CreateIndirectUpdateCascadeTriggerAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:08" time="12.24" tests="2">
    <testcase classname="when generating change event scripts and comparing to ODS/API 7.3 authoritative artifacts" name="should have no differences" time="0.232">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 7.3 authoritative artifacts in Alliance mode" name="should have no differences" time="0.356">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\integration\SimpleTypeMergeCompare_v7_1.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:06" time="13.809" tests="6">
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.1" name="should have core with no differences" time="0.467">
    </testcase>
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.1" name="should have extension with no differences" time="0.204">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.1" name="should have core with no differences" time="0.392">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.1" name="should have extension with no differences" time="0.325">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.1" name="should have core with no differences" time="0.295">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.1" name="should have extension with no differences" time="0.184">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\CreateChangesVersionSequenceAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:07" time="13.794" tests="3">
    <testcase classname="when generating change queries version sequence and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.538">
    </testcase>
    <testcase classname="when generating change queries version sequence and comparing to ODS/API 5.0 authoritative artifacts in Alliance Mode" name="should have no differences" time="0.31">
    </testcase>
    <testcase classname="when generating change queries version sequence and comparing to ODS/API 6.0 authoritative artifacts" name="should have no differences" time="0.178">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\OdsAuthoritativeCompare_v5.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:08" time="13.06" tests="8">
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have correct table order" time="0.008">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have correct foreign key order" time="0.005">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have correct row order" time="0.001">
    </testcase>
    <testcase classname="when generating ods and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have core with no differences" time="0.388">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have core with no differences" time="0.308">
    </testcase>
    <testcase classname="when generating ods with simple extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have extension with no differences" time="0.259">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have core with no differences" time="0.283">
    </testcase>
    <testcase classname="when generating ods with student transcript extensions and comparing it to data standard 3.2c authoritative artifacts for ODS/API 5.0" name="should have extension with no differences" time="0.24">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\SimpleTypeMergeCompare_v7_1.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:07" time="14.385" tests="6">
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.1" name="should have core with no differences" time="0.437">
    </testcase>
    <testcase classname="when generating ods tables file with simple merges for ODS/API 7.1" name="should have extension with no differences" time="0.318">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.1" name="should have core with no differences" time="0.256">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v7.1" name="should have extension with no differences" time="0.317">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.1" name="should have core with no differences" time="0.32">
    </testcase>
    <testcase classname="when generating EducationOrganizationAuthorizationIndexes with simple merges for ODS/API v7.1" name="should have extension with no differences" time="0.377">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\integration\DataStandardIntegration.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:07" time="15.811" tests="63">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct allJsonPathsMapping" time="0.007">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct allJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct allJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for DomainEntityName" time="0.004">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for Session" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct allJsonPathsMapping" time="0.012">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct allJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct allJsonPathsMapping" time="0.017">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct allJsonPathsMapping" time="0.006">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building a descriptor" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building a school year enumeration" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building a schema for studentEducationOrganizationAssociation" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct allJsonPathsMapping" time="0.006">
    </testcase>
    <testcase classname="when building a domain entity referencing another using a shortenTo directive" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with role named and pluralized inline common" name="should be correct allJsonPathsMapping with &quot;availableCreditConversion&quot; not pluralized" time="0.005">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should be correct allJsonPathsMapping" time="0.013">
    </testcase>
    <testcase classname="when building simple domain entity extension" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct allJsonPathsMapping for AssessmentAdministrationParticipation" time="0.017">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct allJsonPathsMapping for AssessmentAdministration" time="0.002">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct allJsonPathsMapping for StudentAssessmentRegistrationBatteryPartAssociation" time="0.002">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct allJsonPathsMapping for StaffEducationOrganizationAssignmentAssociation" time="0.002">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct allJsonPathsMapping for StaffEducationOrganizationEmploymentAssociation" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct JSON path mappings for StudentAssessment" time="0.005">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct equality constraints for StudentAssessment" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct JSON path mappings for Session" time="0.003">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct equality constraints for Session" time="0">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct JSON path mappings for StudentCompetencyObjective" time="0.004">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct equality constraints for StudentCompetencyObjective" time="0">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct JSON path mappings for StudentLearningObjective" time="0.003">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.3 with data standard 3.3b" name="should create the correct equality constraints for StudentLearningObjective" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct JSON path mappings for StudentAssessment" time="0.004">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct equality constraints for StudentAssessment" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct JSON path mappings for Session" time="0.002">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct equality constraints for Session" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct JSON path mappings for StudentCompetencyObjective" time="0.004">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct equality constraints for StudentCompetencyObjective" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct JSON path mappings for StudentLearningObjective" time="0.003">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 5.4 with data standard 3.3b" name="should create the correct equality constraints for StudentLearningObjective" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 6.1 with data standard 4.0" name="should create the correct JSON path mappings for StudentAssessment" time="0.004">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 6.1 with data standard 4.0" name="should create the correct equality constraints for StudentAssessment" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 6.1 with data standard 4.0" name="should create the correct JSON path mappings for Session" time="0.002">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 6.1 with data standard 4.0" name="should create the correct equality constraints for Session" time="0">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 6.1 with data standard 4.0" name="should create the correct JSON path mappings for StudentCompetencyObjective" time="0.004">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 6.1 with data standard 4.0" name="should create the correct equality constraints for StudentCompetencyObjective" time="0">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 7.0 with data standard 5.0" name="should create the correct JSON path mappings for StudentAssessment" time="0.007">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 7.0 with data standard 5.0" name="should create the correct equality constraints for StudentAssessment" time="0.002">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 7.0 with data standard 5.0" name="should create the correct JSON path mappings for Session" time="0.005">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 7.0 with data standard 5.0" name="should create the correct equality constraints for Session" time="0.001">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 7.0 with data standard 5.0" name="should create the correct JSON path mappings for StudentCompetencyObjective" time="0.005">
    </testcase>
    <testcase classname="when generating api schema targeting tech version 7.0 with data standard 5.0" name="should create the correct equality constraints for StudentCompetencyObjective" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\integration\AddColumnChangeVersionAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:13" time="9.926" tests="3">
    <testcase classname="when generating add column changeversion and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.255">
    </testcase>
    <testcase classname="when generating add column changeversion with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no core file differences" time="0.364">
    </testcase>
    <testcase classname="when generating add column changeversion with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no extension file differences" time="0.319">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\AddIndexChangeVersionAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:14" time="10.184" tests="2">
    <testcase classname="when generating add index changeversion and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.354">
    </testcase>
    <testcase classname="when generating add index changeversion and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no differences" time="0.374">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\AddColumnChangeVersionAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:14" time="10.738" tests="3">
    <testcase classname="when generating add column changeversion and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.406">
    </testcase>
    <testcase classname="when generating add column changeversion with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no core file differences" time="0.309">
    </testcase>
    <testcase classname="when generating add column changeversion with simple extensions and comparing to ODS/API 6.0.0 authoritative artifacts" name="should have no extension file differences" time="0.276">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\CreateIndirectUpdateCascadeTriggerAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:14" time="11.707" tests="2">
    <testcase classname="when generating change event scripts and comparing to ODS/API 7.3 authoritative artifacts" name="should have no differences" time="0.426">
    </testcase>
    <testcase classname="when generating change event scripts and comparing to ODS/API 7.3 authoritative artifacts in Alliance mode" name="should have no differences" time="0.22">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\SimpleTypeMergeCompare_v5_AllianceMode.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:17" time="9.393" tests="4">
    <testcase classname="when generating ods tables file with simple merges for ODS/API 5.0 in Alliance mode" name="should have core with no differences" time="0.491">
    </testcase>
    <testcase classname="when generating ods tables file with simple merges for ODS/API 5.0 in Alliance mode" name="should have extension with no differences" time="0.365">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v5.0 in Alliance mode" name="should have core with no differences" time="0.215">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v5.0 in Alliance mode" name="should have extension with no differences" time="0.263">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\SimpleType.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:24" time="2.069" tests="38">
    <testcase classname="when generating xsd for domain entity in extension namespace with a simple type" name="should generate core domain entity" time="0.009">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with a simple type" name="should generate extension domain entity" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with a simple type" name="should generate extension domain entity string property" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with a simple type" name="should generate extension string type" time="0">
    </testcase>
    <testcase classname="when generating xsd for common string" name="should generate simple type entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common string" name="should generate correct type annotation" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common string" name="should generate correct documentation" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common string" name="should generate restriction of corrext xsd base type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common string" name="should generate correct min length" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common string" name="should generate correct max length" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate simple type entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate correct type annotation" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate correct documentation" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate restriction of correct xsd base type" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate restriction of correct total digits" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate restriction of correct decimal places" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate correct min value" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common decimal" name="should generate correct max value" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common integer" name="should generate simple type entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common integer" name="should generate correct type annotation" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common integer" name="should generate correct documentation" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common integer" name="should generate restriction of correct xsd base type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common integer" name="should generate correct min value" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common integer" name="should generate correct max value" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common short" name="should generate simple type entity" time="0.011">
    </testcase>
    <testcase classname="when generating xsd for common short" name="should generate correct type annotation" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for common short" name="should generate correct documentation" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common short" name="should generate restriction of correct xsd base type" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common short" name="should generate correct min value" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common short" name="should generate correct max value" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for shared simpel property in extension namespace with reference to core simple common type" name="should generate core shared string" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for shared simpel property in extension namespace with reference to core simple common type" name="should generate extension domain entity" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for shared simpel property in extension namespace with reference to core simple common type" name="should generate extension domain entity reference to core shared type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for renamed shared simple property in extension namespace with reference to core simple common type" name="should generate core shared string" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for renamed shared simple property in extension namespace with reference to core simple common type" name="should generate extension domain entity" time="0">
    </testcase>
    <testcase classname="when generating xsd for renamed shared simple property in extension namespace with reference to core simple common type" name="should generate extension domain entity reference to core shared type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for shared simple property in extension namespace with reference to extension simple common type" name="should generate extension shared string" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for shared simple property in extension namespace with reference to extension simple common type" name="should generate extension domain entity reference to core shared type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\Interchange.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:23" time="3.851" tests="26">
    <testcase classname="when generating xsd for domain entity in both namespaces sharing a simple type" name="should include core xsd" time="0.008">
    </testcase>
    <testcase classname="when generating xsd for domain entity in both namespaces sharing a simple type" name="should identity template" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for domain entity in both namespaces sharing a simple type" name="should have element" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a new domain entity" name="should include core xsd" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a new domain entity" name="should include extension xsd" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a new domain entity" name="should have element" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a new domain entity" name="should have core in extension interchange" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a new domain entity" name="should have extension element" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a new domain entity" name="should list core element before extensions" time="0.004">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a domain entity extension" name="should include core xsd" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a domain entity extension" name="should include extension xsd" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a domain entity extension" name="should have element" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a domain entity extension" name="should have extension element" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a domain entity extension" name="should list extension domain entity in same position as core" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with a domain entity extension" name="should have the same number of elements" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with an association extension" name="should include core xsd" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with an association extension" name="should include extension xsd" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with an association extension" name="should have element" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with an association extension" name="should have extension element" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with an association extension" name="should list extension domain entity in same position as core" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with an association extension" name="should have the same number of elements" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with extension descriptor" name="should include core descriptor interchange" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with extension descriptor" name="should have core descriptor" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with extension descriptor" name="should include extension descriptor interchange" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with extension descriptor" name="should have core descriptor in extension interchange" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for extension interchange with extension descriptor" name="should have extension descriptor" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\CommonTypeExtension.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:24" time="3.546" tests="4">
    <testcase classname="when generating xsd for common type extension in extension namespace based on core common type" name="should generate core common type" time="0.009">
    </testcase>
    <testcase classname="when generating xsd for common type extension in extension namespace based on core common type" name="should generate extension common type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common type extension in extension namespace based on core common type" name="should genrate extension common type as extending core common type" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common type extension in extension namespace based on core common type" name="should generate extension domain entity new property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-handbook\test\integration\EdFiDataHandbookAsExcelGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:22" time="5.787" tests="1">
    <testcase classname="when generating excel version of handbook" name="should generate excel sheet" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\Descriptor.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:26" time="1.505" tests="16">
    <testcase classname="when generating xsd for descriptor" name="should generate descriptor" time="0.005">
    </testcase>
    <testcase classname="when generating xsd for descriptor" name="should generate descriptor reference" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core descriptor" name="should generate core descriptor" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core descriptor" name="should generate core domain entity reference" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core descriptor" name="should generate extension domain entity" time="0">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core descriptor" name="should generate extension domain entity reference to core entity" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to extension descriptor" name="should generate extension descriptor" time="0.007">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to extension descriptor" name="should generate extension domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to extension descriptor" name="should generate extension domain entity reference to extension descriptor" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to extension descriptor" name="should generate extension domain entity reference to core entity" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for descriptor in extension namespace with reference to core entity" name="should generate core domain entity" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for descriptor in extension namespace with reference to core entity" name="should generate extension descriptor" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for descriptor in extension namespace with reference to core entity" name="should generate extension domain entity reference to extension descriptor" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for descriptor in extension namespace with reference to core entity" name="should generate extension domain entity reference to core entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for descriptor in extension namespace with reference to core entity" name="should generate extension domain entity reference to core entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for descriptor in extension namespace with reference to core entity" name="should generate extension domain entity reference to core entity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\XsdAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:18" time="9.953" tests="8">
    <testcase classname="when generating xsd and comparing it to data standard 3.1 authoritative artifacts" name="should have core with no differences" time="0.296">
    </testcase>
    <testcase classname="when generating xsd and comparing it to data standard 3.1 authoritative artifacts" name="should have schema annotation with no differences" time="0.411">
    </testcase>
    <testcase classname="when generating xsd and comparing it to data standard 3.1 authoritative artifacts" name="should have complex types in the correct order" time="0.003">
    </testcase>
    <testcase classname="when generating xsd and comparing it to data standard 3.1 authoritative artifacts" name="should have simple types in the correct order" time="0.001">
    </testcase>
    <testcase classname="when generating xsd with extension and comparing it to data standard 3.1 authoritative artifacts" name="should have core with no differences" time="0.249">
    </testcase>
    <testcase classname="when generating xsd with extension and comparing it to data standard 3.1 authoritative artifacts" name="should have schema annotation with no differences" time="0.246">
    </testcase>
    <testcase classname="when generating xsd with extension and comparing it to data standard 3.1 authoritative artifacts" name="should have complex types in the correct order" time="0.003">
    </testcase>
    <testcase classname="when generating xsd with extension and comparing it to data standard 3.1 authoritative artifacts" name="should have simple types in the correct order" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\integration\ApiSchemaAuthoritativeCompare_v7_1.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:21" time="7.857" tests="1">
    <testcase classname="when generating ods and comparing it to data standard 5.0 authoritative artifacts for ODS/API 7.1" name="should have no core file differences" time="0.387">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\DomainEntitySubclass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:28" time="1.083" tests="3">
    <testcase classname="when generating xsd for descriptor" name="should generate core domain entity" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for descriptor" name="should generate extension domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for descriptor" name="should generate extension domain entity as extending core entity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\integration\ApiSchemaAuthoritativeCompare_v7_2.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:20" time="8.412" tests="2">
    <testcase classname="when generating ApiSchema for data standard 5.1 and TPDM 1.1 for ODS/API 7.2" name="should have no DS file differences" time="0.4">
    </testcase>
    <testcase classname="when generating ApiSchema for data standard 5.1 and TPDM 1.1 for ODS/API 7.2" name="should have no TPDM file differences" time="0.259">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\integration\SimpleTypeMergeCompare_v5.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:19" time="9.883" tests="4">
    <testcase classname="when generating ods tables file with simple merges for ODS/API 5.0" name="should have core with no differences" time="0.37">
    </testcase>
    <testcase classname="when generating ods tables file with simple merges for ODS/API 5.0" name="should have extension with no differences" time="0.363">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v5.0" name="should have core with no differences" time="0.315">
    </testcase>
    <testcase classname="when generating ods foreign keys file with simple merges for ODS/API v5.0" name="should have extension with no differences" time="0.378">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-recordownership-postgresql\test\integration\CreateCreatedByOwnershipColumnAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:20" time="8.961" tests="2">
    <testcase classname="when generating CreatedByOwnership columns and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.245">
    </testcase>
    <testcase classname="when generating CreatedByOwnership columns and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.352">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\MergeDirectiveEqualityConstraintEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:28" time="1.559" tests="13">
    <testcase classname="when building domain entity with DomainEntity collection and single merge directive" name="should create the correct equality constraints" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with single merge directive" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with single merge directive" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when building association extension with single merge directive" name="should create the correct equality constraints" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with DomainEntity collection and two merge directives" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with DomainEntity collection and single merge directive with multiple levels on target reference" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with DomainEntity collection and single merge directive with multiple levels ending with simple type" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when two domain entities with all four possible simple identities are merged on a reference" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when merging on both a reference and a simple identity down multiple levels on both references" name="should create the correct equality constraints" time="0.004">
    </testcase>
    <testcase classname="when merging on a reference with multiple levels of domain entities below it" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when merging on a reference through a choice" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when merging on a reference through a common collection" name="should create the correct equality constraints" time="0">
    </testcase>
    <testcase classname="when a role named merge follows a role named merge with school year enumeration as one leaf target" name="should have any equality constraints" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-recordownership-sqlserver\test\integration\CreateCreatedByOwnershipColumnAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:20" time="9.016" tests="2">
    <testcase classname="when generating CreatedByOwnership columns and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.179">
    </testcase>
    <testcase classname="when generating CreatedByOwnership columns and comparing to ODS/API 5.0 authoritative artifacts in Alliance mode" name="should have no differences" time="0.333">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\integration\CreateChangesSchemaAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:19" time="9.913" tests="2">
    <testcase classname="when generating change event schema and comparing to ODS/API 5.0 authoritative artifacts" name="should have no differences" time="0.191">
    </testcase>
    <testcase classname="when generating change event schema and comparing to ODS/API 5.0 authoritative artifacts in Alliance Mode" name="should have no differences" time="0.297">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\Association.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:26" time="3.535" tests="30">
    <testcase classname="when generating xsd for association with inline common type as part of identity" name="should generate domain entity" time="0.012">
    </testcase>
    <testcase classname="when generating xsd for association with inline common type as part of identity" name="should generate domain entity reference" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association with inline common type as part of identity" name="should generate domain entity identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association with inline common type as part of identity" name="should include inline common type in identity type" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity 1 references" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity 1 identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity 1 primary key" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity 2" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity 2 references" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity 2 entity identity" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate core domain entity 2 primary key" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate extension association" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should genrate extension association references" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should gerneate extension association identity" time="0">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should generate extension association reference to core entity 1" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to core DEs" name="should genreate extension association refrence to core entity 2" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension domain entity 1" time="0.005">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension domain entity 1 reference" time="0.013">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should gerneate extension domain entity 1 identity" time="0.004">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension domain entity 1 primary key" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should genreate extension domain entity 2" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension domain entity 2 reference" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension domain entity 2 identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension domain entity 2 primary key" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension association" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension association reference" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension association identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension association reference to extension entity 1" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association in extension namespace with reference to extension DEs" name="should generate extension association reference to extension entity 2" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\DomainEntity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:26" time="3.834" tests="34">
    <testcase classname="when generating xsd for domain entity" name="should generate the documentation with the encoded escape characters" time="0.023">
    </testcase>
    <testcase classname="when generating xsd for domain entity" name="should generate domain entity" time="0.01">
    </testcase>
    <testcase classname="when generating xsd for domain entity" name="should generate domain entity reference" time="0.004">
    </testcase>
    <testcase classname="when generating xsd for domain entity" name="should generate domain entity identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity" name="should not generate domain entity lookup" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with inline common type as part of primary key" name="should generate domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with inline common type as part of primary key" name="should generate domain entity reference" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity with inline common type as part of primary key" name="should generate domain entity identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with inline common type as part of primary key" name="should include inline common type in identity type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate core domain entity" time="0.006">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate core domain entity reference" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate core domain entity identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should include core domain entity primary key" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate extension domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate extension domain entity reference" time="0.02">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate extension domain entity identity" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate extension domain entity primary key" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core domain entity" name="should generate extension domain entity reference to core entity" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable only field" name="should generate domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable only field" name="should generate domain entity identity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable only field" name="should generate domain entity lookup" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable only field" name="should generate domain entity lookup in reference type" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable only field" name="should generate domain entity reference in lookup type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate domain entity identity" time="0.005">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate domain entity lookup" time="0.004">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate domain entity lookup in reference type" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate field reference in lookup type" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate shared property" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity with queryable field" name="should generate correct simple type for common string" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for abstract entity with identity property" name="should generate domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for abstract entity with identity property" name="should not generate identity property" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for abstract entity with identity property" name="should generate non identity property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\security\EducationOrganizationSecurableElementEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="1.189" tests="12">
    <testcase classname="when building descriptor" name="should have no EducationOrganization security elements" time="0.003">
    </testcase>
    <testcase classname="when building domain entity without any EducationOrganization properties" name="should have empty EducationOrganization security elements" time="0">
    </testcase>
    <testcase classname="when building domain entity with EducationOrganization property as identity" name="should have EducationOrganization security elements" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with School property as identity" name="should have EducationOrganization security element on School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with School property as identity" name="should have EducationOrganization security element on DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with rolenamed School property as identity" name="should not have EducationOrganization security elements on DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a rolename in the identity property chain" name="should not have EducationOrganization security elements on DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building education organization with parent education organization" name="should only have EducationOrganization security elements that are part of identity" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with School property not as identity" name="should not have EducationOrganization security elements on DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity in extension namespace with EducationOrganization subclass identity property" name="should have EducationOrganization security element" time="0.001">
    </testcase>
    <testcase classname="when building domain entity in extension namespace with EducationOrganization subclass non-identity property" name="should have EducationOrganization security elements" time="0">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct EducationOrganization security elements for StudentAssessmentRegistrationBatteryPartAssociation" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\JsonSchemaForInsertEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:28" time="2.618" tests="55">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be well-formed according to ajv" time="0.198">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be well-formed according to ajv" time="0.032">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be well-formed according to ajv" time="0.011">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be well-formed according to ajv" time="0.007">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be well-formed according to ajv" time="0.01">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be a correct schema - parent name prefix removed on array only" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be well-formed according to ajv" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be a correct schema - parent name prefix retained" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be well-formed according to ajv" time="0.006">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be a correct schema - acronym with correct casing" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be well-formed according to ajv" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be well-formed according to ajv" time="0.006">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be well-formed according to ajv" time="0.006">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be well-formed according to ajv" time="0.006">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be well-formed according to ajv" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be well-formed according to ajv" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be well-formed according to ajv" time="0.005">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be well-formed according to ajv" time="0.011">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be well-formed according to ajv" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be well-formed according to ajv" time="0.02">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be a correct schema" time="0.029">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be well-formed according to ajv" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be well-formed according to ajv" time="0.004">
    </testcase>
    <testcase classname="when building a descriptor" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a descriptor" name="should be well-formed according to ajv" time="0.005">
    </testcase>
    <testcase classname="when building a school year enumeration" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when building a school year enumeration" name="should be well-formed according to ajv" time="0.003">
    </testcase>
    <testcase classname="when building a schema for studentEducationOrganizationAssociation" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building a schema for studentEducationOrganizationAssociation" name="should be well-formed according to ajv" time="0.006">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="common descriptor decollisioned top level name should be correct" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be a correct schema for section" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be well-formed according to ajv" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another using a shortenTo directive" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another using a shortenTo directive" name="should be well-formed according to ajv" time="0.004">
    </testcase>
    <testcase classname="when building a domain entity with different string properties" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with different string properties" name="should be well-formed according to ajv" time="0.004">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be a correct schema" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct jsonSchemaForInsert for AssessmentAdministrationParticipation" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct jsonSchemaForInsert for AssessmentAdministration" time="0.001">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct schema for StudentAssessmentRegistrationBatteryPartAssociation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\DocumentPathsMappingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="2.138" tests="33">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct documentPathsMapping for DomainEntityName" time="0.004">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct documentPathsMapping for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct documentPathsMapping for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct documentPathsMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct documentPathsMapping for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct documentPathsMapping for Session" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct documentPathsMapping for School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct documentPathsMapping for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct documentPathsMapping for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct documentPathsMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct documentPathsMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct documentPathsMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct documentPathsMapping for domainEntitySubclassName" time="0.001">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct documentPathsMapping for StudentEducationOrganizationAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct documentPathsMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct documentPathsMapping for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct documentPathsMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct documentPathsMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct documentPathsMapping for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct documentPathsMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct documentPathsMapping for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct documentPathsMapping for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct documentPathsMapping for StudentCohort" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct documentPathsMapping for Section" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct documentPathsMapping for School" time="0.002">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct documentPathsMapping for StudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when a collection reference is to a role named resource that has a schoolid merged away" name="should be correct documentPathsMapping for ReportCard" time="0.001">
    </testcase>
    <testcase classname="when a reference is to a resource that has a reference with two identity properties merged away" name="should be correct documentPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when a reference is to a resource that has two identity properties directly merged away" name="should be correct documentPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when a reference is to a resource that merges on a descriptor (TPDM example)" name="should be correct documentPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct documentPathsMapping for StudentAssessmentRegistrationBatteryPartAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct identityJsonPaths for StaffEducationOrganizationAssignmentAssociation" time="0.002">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct identityJsonPaths for StaffEducationOrganizationEmploymentAssociation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\enhancer\AssociationChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:30" time="1.055" tests="4">
    <testcase classname="when enhancing core association targeting 7.2 ODS/API" name="should create delete tracking table" time="0.003">
    </testcase>
    <testcase classname="when enhancing core association targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.007">
    </testcase>
    <testcase classname="when enhancing extension association targeting 7.2 ODS/API" name="should create delete tracking table" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension association targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\templates\AnnotationTemplate.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="1.611" tests="7">
    <testcase classname="when generating schema" name="should be annotation only" time="0.003">
    </testcase>
    <testcase classname="when generating schema" name="should have correct documentation" time="0.001">
    </testcase>
    <testcase classname="when generating annotation with type group" name="should be annotation only" time="0.001">
    </testcase>
    <testcase classname="when generating annotation with type group" name="should be annotation only" time="0">
    </testcase>
    <testcase classname="when generating annotation with type group" name="should have correct documentation" time="0">
    </testcase>
    <testcase classname="when generating annotation with type group" name="should have appinfo" time="0.001">
    </testcase>
    <testcase classname="when generating annotation with type group" name="should have type group only" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-sql-dictionary\test\integration\SqlDataDictionaryGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="1.984" tests="2">
    <testcase classname="when generating a simple sql data dictionary" name="should generate table excel sheet" time="0.002">
    </testcase>
    <testcase classname="when generating a simple sql data dictionary" name="should generate column excel sheet" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\IdentityJsonPathsEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="2.072" tests="28">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct identityJsonPaths for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct identityJsonPaths for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct identityJsonPaths for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for Session" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for School" time="0">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct identityJsonPaths for domainEntitySubclassName" time="0.001">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct identityJsonPaths for StudentEducationOrganizationAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct identityJsonPaths for Assessment" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct identityJsonPaths for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct identityJsonPaths for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct identityJsonPaths for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct identityJsonPaths for StudentCohort" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct identityJsonPaths for Section" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct identityJsonPaths for School" time="0">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct identityJsonPaths for StudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct identityJsonPaths for StudentAssessmentRegistrationBatteryPartAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct identityJsonPaths for StaffEducationOrganizationEmploymentAssociation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\integration\MergeScenarios.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:28" time="2.932" tests="1">
    <testcase classname="when generating api model and comparing it to data standard 3.1 authoritative artifacts" name="should have no validation errors" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\SubclassIdentityFullnameEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:30" time="1.303" tests="4">
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct identityFullnames for domainEntitySubclassName" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct identityFullnames for School" time="0.001">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct identityFullnames for StudentProgramAssociation" time="0">
    </testcase>
    <testcase classname="when building a domain entity subclass with inline common containing identity property" name="should be correct identityFullnames for School including inline common identity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\integration\RunAllValidators.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="3.194" tests="1">
    <testcase classname="when running enhancers and validators against DS 3.2c and a simple extension" name="should have no failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\multi-namespace\MultiNamespace.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:23" time="9.022" tests="10">
    <testcase classname="when building a simple core and two simple extension projects" name="should have no validation errors" time="0.002">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have core domain entity" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have gb domain entity" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have sample domain entity" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have core domain metadata aggregrate" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have gb domain metadata aggregate" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have sample domain metadata aggregate" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have core entity definition" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have gb entity definition" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have sample entity definition" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\ApiSchemaBuildingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="2.959" tests="124">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct equalityConstraints for DomainEntityName" time="0.004">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct jsonSchemaForInsert for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct resourceName for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct equalityConstraints for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct jsonSchemaForInsert for DomainEntityName" time="0.012">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct resourceName for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct equalityConstraint for DomainEntityNames" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct identityJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct jsonSchemaForInsert for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct resourceName for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct equalityConstraints for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct jsonSchemaForInsert for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct resourceName for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct equalityConstraints for CourseOffering" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct jsonSchemaForInsert for CourseOffering" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct resourceName for CourseOffering" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct equalityConstraints for Session" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for Session" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct jsonSchemaForInsert for Session" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct resourceName for Session" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct equalityConstraints for School" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityJsonPaths for School" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct jsonSchemaForInsert for School" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct resourceName for School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct equalityConstraints for EducationContent" time="0">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct identityJsonPaths for EducationContent" time="0">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct jsonSchemaForInsert for EducationContent" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct resourceName for EducationContent" time="0">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct equalityConstraints for EducationContent" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct identityJsonPaths for EducationContent" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct jsonSchemaForInsert for EducationContent" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct resourceName for EducationContent" time="0">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct equalityConstraints for EducationContent" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct identityJsonPaths for EducationContent" time="0">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct jsonSchemaForInsert for EducationContent" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct resourceName for EducationContent" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct equalityConstraints for StudentSpecialEducationProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct identityJsonPaths for StudentSpecialEducationProgramAssociation" time="0">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct jsonSchemaForInsert for StudentSpecialEducationProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct resourceName for StudentSpecialEducationProgramAssociation" time="0">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct equalityConstraints for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct jsonSchemaForInsert for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct resourceName for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct equalityConstraints for CommunityOrganization" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct identityJsonPaths for CommunityOrganization" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct jsonSchemaForInsert for CommunityOrganization" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct resourceName for CommunityOrganization" time="0">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct equalityConstraints for StudentEducationOrganizationAssociation" time="0">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct identityJsonPaths for StudentEducationOrganizationAssociation" time="0.005">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct jsonSchemaForInsert for StudentEducationOrganizationAssociation" time="0.001">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct resourceName for StudentEducationOrganizationAssociation" time="0">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct equalityConstraints for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct jsonSchemaForInsert for Assessment" time="0.019">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct resourceName for Assessment" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct equalityConstraints for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct jsonSchemaForInsert for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct resourceName for Assessment" time="0.011">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct equalityConstraints for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct identityJsonPaths for Assessment" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct jsonSchemaForInsert for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct resourceName for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct equalityConstraints for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct identityJsonPaths for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct jsonSchemaForInsert for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct resourceName for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct equalityConstraints for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct identityJsonPaths for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct jsonSchemaForInsert for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct resourceName for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct equalityConstraints for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct identityJsonPaths for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct jsonSchemaForInsert for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct resourceName for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct equalityConstraints for StudentSchoolAssociation" time="0">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct identityJsonPaths for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct jsonSchemaForInsert for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct resourceName for StudentSchoolAssociation" time="0">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct equalityConstraints for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct identityJsonPaths for StudentSchoolAssociation" time="0">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct jsonSchemaForInsert for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct resourceName for StudentSchoolAssociation" time="0">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct equalityConstraints for StudentCohort" time="0">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct identityJsonPaths for StudentCohort" time="0.001">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct jsonSchemaForInsert for StudentCohort" time="0.001">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct resourceName for StudentCohort" time="0">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct equalityConstraints for Section" time="0">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct identityJsonPaths for Section" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct jsonSchemaForInsert for Section" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct resourceName for Section" time="0">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct equalityConstraints for School" time="0">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct identityJsonPaths for School" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct jsonSchemaForInsert for School" time="0">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct resourceName for School" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should have isSubclass flag for School" time="0">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should have correct subclassType" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should have correct superclassProjectName for School" time="0">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should have correct superclassResourceName for School" time="0">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should have correct superclassIdentityJsonPath for School" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should have correct documentPathsMapping for School" time="0">
    </testcase>
    <testcase classname="when building an Association subclass" name="should not have GeneralStudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct equalityConstraints for StudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct identityJsonPaths for StudentProgramAssociation" time="0">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct jsonSchemaForInsert for StudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct resourceName for StudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building an Association subclass" name="should have isSubclass flag for StudentProgramAssociation" time="0">
    </testcase>
    <testcase classname="when building an Association subclass" name="should have correct subclassType" time="0">
    </testcase>
    <testcase classname="when building an Association subclass" name="should have correct superclassProjectName for StudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when building an Association subclass" name="should have correct superclassResourceName for StudentProgramAssociation" time="0">
    </testcase>
    <testcase classname="when building an Association subclass" name="should have correct documentPathsMapping for StudentProgramAssociation" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should have resourceSchema for extension" time="0">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be correct isResourceExtension flag" time="0">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be correct resourceName" time="0">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be correct jsonSchemaForInsert" time="0">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be correct equalityConstraints" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be correct booleanJsonPaths" time="0.006">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be correct numericJsonPaths" time="0">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should have correct documentPathsMapping" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\AllJsonPathsMappingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:30" time="2.469" tests="35">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct allJsonPathsMapping" time="0.01">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct allJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for CourseOffering" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for Session" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct allJsonPathsMapping for School" time="0.015">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct allJsonPathsMapping" time="0.007">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct allJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct allJsonPathsMapping" time="0.004">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building a descriptor" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building a school year enumeration" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building a schema for studentEducationOrganizationAssociation" name="should be correct allJsonPathsMapping" time="0.005">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another using a shortenTo directive" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with role named and pluralized inline common" name="should be correct allJsonPathsMapping with &quot;availableCreditConversion&quot; not pluralized" time="0.002">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should be correct allJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity extension" name="should be correct allJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct allJsonPathsMapping for AssessmentAdministrationParticipation" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct allJsonPathsMapping for AssessmentAdministration" time="0.001">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct allJsonPathsMapping for StudentAssessmentRegistrationBatteryPartAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct allJsonPathsMapping for StaffEducationOrganizationAssignmentAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct allJsonPathsMapping for StaffEducationOrganizationEmploymentAssociation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\enhancer\BaseDescriptorChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="1.181" tests="2">
    <testcase classname="when enhancing base descriptor targeting 7.2 ODS/API" name="should create delete tracking table" time="0.019">
    </testcase>
    <testcase classname="when enhancing base descriptor targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\ColumnConflictEqualityConstraintEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:29" time="2.98" tests="19">
    <testcase classname="when collection property conflicts with parent identity" name="should create the correct equality constraints" time="0.004">
    </testcase>
    <testcase classname="when non-collection properties have naming conflict" name="should create the correct equality constraints" time="0.002">
    </testcase>
    <testcase classname="when collection has multiple conflicts with parent identities" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when collection conflict occurs through nested references" name="should create the correct equality constraints" time="0">
    </testcase>
    <testcase classname="when collection conflict occurs through nested scalar property" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when reference properties conflict across all identity types" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when conflicts occur in both reference and scalar properties through nesting" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when deeply nested reference creates conflict" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when reference through choice has conflict" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when reference through common collection has conflict" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension creates conflict" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when association extension creates conflict" name="should create the correct equality constraints" time="0.001">
    </testcase>
    <testcase classname="when merge directive uses UniqueId property" name="should not crash - no column conflicts though due to merge directives" time="0.001">
    </testcase>
    <testcase classname="when common collection has partial identity match" name="should not create equality constraints for partial identity matches" time="0">
    </testcase>
    <testcase classname="when common collection has non-identity conflict with other identities" name="should not create equality constraints for non-identity in collection match" time="0">
    </testcase>
    <testcase classname="when common collection has non-identity conflict without other identities" name="should create equality constraint for match because there is no other identity on collection" time="0">
    </testcase>
    <testcase classname="when common collection has multiple partial identity matches" name="should not create equality constraints for partial identity matches" time="0.001">
    </testcase>
    <testcase classname="when common collection has single full identity match" name="should create equality constraints for full identity match" time="0">
    </testcase>
    <testcase classname="when common collection has multiple full identity matches" name="should create equality constraints for full identity match" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\TopLevelEntityBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="1.459" tests="254">
    <testcase classname="when building association property" name="should have association property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building association property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building association property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building association property" name="should have names" time="0.001">
    </testcase>
    <testcase classname="when building association property" name="should have source map for type with line, column, text" time="0.002">
    </testcase>
    <testcase classname="when building deprecated association property" name="should have association property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated association property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building association property with weak reference" name="should have association property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building association property with weak reference" name="should have type" time="0">
    </testcase>
    <testcase classname="when building association property with weak reference" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building association property with weak reference" name="should have isWeak" time="0.001">
    </testcase>
    <testcase classname="when building association property with weak reference" name="should have source map for isWeak with line, column, text" time="0">
    </testcase>
    <testcase classname="when building boolean property" name="should have boolean property in entity properties" time="0">
    </testcase>
    <testcase classname="when building boolean property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building boolean property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building boolean property" name="should have source map for type with line, column, text" time="0.008">
    </testcase>
    <testcase classname="when building deprecated boolean property" name="should have boolean property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated boolean property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building choice property" name="should have choice property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building choice property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building choice property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building choice property" name="should have source map for type with line, column, text" time="0.008">
    </testcase>
    <testcase classname="when building deprecated choice property" name="should have choice property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated choice property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building common property" name="should have common property in entity properties" time="0">
    </testcase>
    <testcase classname="when building common property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building common property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building common property" name="should have source map for type with line, column, text" time="0.015">
    </testcase>
    <testcase classname="when building deprecated common property" name="should have common property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated common property" name="should be deprecated" time="0.011">
    </testcase>
    <testcase classname="when building common property with extension override" name="should have common property in entity properties" time="0">
    </testcase>
    <testcase classname="when building common property with extension override" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building common property with extension override" name="should have source map for type with line, column, text" time="0.003">
    </testcase>
    <testcase classname="when building common property with extension override" name="should have isExtensionOverride" time="0">
    </testcase>
    <testcase classname="when building common property with extension override" name="should have source map for isExtensionOverride with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building currency property" name="should have currency property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building currency property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building currency property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building currency property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated currency property" name="should have currency property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated currency property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building date property" name="should have date property in entity properties" time="0">
    </testcase>
    <testcase classname="when building date property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building date property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building date property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated date property" name="should have date property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated date property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building datetime property" name="should have datetime property in entity properties" time="0">
    </testcase>
    <testcase classname="when building datetime property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building datetime property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building datetime property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated datetime property" name="should have datetime property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated datetime property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have decimal property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building decimal property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building decimal property" name="should have source map for type" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have hasRestriction" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have source map for hasRestriction" time="0.001">
    </testcase>
    <testcase classname="when building decimal property" name="should have totalDigits" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have source map for totalDigits" time="0.001">
    </testcase>
    <testcase classname="when building decimal property" name="should have decimalPlaces" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have source map for decimalPlaces" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building decimal property" name="should have source map for minValue" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building decimal property" name="should have source map for maxValue" time="0.001">
    </testcase>
    <testcase classname="when building decimal property" name="should have source map with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated decimal property" name="should have decimal property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated decimal property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property" name="should have descriptor property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building descriptor property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property" name="should have source map for type with line, column, text" time="0.002">
    </testcase>
    <testcase classname="when building deprecated descriptor property" name="should have descriptor property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated descriptor property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property" name="should have domain entity property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated domain entity property" name="should have domain entity property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated domain entity property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building domain entity property with weak reference" name="should have domain entity property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property with weak reference" name="should have type" time="0">
    </testcase>
    <testcase classname="when building domain entity property with weak reference" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property with weak reference" name="should have isWeak" time="0">
    </testcase>
    <testcase classname="when building domain entity property with weak reference" name="should have source map for isWeak with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building duration property" name="should have duration property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building duration property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building duration property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building duration property" name="should have source map for type with line, column, text" time="0">
    </testcase>
    <testcase classname="when building deprecated duration property" name="should have duration property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated duration property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have association property in entity properties" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have association property in property index" time="0.001">
    </testcase>
    <testcase classname="when building required entity properties" name="should have type" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have documentation" time="0.004">
    </testcase>
    <testcase classname="when building required entity properties" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have parentEntityName" time="0.001">
    </testcase>
    <testcase classname="when building required entity properties" name="should have parentEntity" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have isRequired" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have source map for type" time="0.001">
    </testcase>
    <testcase classname="when building required entity properties" name="should have source map for documentation" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have source map for metaEdName" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have source map for parentEntityName" time="0.001">
    </testcase>
    <testcase classname="when building required entity properties" name="should have source map for parentEntity" time="0">
    </testcase>
    <testcase classname="when building required entity properties" name="should have source map for isRequired" time="0.001">
    </testcase>
    <testcase classname="when building required entity properties" name="should have source map with line, column, text for each property" time="0.001">
    </testcase>
    <testcase classname="when building entity property with inherited documentation" name="should have documentationInherited" time="0.001">
    </testcase>
    <testcase classname="when building entity property with inherited documentation" name="should not have documentation" time="0.001">
    </testcase>
    <testcase classname="when building entity property with inherited documentation" name="should have source map for documentationInherited with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building identity entity property" name="should have entity identity property" time="0">
    </testcase>
    <testcase classname="when building identity entity property" name="should have entity source map for identity properties with line, column, text" time="0">
    </testcase>
    <testcase classname="when building identity entity property" name="should have source map for isPartOfIdentity with line, column, text" time="0">
    </testcase>
    <testcase classname="when building optional entity property" name="should have isOptional" time="0">
    </testcase>
    <testcase classname="when building optional entity property" name="should have source map for isOptional with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building required collection entity property" name="should have isRequiredCollection" time="0.001">
    </testcase>
    <testcase classname="when building required collection entity property" name="should have source map for isRequiredCollection with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building optional collection entity property" name="should have isOptionalCollection" time="0.001">
    </testcase>
    <testcase classname="when building optional collection entity property" name="should have source map for isOptionalCollection with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building entity property role name" name="should have roleName" time="0.001">
    </testcase>
    <testcase classname="when building entity property role name" name="should have names" time="0.001">
    </testcase>
    <testcase classname="when building entity property role name" name="should have source map for contextName with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building entity property with shortened context" name="should have shortenTo" time="0">
    </testcase>
    <testcase classname="when building entity property with shortened context" name="should have source map for shortenTo with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building renamed identity entity property" name="should have entity identity property" time="0">
    </testcase>
    <testcase classname="when building renamed identity entity property" name="should have isIdentityRename" time="0.001">
    </testcase>
    <testcase classname="when building renamed identity entity property" name="should have baseKeyName" time="0">
    </testcase>
    <testcase classname="when building renamed identity entity property" name="should have source map for isIdentityRename with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building renamed identity entity property" name="should have source map for baseKeyName with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building queryable entity property " name="should have entity queryable field" time="0.001">
    </testcase>
    <testcase classname="when building queryable entity property " name="should have entity source map for queryable field with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building queryable entity property " name="should have source map for isQueryableOnly with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building shared entity property" name="should have entity property in entity properties" time="0">
    </testcase>
    <testcase classname="when building shared entity property" name="should have referencedType" time="0">
    </testcase>
    <testcase classname="when building shared entity property" name="should have source map for referencedType with line, column, text" time="0">
    </testcase>
    <testcase classname="when building deprecated shared entity property" name="should have entity property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared entity property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building enumeration property" name="should have enumeration property in entity properties" time="0">
    </testcase>
    <testcase classname="when building enumeration property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building enumeration property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building enumeration property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated enumeration property" name="should have enumeration property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated enumeration property" name="should be deprecated" time="0.002">
    </testcase>
    <testcase classname="when building inline common property" name="should have inline common property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building inline common property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building inline common property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building inline common property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated inline common property" name="should have inline common property in entity properties" time="0.002">
    </testcase>
    <testcase classname="when building deprecated inline common property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building integer property" name="should have integer property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building integer property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building integer property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building integer property" name="should have source map for type" time="0.001">
    </testcase>
    <testcase classname="when building integer property" name="should have hasRestriction" time="0">
    </testcase>
    <testcase classname="when building integer property" name="should have source map for hasRestriction" time="0.001">
    </testcase>
    <testcase classname="when building integer property" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building integer property" name="should have source map for minValue" time="0">
    </testcase>
    <testcase classname="when building integer property" name="should have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building integer property" name="should have source map for maxValue" time="0">
    </testcase>
    <testcase classname="when building integer property" name="should not have big hint" time="0">
    </testcase>
    <testcase classname="when building integer property" name="should have source map with line, column, text" time="0.002">
    </testcase>
    <testcase classname="when building integer property with big max value" name="should not have maxValue" time="0">
    </testcase>
    <testcase classname="when building integer property with big max value" name="should not have minValue" time="0.001">
    </testcase>
    <testcase classname="when building integer property with big max value" name="should have big hint" time="0">
    </testcase>
    <testcase classname="when building integer property with big max value" name="should have source map for max value" time="0">
    </testcase>
    <testcase classname="when building integer property with big min value" name="should not have maxValue" time="0.012">
    </testcase>
    <testcase classname="when building integer property with big min value" name="should not have minValue" time="0">
    </testcase>
    <testcase classname="when building integer property with big min value" name="should have big hint" time="0">
    </testcase>
    <testcase classname="when building integer property with big min value" name="should have source map for min value" time="0">
    </testcase>
    <testcase classname="when building integer property with big min value and big max value" name="should not have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building integer property with big min value and big max value" name="should not have minValue" time="0">
    </testcase>
    <testcase classname="when building integer property with big min value and big max value" name="should have big hint" time="0.001">
    </testcase>
    <testcase classname="when building deprecated integer property" name="should have integer property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated integer property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building merge directive reference" name="should have property in merge properties" time="0.001">
    </testcase>
    <testcase classname="when building merge directive reference" name="should have sourcePropertyPathStrings" time="0.004">
    </testcase>
    <testcase classname="when building merge directive reference" name="should have source map for sourcePropertyPathStrings with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building merge directive reference" name="should have targetPropertyPathStrings" time="0.001">
    </testcase>
    <testcase classname="when building merge directive reference" name="should have source map for targetPropertyPathStrings with line, column, text" time="0">
    </testcase>
    <testcase classname="when building multiple merge directives" name="should have multiple properties in merge directives" time="0.001">
    </testcase>
    <testcase classname="when building multiple merge directives" name="should have sourcePropertyPathStrings and targetPropertyPathStrings for first merge directive" time="0">
    </testcase>
    <testcase classname="when building multiple merge directives" name="should have source map for first merge directive" time="0.001">
    </testcase>
    <testcase classname="when building multiple merge directives" name="should have sourcePropertyPathStrings and targetPropertyPathStrings for second merge directive" time="0.001">
    </testcase>
    <testcase classname="when building multiple merge directives" name="should have source map for second merge directive" time="0">
    </testcase>
    <testcase classname="when building multiple merge directives for a shared simple type" name="should have multiple properties in merge directives" time="0.001">
    </testcase>
    <testcase classname="when building multiple merge directives for a shared simple type" name="should have sourcePropertyPathStrings and targetPropertyPathStrings for first merge directive" time="0">
    </testcase>
    <testcase classname="when building multiple merge directives for a shared simple type" name="should have source map for first merge directive" time="0.001">
    </testcase>
    <testcase classname="when building multiple merge directives for a shared simple type" name="should have sourcePropertyPathStrings and targetPropertyPathStrings for second merge directive" time="0.001">
    </testcase>
    <testcase classname="when building multiple merge directives for a shared simple type" name="should have source map for second merge directive" time="0">
    </testcase>
    <testcase classname="when building merge directive for defining association domain entity property" name="should have property in merge properties" time="0">
    </testcase>
    <testcase classname="when building merge directive for defining association domain entity property" name="should have sourcePropertyPathStrings" time="0.001">
    </testcase>
    <testcase classname="when building merge directive for defining association domain entity property" name="should have source map for sourcePropertyPathStrings with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building merge directive for defining association domain entity property" name="should have targetPropertyPathStrings" time="0">
    </testcase>
    <testcase classname="when building merge directive for defining association domain entity property" name="should have source map for targetPropertyPathStrings with line, column, text" time="0.008">
    </testcase>
    <testcase classname="when building percent property" name="should have percent property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building percent property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building percent property" name="should not be deprecated" time="0.002">
    </testcase>
    <testcase classname="when building percent property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building percent property" name="should have percent property in entity properties" time="0.007">
    </testcase>
    <testcase classname="when building percent property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building referential property with merge directives" name="should have merge directive" time="0.001">
    </testcase>
    <testcase classname="when building referential property with merge directives" name="should have source map for mergeDirectives with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building school year enumeration property" name="should have school year enumeration property in entity properties" time="0">
    </testcase>
    <testcase classname="when building school year enumeration property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building school year enumeration property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building school year enumeration property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated school year enumeration property" name="should have school year enumeration property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated school year enumeration property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building shared decimal property" name="should have shared decimal property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building shared decimal property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building shared integer property" name="should have shared integer property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building shared integer property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building shared integer property" name="should have source map for type with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building shared string property" name="should have shared string property in entity properties" time="0">
    </testcase>
    <testcase classname="when building shared string property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building shared string property" name="should have source map for type with line, column, text" time="0">
    </testcase>
    <testcase classname="when building short property" name="should have short property in entity properties" time="0">
    </testcase>
    <testcase classname="when building short property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building short property" name="should have source map for type" time="0">
    </testcase>
    <testcase classname="when building short property" name="should have hasRestriction" time="0.001">
    </testcase>
    <testcase classname="when building short property" name="should have source map for hasRestriction" time="0">
    </testcase>
    <testcase classname="when building short property" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building short property" name="should have source map for minValue" time="0.001">
    </testcase>
    <testcase classname="when building short property" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building short property" name="should have source map for maxValue" time="0">
    </testcase>
    <testcase classname="when building short property" name="should have source map with line, column, text" time="0.002">
    </testcase>
    <testcase classname="when building string property" name="should have string property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building string property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building string property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building string property" name="should have source map for type" time="0.001">
    </testcase>
    <testcase classname="when building string property" name="should have hasRestriction" time="0">
    </testcase>
    <testcase classname="when building string property" name="should have source map for hasRestriction" time="0">
    </testcase>
    <testcase classname="when building string property" name="should have minLength" time="0.001">
    </testcase>
    <testcase classname="when building string property" name="should have source map for minLength" time="0">
    </testcase>
    <testcase classname="when building string property" name="should have maxLength" time="0.001">
    </testcase>
    <testcase classname="when building string property" name="should have source map for maxLength" time="0">
    </testcase>
    <testcase classname="when building string property" name="should have source map with line, column, text" time="0.001">
    </testcase>
    <testcase classname="when building deprecated string property" name="should have string property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated string property" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building time property" name="should have time property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building time property" name="should have type" time="0">
    </testcase>
    <testcase classname="when building time property" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building time property" name="should have source map for type with line, column, text" time="0">
    </testcase>
    <testcase classname="when building deprecated time property" name="should have time property in entity properties" time="0">
    </testcase>
    <testcase classname="when building deprecated time property" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building year property" name="should have year property in entity properties" time="0">
    </testcase>
    <testcase classname="when building year property" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building year property" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building year property" name="should have source map for type with line, column, text" time="0">
    </testcase>
    <testcase classname="when building deprecated year property" name="should have year property in entity properties" time="0.001">
    </testcase>
    <testcase classname="when building deprecated year property" name="should be deprecated" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-handbook\test\integration\EdFiDataHandbookAsHtmlGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:27" time="5.314" tests="3">
    <testcase classname="when generating HTML version of handbook" name="should generate a non empty string" time="0.002">
    </testcase>
    <testcase classname="when generating HTML version of handbook" name="should generate HTML" time="0.001">
    </testcase>
    <testcase classname="when generating HTML version of handbook" name="should not duplicate entity names when role name is the same as metaEdName" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\enhancer\AssociationSubclassChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="1.395" tests="4">
    <testcase classname="when enhancing core associationSubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.002">
    </testcase>
    <testcase classname="when enhancing core associationSubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension associationSubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension associationSubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xml-dictionary\test\integration\XmlDataDictionaryGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="1.876" tests="3">
    <testcase classname="when generating xsd for domain entity" name="should generate elements excel sheet" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for domain entity" name="should generate complex types excel sheet" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity" name="should generate simple types excel sheet" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\OpenApiReferenceComponentEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="1.403" tests="16">
    <testcase classname="when building simple domain entity with all the identities" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for top entity" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for ClassPeriod" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for School" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for top entity" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for Session" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for School" time="0">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be a correct schema - acronym with correct casing" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a descriptor" name="should have no reference component" time="0.001">
    </testcase>
    <testcase classname="when building a school year enumeration" name="should have no reference component" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be a correct AssessmentAdministration schema - &quot;assigning&quot; prefix on &quot;EducationOrganizationId&quot;" time="0.002">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct schema for StudentAssessmentRegistrationBatteryPartAssociation" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\IdentityFullnameEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="1.531" tests="25">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct identityFullnames for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct identityFullnames for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct identityFullnames for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityFullnames for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityFullnames for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityFullnames for Session" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct identityFullnames for School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct identityFullnames for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct identityFullnames for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct identityFullnames for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct identityFullnames for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct identityFullnames for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct identityFullnames for StudentEducationOrganizationAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct identityFullnames for Assessment" time="0.007">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct identityFullnames for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct identityFullnames for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct identityFullnames for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct identityFullnames for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct identityFullnames for Assessment" time="0">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct identityFullnames for StudentSchoolAssociation" time="0.006">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct identityFullnames for StudentSchoolAssociation" time="0">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct identityFullnames for StudentCohort" time="0">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct identityFullnames for Section" time="0">
    </testcase>
    <testcase classname="when building association with domain entity with two entities, one with role named educationOrganization and one with non role named educationOrganization " name="should be correct identityFullnames for StudentAssessmentRegistrationBatteryPartAssociation" time="0">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should be correct identityFullnames for StaffEducationOrganizationEmploymentAssociation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\unified.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="1.612" tests="119">
    <testcase classname="when building and enhancing domain item" name="should build two domain entities" time="0.012">
    </testcase>
    <testcase classname="when building and enhancing domain item" name="should build one domain" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain item" name="should build one subdomain" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain item" name="should enhance domain entities" time="0.003">
    </testcase>
    <testcase classname="when building and enhancing domain item" name="should enhance subdomain entities" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing subdomain" name="should build one domain" time="0">
    </testcase>
    <testcase classname="when building and enhancing subdomain" name="should build two subdomains" time="0.006">
    </testcase>
    <testcase classname="when building and enhancing subdomain" name="should enhance subdomain with parent" time="0">
    </testcase>
    <testcase classname="when building and enhancing subdomain" name="should enhance domains with sorted subdomains" time="0.003">
    </testcase>
    <testcase classname="when building and enhancing association extension" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing association extension" name="should build one association extension" time="0">
    </testcase>
    <testcase classname="when building and enhancing association extension" name="should enhance base entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing association extension" name="should enhance extension with queryable fields" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing association subclass" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing association subclass" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when building and enhancing association subclass" name="should enhance base entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing association subclass" name="should enhance subclass with queryable fields" time="0">
    </testcase>
    <testcase classname="when building and enhancing common extension" name="should build one common" time="0">
    </testcase>
    <testcase classname="when building and enhancing common extension" name="should build one common extension" time="0">
    </testcase>
    <testcase classname="when building and enhancing common extension" name="should enhance base entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing common extension" name="should enhance extension with queryable fields" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity extension" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity extension" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity extension" name="should enhance base entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity extension" name="should enhance extension with queryable fields" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity subclass" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity subclass" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity subclass" name="should enhance base entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity subclass" name="should enhance subclass with queryable fields" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing interchange extension" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing interchange extension" name="should build one interchange extension" time="0">
    </testcase>
    <testcase classname="when building and enhancing interchange extension" name="should enhance base entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing interchange items" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing interchange items" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when building and enhancing interchange items" name="should enhance elements with referenced entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing interchange items" name="should enhance identity templates with referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing association property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing association property" name="should build one association" time="0">
    </testcase>
    <testcase classname="when building and enhancing association property" name="should enhance property path name role name" time="0">
    </testcase>
    <testcase classname="when building and enhancing association property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing association property" name="should enhance inherited documentation" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing choice property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing choice property" name="should build one choice" time="0">
    </testcase>
    <testcase classname="when building and enhancing choice property" name="should enhance property path name role name" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing choice property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing choice property" name="should enhance inherited documentation" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing common property" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing common property" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing common property" name="should enhance property path name role name" time="0">
    </testcase>
    <testcase classname="when building and enhancing common property" name="should enhance referenced entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing common property" name="should enhance inherited documentation" time="0">
    </testcase>
    <testcase classname="when building and enhancing descriptor property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing descriptor property" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when building and enhancing descriptor property" name="should enhance property path name role name" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing descriptor property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing descriptor property" name="should enhance inherited documentation" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity property" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity property" name="should enhance property path name role name" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity property" name="should enhance referenced entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity property" name="should enhance inherited documentation" time="0">
    </testcase>
    <testcase classname="when building and enhancing enumeration property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing enumeration property" name="should build one enumeration" time="0">
    </testcase>
    <testcase classname="when building and enhancing enumeration property" name="should enhance property path name role name" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing enumeration property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing enumeration property" name="should enhance inherited documentation" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing inline common property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing inline common property" name="should build one inlineCommon" time="0">
    </testcase>
    <testcase classname="when building and enhancing inline common property" name="should enhance property path name role name" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing inline common property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing inline common property" name="should enhance inherited documentation" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing school year enumeration property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing school year enumeration property" name="should build one enumeration" time="0">
    </testcase>
    <testcase classname="when building and enhancing school year enumeration property" name="should enhance property path name role name" time="0.008">
    </testcase>
    <testcase classname="when building and enhancing school year enumeration property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing school year enumeration property" name="should enhance inherited documentation" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should build one shared decimal" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should build one shared decimal type" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance property path name role name" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance referenced entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance referenced entity with referring simple property" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance inherited documentation" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance total digits" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance decimal places" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance min value" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared decimal property" name="should enhance max value" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should build one shared integer" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should build one shared integer type" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should enhance property path name role name" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should enhance referenced entity with referring simple property" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should enhance inherited documentation" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should enhance min value" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared integer property" name="should enhance max value" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should build one shared integer" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should build one shared integer type" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should enhance property path name role name" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should enhance referenced entity with referring simple property" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should enhance inherited documentation" time="0.004">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should enhance min value" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared short property" name="should enhance max value" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should build one shared string" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should build one shared string type" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should enhance property path name role name" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should enhance referenced entity" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should enhance referenced entity with referring simple property" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should enhance inherited documentation" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should enhance min length" time="0">
    </testcase>
    <testcase classname="when building and enhancing shared string property" name="should enhance max length" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity merge directives" name="should build three domain entities" time="0">
    </testcase>
    <testcase classname="when building and enhancing domain entity merge directives" name="should enhance property path name role name" time="0.002">
    </testcase>
    <testcase classname="when building and enhancing domain entity merge directives" name="should enhance referenced entity" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity merge directives" name="should enhance inherited documentation" time="0.001">
    </testcase>
    <testcase classname="when building and enhancing domain entity merge directives" name="should enhance merge directives with merge" time="0.002">
    </testcase>
    <testcase classname="when building and enhancing domain entity merge directives" name="should enhance merge directives with target" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonProperty\CommonPropertyMustMatchACommon.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="1.027" tests="11">
    <testcase classname="when common property has identifier of common" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when common property has identifier of common subclass" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when common property has identifier of inline common" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when common property has identifier of inline common" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when common property has invalid identifier" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when common property has invalid identifier" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when common property has identifier of common in dependency namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when common property has invalid identifier of common in dependency namespace" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when common property has invalid identifier of common in dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when common property refers to common in non-dependency namespace" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when common property refers to common in non-dependency namespace" name="should have validation failure for property" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\MergedInterchangeEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="0.961" tests="2">
    <testcase classname="when running with no interchange extensions" name="should be core merged interchange" time="0.004">
    </testcase>
    <testcase classname="when running with interchange extensions" name="should have core merged interchange" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\templates\SchemaTemplate.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="1.174" tests="16">
    <testcase classname="when generating core schema" name="should be schema only" time="0.001">
    </testcase>
    <testcase classname="when generating core schema" name="should have schema version" time="0">
    </testcase>
    <testcase classname="when generating core schema" name="should have five sections" time="0.001">
    </testcase>
    <testcase classname="when generating core schema" name="should have annotation import" time="0">
    </testcase>
    <testcase classname="when generating core schema" name="should have annotation" time="0.007">
    </testcase>
    <testcase classname="when generating core schema" name="should have section annotation" time="0">
    </testcase>
    <testcase classname="when generating core schema" name="should have complex type" time="0.001">
    </testcase>
    <testcase classname="when generating core schema" name="should have simple type" time="0.001">
    </testcase>
    <testcase classname="when generating extension schema" name="should be schema only" time="0.001">
    </testcase>
    <testcase classname="when generating extension schema" name="should have schema version" time="0.001">
    </testcase>
    <testcase classname="when generating extension schema" name="should have five sections" time="0">
    </testcase>
    <testcase classname="when generating extension schema" name="should have include" time="0">
    </testcase>
    <testcase classname="when generating extension schema" name="should have annotation" time="0">
    </testcase>
    <testcase classname="when generating extension schema" name="should have section annotation" time="0.001">
    </testcase>
    <testcase classname="when generating extension schema" name="should have complex type" time="0.001">
    </testcase>
    <testcase classname="when generating extension schema" name="should have simple type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\templates\ComplexTypeTemplate.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="1.201" tests="27">
    <testcase classname="when generating complex type" name="should be complex type only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type" name="should have element complex type name" time="0">
    </testcase>
    <testcase classname="when generating complex type" name="should not have abstract" time="0">
    </testcase>
    <testcase classname="when generating complex type" name="should have annotation only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type" name="should not have attribute" time="0">
    </testcase>
    <testcase classname="when generating complex type with attribute" name="should be complex type only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with attribute" name="should have element complex type name" time="0">
    </testcase>
    <testcase classname="when generating complex type with attribute" name="should not have abstract" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with attribute" name="should have annotation and attribute only" time="0">
    </testcase>
    <testcase classname="when generating complex type with base type" name="should be complex type only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with base type" name="should have element complex type name" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with base type" name="should not have abstract" time="0">
    </testcase>
    <testcase classname="when generating complex type with base type" name="should not have attribute" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with base type" name="should have annotation and complex content only" time="0.002">
    </testcase>
    <testcase classname="when generating complex type with base type" name="should have complex content with base attribute and no child elements" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with item" name="should be complex type only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with item" name="should have element complex type name" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with item" name="should not have abstract" time="0">
    </testcase>
    <testcase classname="when generating complex type with item" name="should have attribute" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with item" name="should have annotation and sequence only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with item" name="should have sequence with complex item" time="0">
    </testcase>
    <testcase classname="when generating complex type with everything" name="should be complex type only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with everything" name="should have element complex type name" time="0">
    </testcase>
    <testcase classname="when generating complex type with everything" name="should not have abstract" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with everything" name="should have annotation and attribute and complex content only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with everything" name="should have attribute with annotation documentation" time="0.001">
    </testcase>
    <testcase classname="when generating complex type with everything" name="should have complex content with base attribute and sequence with complex item" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\OpenApiRequestBodyComponentEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="1.478" tests="33">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be a correct schema" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for top entity" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for ClassPeriod" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be a correct schema for School" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for top entity" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for Session" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be a correct schema for School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be a correct schema - parent name prefix removed" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be a correct schema - parent name prefix retained" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be a correct schema - acronym with correct casing" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a descriptor" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a school year enumeration" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a schema for studentEducationOrganizationAssociation" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="common descriptor decollisioned top level name should be correct" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be a correct schema for section" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another using a shortenTo directive" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with different string properties" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be a correct schema" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-odsapi-deploy\test\integration\DeployExtensionV6.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="1.118" tests="2">
    <testcase classname="when deploying 6.1 extension artifacts" name="should have successful deploy result" time="0.005">
    </testcase>
    <testcase classname="when deploying 6.1 extension artifacts" name="should have correct directory paths" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\QueryFieldMappingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="1.519" tests="26">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct queryFieldMapping for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct queryFieldMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct queryFieldMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct queryFieldMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct queryFieldMapping for CourseOffering" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct queryFieldMapping for Session" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct queryFieldMapping for School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct queryFieldMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct queryFieldMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct queryFieldMapping for DomainEntityName" time="0.014">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct queryFieldMapping for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct queryFieldMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct queryFieldMapping for domainEntitySubclassName" time="0.001">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct queryFieldMapping for StudentEducationOrganizationAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct queryFieldMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct queryFieldMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct queryFieldMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct queryFieldMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct queryFieldMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct queryFieldMapping for Assessment" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct queryFieldMapping for StudentSchoolAssociation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct queryFieldMapping for StudentSchoolAssociation" time="0.002">
    </testcase>
    <testcase classname="when building a schema for StudentCohort" name="should be correct queryFieldMapping for StudentCohort" time="0">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct queryFieldMapping for Section" time="0.001">
    </testcase>
    <testcase classname="when building a Domain Entity subclass" name="should be correct queryFieldMapping for School" time="0.002">
    </testcase>
    <testcase classname="when building an Association subclass" name="should be correct queryFieldMapping for StudentProgramAssociation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\OpenApiRequestBodyCollectionComponentEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="1.585" tests="24">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be a correct schema" time="0.005">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be a correct schema" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be a correct schema - parent name prefix not removed" time="0">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be a correct schema" time="0.025">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when building a schema for studentEducationOrganizationAssociation" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="common descriptor decollisioned top level name should be correct" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be a correct schema for section" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor collection" name="should be a correct schema" time="0.007">
    </testcase>
    <testcase classname="when building a domain entity with a common property with a descriptor collection" name="should be a correct schema" time="0.025">
    </testcase>
    <testcase classname="when building a domain entity referencing another using a shortenTo directive" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with different string properties" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should be a correct schema" time="0">
    </testcase>
    <testcase classname="when domain entity extension references domain entity collection in different namespace" name="should be a correct schema" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with a scalar collection in a common collection in a common collection" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a scalar collection in a common collection in a common collection with some rolenaming" name="should be a correct schema" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\integration\ApiModelAuthoritativeCompare.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:27:29" time="64.558" tests="8">
    <testcase classname="when generating api model and comparing it to data standard 3.2.0-c authoritative artifacts" name="should have no differences" time="0.485">
    </testcase>
    <testcase classname="when generating api model with simple extensions and comparing it to data standard 3.2c authoritative artifacts" name="should have no core file differences" time="0.211">
    </testcase>
    <testcase classname="when generating api model with simple extensions and comparing it to data standard 3.2c authoritative artifacts" name="should have no extension file differences" time="0.224">
    </testcase>
    <testcase classname="when generating api model targeting tech version 5.3 with comparing it to data standard 3.3b authoritative artifacts" name="should have no core file differences" time="0.537">
    </testcase>
    <testcase classname="when generating api model targeting tech version 6.1 with common cardinality extensions and comparing it to data standard 4.0 authoritative artifacts" name="should have no core file differences" time="0.45">
    </testcase>
    <testcase classname="when generating api model targeting tech version 6.1 with common cardinality extensions and comparing it to data standard 4.0 authoritative artifacts" name="should have no extension file differences" time="0.365">
    </testcase>
    <testcase classname="when generating api model targeting tech version 7.1 with common cardinality extensions and comparing it to data standard 4.0 authoritative artifacts" name="should have no core file differences" time="0.51">
    </testcase>
    <testcase classname="when generating api model targeting tech version 7.1 with common cardinality extensions and comparing it to data standard 4.0 authoritative artifacts" name="should have no extension file differences" time="0.678">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\MergeDirective\FindReferencedProperty.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="1.154" tests="42">
    <testcase classname="when looking for property on current entity" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when looking for property on current entity" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for first domain entity on association" name="should build two domain entities" time="0.006">
    </testcase>
    <testcase classname="when looking for first domain entity on association" name="should build one association" time="0">
    </testcase>
    <testcase classname="when looking for first domain entity on association" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for second domain entity on association" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when looking for second domain entity on association" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when looking for second domain entity on association" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for non identity property on current entity" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when looking for non identity property on current entity" name="should return undefined" time="0.001">
    </testcase>
    <testcase classname="when looking for property that does not exist" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when looking for property that does not exist" name="should return undefined" time="0">
    </testcase>
    <testcase classname="when looking for duplicated property role name" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when looking for duplicated property role name" name="should return expected property" time="0">
    </testcase>
    <testcase classname="when looking for deep property" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when looking for deep property" name="should return expected property" time="0">
    </testcase>
    <testcase classname="when looking for non primary key property" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when looking for non primary key property" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent abstract entity" name="should build two domain entities" time="0.002">
    </testcase>
    <testcase classname="when looking for property on parent abstract entity" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when looking for property on parent abstract entity" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent domain entity from subclass" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent domain entity from subclass" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when looking for property on parent domain entity from subclass" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent domain entity from extension" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent domain entity from extension" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent domain entity from extension" name="should return expected property" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from subclass" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from subclass" name="should build one association" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from subclass" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from subclass" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent association from extension" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent association from extension" name="should build one association" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from extension" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent association from extension" name="should return expected property" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from extension across namespaces" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from extension across namespaces" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when looking for property on parent association from extension across namespaces" name="should build one association extension" time="0">
    </testcase>
    <testcase classname="when looking for property on parent association from extension across namespaces" name="should return expected property" time="0.001">
    </testcase>
    <testcase classname="when looking for non identity property on parent domain entity from subclass" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when looking for non identity property on parent domain entity from subclass" name="should build one domain entity subclass" time="0.003">
    </testcase>
    <testcase classname="when looking for non identity property on parent domain entity from subclass" name="should return undefined" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\MergeJsonPathsMappingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="2.299" tests="33">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct mergeJsonPathsMapping" time="0.007">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple collections" name="should be correct mergeJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct mergeJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct mergeJsonPathsMapping for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct mergeJsonPathsMapping for CourseOffering" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct mergeJsonPathsMapping for Session" time="0.002">
    </testcase>
    <testcase classname="when building a domain entity referencing CourseOffering with an implicit merge between School and Session.School" name="should be correct mergeJsonPathsMapping for School" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with nested choice and inline commons" name="should be correct mergeJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Association/DomainEntity collection named with prefix of parent entity" name="should be correct mergeJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with acronym property name" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct mergeJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct mergeJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a descriptor with role name" name="should be correct mergeJsonPathsMapping" time="0.007">
    </testcase>
    <testcase classname="when building domain entity with a descriptor collection with role name" name="should be correct mergeJsonPathsMapping" time="0.003">
    </testcase>
    <testcase classname="when building domain entity with a common with a choice" name="should be correct mergeJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a common and a common collection with parent entity prefix" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with an all-caps property" name="should be correct mergeJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with two school year enumerations, one role named" name="should be correct mergeJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should be correct mergeJsonPathsMapping" time="0.007">
    </testcase>
    <testcase classname="when building a descriptor" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building a school year enumeration" name="should be correct mergeJsonPathsMapping" time="0">
    </testcase>
    <testcase classname="when building a schema for studentEducationOrganizationAssociation" name="should be correct mergeJsonPathsMapping" time="0.008">
    </testcase>
    <testcase classname="when building a domain entity with an inline common property with a descriptor" name="should be correct mergeJsonPathsMapping" time="0.043">
    </testcase>
    <testcase classname="when building a domain entity referencing another using a shortenTo directive" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with role named and pluralized inline common" name="should be correct mergeJsonPathsMapping with &quot;availableCreditConversion&quot; not pluralized" time="0.001">
    </testcase>
    <testcase classname="when a collection reference is to a role named resource that has a schoolid merged away" name="should be correct mergeJsonPathsMapping" time="0.002">
    </testcase>
    <testcase classname="when a collection reference is to a role named resource that has a schoolid merged away" name="should have correct merge coveredBy info" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity extension" name="should be correct mergeJsonPathsMapping" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct mergeJsonPathsMapping for AssessmentAdministrationParticipation" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with rolenamed identity" name="should be correct mergeJsonPathsMapping for AssessmentAdministration" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\generator\IdIndexesGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="1.143" tests="4">
    <testcase classname="when generating id indexes for core namespace table with no id" name="should not generate id index" time="0.002">
    </testcase>
    <testcase classname="when generating id indexes for core namespace table with no type" name="should generate correct id index" time="0.003">
    </testcase>
    <testcase classname="when generating id indexes for core namespace table with type" name="should generate correct id index" time="0.001">
    </testcase>
    <testcase classname="when generating id indexes for extension namespace table with no type" name="should generate correct id index" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\DecimalPropertyValidationInfoEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:32" time="2.005" tests="1">
    <testcase classname="when building a domain entity with decimal properties" name="should collect decimal property validation info for domain entity" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\ForeignKeyCreatingTableEnhancerIntegration.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="1.092" tests="1">
    <testcase classname="when an entity has a role named collection of entities with role named references to another entity" name="should not crash, because ForeignKeyCreatingTableEnhancer correctly matches foreign key columns" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\EducationOrganizationReferenceMetadata\EducationOrganizationReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="1.028" tests="6">
    <testcase classname="when EducationOrganizationReferenceEnhancer enhances namespace with no EducationOrganization" name="should have no education organization reference" time="0.001">
    </testcase>
    <testcase classname="when EducationOrganizationReferenceEnhancer enhances namespace with no EducationOrganization Subclass" name="should have no education organization reference" time="0">
    </testcase>
    <testcase classname="when EducationOrganizationReferenceEnhancer enhances namespace with EducationOrganization Subclass" name="should have education organization reference" time="0.001">
    </testcase>
    <testcase classname="when EducationOrganizationReferenceEnhancer enhances extension namespace with EducationOrganization Subclass" name="should have no core education organization reference" time="0">
    </testcase>
    <testcase classname="when EducationOrganizationReferenceEnhancer enhances extension namespace with EducationOrganization Subclass" name="should have extension education organization reference" time="0.001">
    </testcase>
    <testcase classname="when EducationOrganizationReferenceEnhancer enhances namespace with EducationOrganization Subclass with no identity rename" name="should have extension education organization reference" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\validator\V3LimitedDuplicateNamesInDependencyNamespaces.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="1.175" tests="16">
    <testcase classname="when DEs have different names across dependency-linked namespaces" name="should build one core domain entity" time="0.001">
    </testcase>
    <testcase classname="when DEs have different names across dependency-linked namespaces" name="should build one extension domain entity" time="0.001">
    </testcase>
    <testcase classname="when DEs have different names across dependency-linked namespaces" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when DEs have same names across dependency-linked namespaces" name="should build one core domain entity" time="0.002">
    </testcase>
    <testcase classname="when DEs have same names across dependency-linked namespaces" name="should build one extension domain entity" time="0.001">
    </testcase>
    <testcase classname="when DEs have same names across dependency-linked namespaces" name="should have validation failure for extension entity" time="0.002">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should build one core domain entity" time="0.001">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should build one extension1 domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should build one extension2 domain entity extension" time="0">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when DE has same name as DE extension across dependency-linked namespaces" name="should build one core domain entity" time="0">
    </testcase>
    <testcase classname="when DE has same name as DE extension across dependency-linked namespaces" name="should build one extension domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when DE has same name as DE extension across dependency-linked namespaces" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when DE has same name as Common across dependency-linked namespaces" name="should build one core domain entity" time="0">
    </testcase>
    <testcase classname="when DE has same name as Common across dependency-linked namespaces" name="should build one extension common" time="0.001">
    </testcase>
    <testcase classname="when DE has same name as Common across dependency-linked namespaces" name="should have no validation failures()" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\multi-namespace\MultiNamespace.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="1.143" tests="2">
    <testcase classname="when building a simple core and two simple extension projects" name="should have no validation errors" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have extension domain entities referencing core entity (meaning unified enhancers ran)" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\Enumeration.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="1.599" tests="8">
    <testcase classname="when generating xsd for enumeration" name="should generate enumeration" time="0.015">
    </testcase>
    <testcase classname="when generating xsd for enumeration" name="should generate enumeration item" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to enumeration" name="should generate enumeration" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to enumeration" name="should generate extension domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to enumeration" name="should generate extension domain entity reference to core entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for enumeration in extension namespace with reference to core entity" name="should generate core domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for enumeration in extension namespace with reference to core entity" name="should generate enumeration" time="0">
    </testcase>
    <testcase classname="when generating xsd for enumeration in extension namespace with reference to core entity" name="should generate enumeration item" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\model\Descriptor.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.128" tests="1">
    <testcase classname="when descriptor is required property of domain entity" name="should not crash" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\AssociationSubclass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:31" time="4.136" tests="6">
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate core domain entity1" time="0.011">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate core domain entity2" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate core association" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate extension association" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate extension association as extending core association" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate extension association new property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\diminisher\StudentAssessmentHardcodedSecurityDiminisher.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.068" tests="4">
    <testcase classname="when diminishing StudentAssessment" name="should have ReportedSchool security elements" time="0.002">
    </testcase>
    <testcase classname="when diminishing StudentAssessment with missing resource" name="should throw error" time="0.034">
    </testcase>
    <testcase classname="when diminishing StudentAssessment with invalid json path" name="should throw error" time="0.003">
    </testcase>
    <testcase classname="when diminishing StudentAssessment with missing property" name="should throw error" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\Deprecated\DeprecatedInterchangeItemReferenceWarning.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.075" tests="2">
    <testcase classname="when domain item references no deprecated entity" name="should have no validation failure" time="0.001">
    </testcase>
    <testcase classname="when domain item references deprecated entity" name="should have validation failure" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\EnumerationBasePropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="0.928" tests="10">
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances enumeration" name="should have xsdEnumerationName assigned" time="0.001">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances enumeration" name="should have xsdEnumerationBaseNameWithExtension value same as enumerationName" time="0.001">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances enumeration with extension" name="should have xsdEnumerationName assigned" time="0">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances enumeration with extension" name="should have xsdEnumerationBaseNameWithExtension value with extension" time="0">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances enumeration that ends in Type" name="should have xsdEnumerationName assigned" time="0.001">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances enumeration that ends in Type" name="should have xsdEnumerationBaseNameWithExtension value same as enumerationName" time="0">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances MapTypeEnumeration" name="should have xsdEnumerationName assigned" time="0">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances MapTypeEnumeration" name="should have xsdEnumerationBaseNameWithExtension value same as enumerationName" time="0.001">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances SchoolYearEnumeration" name="should have xsdEnumerationName assigned" time="0.001">
    </testcase>
    <testcase classname="when EnumerationBasePropertiesEnhancer enhances SchoolYearEnumeration" name="should have xsdEnumerationBaseNameWithExtension value same as enumerationName" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SchoolYearEnumerationProperty\SchoolYearEnumerationPropertyMustMatchASchoolYearEnumeration.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.044" tests="8">
    <testcase classname="when school year enumeration property has valid identifier" name="should build one enumeration" time="0.001">
    </testcase>
    <testcase classname="when school year enumeration property has valid identifier" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when school year enumeration property has valid identifier" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when enumeration property has invalid reference" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when enumeration property has invalid reference" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when school year enumeration property is missing namespace reference to core" name="should build one enumeration" time="0.001">
    </testcase>
    <testcase classname="when school year enumeration property is missing namespace reference to core" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when school year enumeration property is missing namespace reference to core" name="should have validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\enhancer\TemplateSpecificTablePropertyEnhancerV6x.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="0.832" tests="9">
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table with alternate keys" name="should have hasAlternateKeys property set to true" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table with alternate keys" name="should have correct alternate key order" time="0.002">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table with primary keys" name="should have correct primary key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table with foreign keys" name="should have correct foreign key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table with foreign keys" name="should have correct foreign key column order" time="0.002">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table with unique indexes" name="should have correct unique index order" time="0.006">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table with primary and non primary keys" name="should have correct column order with primary keys first" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for table" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancerV6x enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for columns" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\MergeDirective\FailReferencedPropertyDoesNotExist.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.067" tests="29">
    <testcase classname="when validating merge property path" name="should build one domain entity" time="0.002">
    </testcase>
    <testcase classname="when validating merge property path" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when validating path with no matching merge property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating path with no matching merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting non identity on current" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting non identity on current" name="should have one validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting identity on current" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting identity on current" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity on current" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity on current" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating path with merge property targeting identity on reference" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting identity on reference" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity on reference" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity on reference" name="should have one validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting optional on common type" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting optional on common type" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting optional on common type" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity inline common type" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity inline common type" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity inline common type" name="should have one validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity choice type" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity choice type" name="should build one choice" time="0.002">
    </testcase>
    <testcase classname="when validating path with merge property targeting non identity choice type" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting non identity choice type" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting non identity choice type" name="should build one choice" time="0">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting non identity choice type" name="should have one validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting identity choice type" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting identity choice type" name="should build one choice" time="0">
    </testcase>
    <testcase classname="when validating path with merge property collection targeting identity choice type" name="should have one validation failure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\ApiEntityMappingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.364" tests="50">
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have ClassPeriod and CourseOffering in Section reference groups" time="0.002">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have LocalCourseCode, SchoolId, and SectionIdentifier in Section flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property paths in Section flattened identity properties " time="0.002">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property chain in Section flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should not have any descriptor property mappings in Section" time="0">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have School in CourseOffering reference groups" time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have LocalCourseCode and SchoolId in CourseOffering flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should not have any descriptor property mappings in CourseOffering" time="0">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property paths in CourseOffering flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property chain in CourseOffering flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have School in ClassPeriod reference groups" time="0">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have ClassPeriodName and SchoolId in ClassPeriod flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should not have any descriptor property mappings in ClassPeriod" time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property paths in ClassPeriod flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property chain in ClassPeriod flattened identity properties " time="0.011">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have no reference groups in School" time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have SchoolId in School flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property paths in School flattened identity properties " time="0">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should have correct property chain in School flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when demonstrating key unification via entity referencing two entities each referencing a 3rd as their identity" name="should not have any descriptor property mappings in School" time="0">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have correct reference groups for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have correct flattened identity properties for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have correct property paths in flattened identity properties for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have correct property chain in flattened identity properties for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have no reference groups for Calendar" time="0">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have correct flattened identity properties for Calendar" time="0">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have correct property paths in flattened identity properties for Calendar" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with reference to domain entity with school year enumeration as part of identity" name="should have correct property chain in flattened identity properties for Calendar" time="0.001">
    </testcase>
    <testcase classname="when demonstrating descriptor collections and scalar descriptors on one entity" name="should have two descriptor collected properties" time="0">
    </testcase>
    <testcase classname="when demonstrating descriptor collections and scalar descriptors on one entity" name="should have one collection collected property" time="0.001">
    </testcase>
    <testcase classname="when demonstrating descriptor collections and scalar descriptors on one entity" name="should have one scalar collected property" time="0.001">
    </testcase>
    <testcase classname="when demonstrating descriptor collections and scalar descriptors on one entity" name="should have correct property paths in flattened identity properties " time="0">
    </testcase>
    <testcase classname="when demonstrating descriptor collections and scalar descriptors on one entity" name="should have correct property chain in flattened identity properties " time="0">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference" name="should have one descriptor collected property" time="0">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference" name="should have correct collected property values" time="0.001">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference" name="should have correct property paths in flattened identity properties " time="0">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference" name="should have correct property chain in flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference which is role named" name="should have one descriptor collected property" time="0">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference which is role named" name="should have correct descriptor name" time="0.001">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference which is role named" name="should have correct property paths in flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when one entity has a descriptor on an inline common reference which is role named" name="should have correct property chain in flattened identity properties " time="0">
    </testcase>
    <testcase classname="when a role named merge follows a role named merge with school year enumeration as one leaf target" name="should have correct ReportCard reference groups" time="0.002">
    </testcase>
    <testcase classname="when a role named merge follows a role named merge with school year enumeration as one leaf target" name="should have correct ReportCard flattened identity properties " time="0">
    </testcase>
    <testcase classname="when a role named merge follows a role named merge with school year enumeration as one leaf target" name="should have correct property paths in ReportCard flattened identity properties " time="0.028">
    </testcase>
    <testcase classname="when a role named merge follows a role named merge with school year enumeration as one leaf target" name="should have correct property chain in ReportCard flattened identity properties " time="0.003">
    </testcase>
    <testcase classname="when a role named resource has a schoolid merged away" name="should have correct Grade reference groups" time="0.001">
    </testcase>
    <testcase classname="when a role named resource has a schoolid merged away" name="should have Grade flattened identity properties with one of two SchoolIds merged away" time="0.002">
    </testcase>
    <testcase classname="when a role named resource has a schoolid merged away" name="should have correct property paths in Grade flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when a role named resource has a schoolid merged away" name="should have correct property chain in Grade flattened identity properties " time="0.001">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should have the referenced domain entitys identity property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-recordownership\test\enhancer\AddOwnershipTokenColumnTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="0.961" tests="2">
    <testcase classname="when AddOwnershipTokenColumnTableEnhancer enhances aggregate root table for ODS/API 5.1" name="should have hasOwnershipTokenColumn property set to true" time="0.001">
    </testcase>
    <testcase classname="when AddOwnershipTokenColumnTableEnhancer enhances non-aggregate root table for ODS/API 5.1" name="should have hasOwnershipTokenColumn property set to true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\integration\MultiNamespace.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.35" tests="7">
    <testcase classname="when building a simple core and two simple extension projects" name="should have no validation errors" time="0.002">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have core domain entity" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have gb domain entity" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have sample domain entity" time="0.002">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have core ods table" time="0.007">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have gb ods table with reference to core" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have sample ods table with reference to core" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\generator\InterchangeOrderMetadataGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.112" tests="13">
    <testcase classname="when generating core interchange" name="should generate correct filename" time="0.001">
    </testcase>
    <testcase classname="when generating core interchange" name="should generate valid xsd" time="0.009">
    </testcase>
    <testcase classname="when generating core interchange on DS 5.1" name="should generate correct filename" time="0">
    </testcase>
    <testcase classname="when generating core interchange on DS 5.1" name="should generate valid xsd" time="0.002">
    </testcase>
    <testcase classname="when generating extension interchange" name="should generate correct filename" time="0">
    </testcase>
    <testcase classname="when generating extension interchange" name="should generate valid xsd" time="0.002">
    </testcase>
    <testcase classname="when generating core and extension interchange" name="should generate correct filenames" time="0">
    </testcase>
    <testcase classname="when generating core and extension interchange" name="should generate valid core xsd" time="0.002">
    </testcase>
    <testcase classname="when generating core and extension interchange" name="should generate valid extension xsd" time="0.003">
    </testcase>
    <testcase classname="when generating core and extension interchange with same interchange name" name="should generate correct filenames" time="0.002">
    </testcase>
    <testcase classname="when generating core and extension interchange with same interchange name" name="should generate valid core xsd" time="0.006">
    </testcase>
    <testcase classname="when generating core and extension interchange with same interchange name" name="should generate valid extension xsd" time="0.005">
    </testcase>
    <testcase classname="when generating in targetTechnologyVersion &gt;= 6.1.0" name="should return empty generatedOutput" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\TypeCoercionJsonPathsEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:34" time="1.574" tests="9">
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct booleanJsonPaths for DomainEntityName" time="0.002">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct dateJsonPaths for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct numericJsonPaths for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building simple domain entity with all the simple non-collections" name="should be correct dateTimeJsonPaths for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building domain entity with collections" name="should be correct booleanJsonPaths and numericJsonPaths for AssessmentScoreRangeLearningStandard" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with all the simple non-collections" name="should be correct booleanJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with all the simple non-collections" name="should be correct dateJsonPaths for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with all the simple non-collections" name="should be correct dateTimeJsonPaths for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with all the simple non-collections" name="should be correct numericJsonPaths for DomainEntityName" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Descriptor\DescriptorMapTypeItemsMustBeUnique.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="0.931" tests="6">
    <testcase classname="when map type enumeration items have different short descriptions" name="should build one descriptor" time="0.002">
    </testcase>
    <testcase classname="when map type enumeration items have different short descriptions" name="should have no validation failures()" time="0.008">
    </testcase>
    <testcase classname="when map type enumeration items have duplicate short descriptions" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when map type enumeration items have duplicate short descriptions" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when map type enumeration items have multiple duplicate short descriptions" name="should build one descriptor" time="0.033">
    </testcase>
    <testcase classname="when map type enumeration items have multiple duplicate short descriptions" name="should have multiple validation failure" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\AssociationExtension.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.486" tests="6">
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate core domain entity1" time="0.01">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate core domain entity2" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate core association" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate extension association" time="0.003">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate extension association as extending core association" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for association extension in extension namespace based on core association" name="should generate extension association new property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\diminisher\DisciplineActionHardcodedSecurityDiminisher.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.115" tests="4">
    <testcase classname="when diminishing DisciplineAction" name="should have ResponsibilitySchool security elements" time="0.002">
    </testcase>
    <testcase classname="when diminishing DisciplineAction with missing resource" name="should throw error" time="0.018">
    </testcase>
    <testcase classname="when diminishing DisciplineAction with invalid json path" name="should throw error" time="0.002">
    </testcase>
    <testcase classname="when diminishing DisciplineAction with with missing property" name="should throw error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\security\StudentSecurableElementEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.203" tests="7">
    <testcase classname="when building Student domain entity and unrelated DisciplineAction" name="should have studentSecurableElements for Student" time="0.003">
    </testcase>
    <testcase classname="when building Student domain entity and unrelated DisciplineAction" name="should have no studentSecurableElements for DisciplineAction" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Student identity" name="should have simple studentSecurableElements" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Student not part of identity" name="should have no studentSecurableElements" time="0.003">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct studentSecurableElements for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing two referencing another with identity" name="should be two studentSecurableElements for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be empty studentSecurableElements for Assessment" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\MergeCoveringFlattenedIdentityPropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.568" tests="3">
    <testcase classname="when a role named resource has a schoolid merged away" name="should have GradingPeriod.School FIP pointing to merge covering FIP" time="0.004">
    </testcase>
    <testcase classname="when a reference is to a resource that has a reference with two identity properties merged away" name="should have SurveySectionResponse.SurveyResponse FIP pointing to merge covering FIP" time="0.002">
    </testcase>
    <testcase classname="when a reference is to a resource that has two identity properties directly merged away" name="should have SurveySectionResponse.SurveyResponse FIP pointing to merge covering FIP" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\MergeDirective\SourcePropertyPathMustExist.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.551" tests="30">
    <testcase classname="when validating domain entity has merge property" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property and entity is wrong" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property and entity is wrong" name="should have one validation failure" time="0.008">
    </testcase>
    <testcase classname="when validating domain entity has merge property and property is wrong" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating domain entity has merge property and property is wrong" name="should have one validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating domain entity has merge property on common type" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property on common type" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating domain entity has merge property on school year enumeration" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property on school year enumeration" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity extension has merge property" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating domain entity extension has merge property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity subclass has merge property" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity subclass has merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating association has merge property" name="should build three domain entities" time="0">
    </testcase>
    <testcase classname="when validating association has merge property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating association extension has merge property" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating association extension has merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating association subclass has merge property" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating association subclass has merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating abstract entity has merge property" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating abstract entity has merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating association subclass extension" name="should build correct entities" time="0.001">
    </testcase>
    <testcase classname="when validating association subclass extension" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property across namespaces" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating domain entity has merge property across namespaces" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property across namespaces and entity is wrong" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property across namespaces and entity is wrong" name="should have one validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating domain entity has simple property as merge property" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has simple property as merge property" name="should have no validation failure" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\InlineCommonPropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="0.9" tests="5">
    <testcase classname="when creating columns for inline common with is collection property" name="should return no columns" time="0.001">
    </testcase>
    <testcase classname="when creating columns for inline common with only one property" name="should return a single column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for inline common with two properties" name="should return two columns" time="0">
    </testcase>
    <testcase classname="when creating columns for inline common with two properties" name="should return a string column" time="0.008">
    </testcase>
    <testcase classname="when creating columns for inline common with two properties" name="should return an integer column" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\EnumerationPropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="0.937" tests="6">
    <testcase classname="when creating columns for enumeration property" name="should return a column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for primary key enumeration property" name="should return a primary key column" time="0.007">
    </testcase>
    <testcase classname="when creating columns for identity rename enumeration property" name="should return a primary key column with base key name" time="0.004">
    </testcase>
    <testcase classname="when creating columns for nullable enumeration property" name="should return a column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for primary key enumeration property with suppress primary key creation strategy" name="should return a column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity rename enumeration property with suppress primary key creation strategy" name="should return a column with base key name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Interchange\InterchangeMustNotRedeclareIdentityName.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="1.156" tests="6">
    <testcase classname="when validating interchange identity template has different names" name="should build one interchange" time="0.002">
    </testcase>
    <testcase classname="when validating interchange identity template has different names" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template has duplicate names" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template has duplicate names" name="should have validation failures" time="0.003">
    </testcase>
    <testcase classname="when validating interchange identity template has multiple duplicate names" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template has multiple duplicate names" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\DomainEntityBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.387" tests="118">
    <testcase classname="when building simple domain entity in extension namespace" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should have correct namespace" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should have correct project extension" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should not be abstract" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should not have updates set" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should have correct documentation" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should have two properties" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should have string property" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity in extension namespace" name="should not have queryable fields" time="0">
    </testcase>
    <testcase classname="when building deprecated domain entity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when building deprecated domain entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated domain entity" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building duplicate domain entities" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when building duplicate domain entities" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building duplicate domain entities" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate domain entities" name="should have validation failures for each entity" time="0.009">
    </testcase>
    <testcase classname="when building duplicate property names" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate property names" name="should have validation failures for each property" time="0.001">
    </testcase>
    <testcase classname="when building duplicate property names with different role name names" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building duplicate property names with same role name name" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate property names with same role name name" name="should have validation failures for each property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should have correct namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should have no project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should not be abstract" time="0.002">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should not have updates set" time="0.001">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building domain entity without extension" name="should have string property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a role name" name="should have common property" time="0">
    </testcase>
    <testcase classname="when building domain entity with a role name" name="should have role name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a role name and shorten to" name="should have common property" time="0">
    </testcase>
    <testcase classname="when building domain entity with a role name and shorten to" name="should have role name" time="0">
    </testcase>
    <testcase classname="when building domain entity with a role name and shorten to" name="should have shorten to" time="0">
    </testcase>
    <testcase classname="when building domain entity with choice" name="should have choice property" time="0">
    </testcase>
    <testcase classname="when building domain entity with choice" name="should have correct documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with inline common reference" name="should have inline common property" time="0">
    </testcase>
    <testcase classname="when building domain entity with inline common reference" name="should have correct documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with queryable field" name="should have string property" time="0">
    </testcase>
    <testcase classname="when building domain entity with queryable field" name="should have queryable field" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with queryable only property" name="should have string property only" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with queryable only property" name="should have queryable field separate" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared decimal reference" name="should have shared decimal property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared decimal reference" name="should have correct referenced type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared decimal reference without name" name="should have shared decimal property named after type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared decimal reference without name" name="should have correct referenced type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared integer reference" name="should have shared integer property" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared integer reference" name="should have correct referenced type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared integer reference" name="should have correct sourcemap" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared integer reference without name" name="should have shared integer property named after type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared integer reference without name" name="should have correct referenced type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared integer reference without name" name="should have correct sourcemap" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared short reference" name="should have shared short property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared short reference" name="should have correct referenced type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared short reference without name" name="should have shared short property named after type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared short reference without name" name="should have correct referenced type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared string reference" name="should have shared string property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared string reference" name="should have correct referenced type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared string reference without name" name="should have shared string property named after type" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared string reference without name" name="should have correct referenced type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with shared string reference inheriting documentation" name="should have shared string property" time="0">
    </testcase>
    <testcase classname="when building domain entity with shared string reference inheriting documentation" name="should have inherited flag set instead of documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with domain entity reference inheriting documentation" name="should have domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with domain entity reference inheriting documentation" name="should have inherited flag set instead of documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with cascading updates" name="should have updates set" time="0.001">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should be found in entity repository" time="0.005">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should have correct namespace" time="0">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should have correct project extension" time="0.001">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should be abstract" time="0">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should not have updates set" time="0">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should have correct documentation" time="0.001">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should have two properties" time="0">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should have string property" time="0.001">
    </testcase>
    <testcase classname="when building abstract entity in extension namespace" name="should not have queryable fields" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with no project extension" name="should have extraneous input and mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with lowercase project extension" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with no namespace" name="should have missing namespace id error" time="0">
    </testcase>
    <testcase classname="when building domain entity with no end namespace" name="should have extraneous input eof error" time="0">
    </testcase>
    <testcase classname="when building domain entity with no top level entity" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building domain entity with no domain entity name" name="should not build domain entity" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with no domain entity name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building domain entity with lowercase domain entity name" name="should not build domain entity" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with lowercase domain entity name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building domain entity with no properties" name="should have namespace" time="0.004">
    </testcase>
    <testcase classname="when building domain entity with no properties" name="should not have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity with no properties" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with no properties" name="should not have any properties" time="0">
    </testcase>
    <testcase classname="when building domain entity with no properties" name="should have mismatched input error" time="0.006">
    </testcase>
    <testcase classname="when building domain entity with invalid trailing text" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with invalid trailing text" name="should not have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity with invalid trailing text" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with invalid trailing text" name="should have two properties" time="0">
    </testcase>
    <testcase classname="when building domain entity with invalid trailing text" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building domain entity with invalid trailing text" name="should have string property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building domain entity source map" name="should have type property" time="0">
    </testcase>
    <testcase classname="when building domain entity source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building domain entity source map" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity source map" name="should have allowPrimaryKeyUpdates" time="0">
    </testcase>
    <testcase classname="when building domain entity source map" name="should have isAbstract" time="0">
    </testcase>
    <testcase classname="when building domain entity source map" name="should have line, column, text for each property" time="0.001">
    </testcase>
    <testcase classname="when building abstract entity source map" name="should have type property" time="0.001">
    </testcase>
    <testcase classname="when building abstract entity source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building abstract entity source map" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building abstract entity source map" name="should have allowPrimaryKeyUpdates" time="0">
    </testcase>
    <testcase classname="when building abstract entity source map" name="should have isAbstract" time="0">
    </testcase>
    <testcase classname="when building abstract entity source map" name="should have line, column, text for each property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a potentially logical association property" name="should be potentially logical" time="0">
    </testcase>
    <testcase classname="when building domain entity with a potentially logical domain entity property" name="should be potentially logical" time="0">
    </testcase>
    <testcase classname="when building domain entity without a potentially logical association property" name="should not be potentially logical" time="0.001">
    </testcase>
    <testcase classname="when building domain entity without a potentially logical domain entity property" name="should not be potentially logical" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\CommonExtensionPropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="1.054" tests="6">
    <testcase classname="when building common property extension table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building common property extension table" name="should have three columns with two primary keys" time="0.001">
    </testcase>
    <testcase classname="when building common property extension table" name="should have correct column property paths" time="0.002">
    </testcase>
    <testcase classname="when building common property extension table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building common property extension table" name="should have one foreign key" time="0">
    </testcase>
    <testcase classname="when building common property extension table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\integration\ColumnOrderingV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.329" tests="32">
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have two tables for association" time="0.002">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have correct column order for main table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have correct foreign key order for main table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for main table of association" time="0">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have correct column order for sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have correct foreign key order for sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for sub table of association" time="0">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have one table for GraduationPlan" time="0">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 7.0" name="should have correct column order for main table of GraduationPlan" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have three tables for association" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct column order for main table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct foreign key order for main table of association" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for main table of association" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct column order for sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct foreign key order for sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for sub table of association" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct column order for sub-sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct foreign key order for sub-sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for sub-sub table of association" time="0.001">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 7.0" name="should have two tables for entity" time="0.001">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 7.0" name="should have correct column order for main table of entity" time="0">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 7.0" name="should have correct foreign key order for main table of entity" time="0.001">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for main table of entity" time="0">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 7.0" name="should have correct column order for sub table of entity" time="0">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 7.0" name="should have correct foreign key order for sub table of entity" time="0.001">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for sub table of entity" time="0">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 7.0" name="should have two tables for entity" time="0.001">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 7.0" name="should have correct column order for main table of entity" time="0.001">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 7.0" name="should have correct foreign key order for main table of entity" time="0">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 7.0" name="should have correct column order for sub table of entity" time="0.001">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 7.0" name="should have correct foreign key order for sub table of entity" time="0">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 7.0" name="should have correct foreign key subtable relationship for sub table of entity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\OpenApiRequestBodyCollectionComponentSubclassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:35" time="1.406" tests="4">
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be a correct schema" time="0.003">
    </testcase>
    <testcase classname="when building domain entity subclass with reference collection in subclass" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass in extension has a DS common collection" name="should be a correct schema" time="0.001">
    </testcase>
    <testcase classname="when domain entity superclass in DS has a common collection" name="should have no collection schema" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\multi-namespace\MultiNamespace.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:33" time="4.272" tests="7">
    <testcase classname="when building a simple core and two simple extension projects" name="should have no validation errors" time="0.002">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have core domain entity" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have gb domain entity" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have sample domain entity" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have core entity definition" time="0.001">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have gb entity definition" time="0">
    </testcase>
    <testcase classname="when building a simple core and two simple extension projects" name="should have sample entity definition" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\validator\OdsApiIgnoresRequiredOnChoicePropertiesInExtensions.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="1.052" tests="3">
    <testcase classname="when choice property in extension is required" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when choice property in extension is optional" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when choice property in core is required" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\ArrayUniquenessConstraintEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="1.432" tests="10">
    <testcase classname="when building simple domain entity with a simple collection" name="should be correct arrayUniquenessConstraints" time="0.001">
    </testcase>
    <testcase classname="when building with scalar in common collection with same name as scalar outside collection" name="should be correct arrayUniquenessConstraints" time="0">
    </testcase>
    <testcase classname="when building domain entity with nested choice and common collection" name="should be correct arrayUniquenessConstraints" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a simple common collection" name="should be correct arrayUniquenessConstraints" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with common collection and descriptor identity in superclass" name="should be correct arrayUniquenessConstraints" time="0">
    </testcase>
    <testcase classname="when building association with a common collection in a common collection" name="should be correct arrayUniquenessConstraints" time="0.001">
    </testcase>
    <testcase classname="when building entity with multiple nested collections in a common collection" name="should be correct arrayUniquenessConstraints with multiple nested constraints" time="0.002">
    </testcase>
    <testcase classname="when building entity with scalar collection in a common collection on an inline common" name="should be correct arrayUniquenessConstraints with scalar collection and common collection" time="0.001">
    </testcase>
    <testcase classname="when building entity with scalar collections on a scalar common" name="should be correct arrayUniquenessConstraints with scalar collection on scalar common" time="0">
    </testcase>
    <testcase classname="SIMPLE: entity with two different array collections (demonstrates the bug)" name="shows that different descriptor properties create separate constraints" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\CommonType.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="1.476" tests="6">
    <testcase classname="when generating xsd for common type" name="should generate common type" time="0.002">
    </testcase>
    <testcase classname="when generating xsd for common type" name="should generate common type property" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core common type" name="should generate core common type" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for domain entity in extension namespace with reference to core common type" name="should generate extension domain entity" time="0">
    </testcase>
    <testcase classname="when generating xsd for common type in extension namespace with reference to core entity" name="should generate core domain entity" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for common type in extension namespace with reference to core entity" name="should generate extension common type" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\MergeScenarios\OutPathsToSameEntityMustHaveMergeDirectiveOrRoleName.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="1.127" tests="31">
    <testcase classname="when domain entity has no multiple out paths to the same entity" name="should build two domain entities" time="0.002">
    </testcase>
    <testcase classname="when domain entity has no multiple out paths to the same entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity but do not start with identities" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity but do not start with identities" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity that start with identities but are not identities all the way" name="should build four domain entities" time="0">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity that start with identities but are not identities all the way" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity that start with identities and are identities all the way" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity that start with identities and are identities all the way" name="should have two validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity and only one starts with identities and both are identities the rest of the way" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity and only one starts with identities and both are identities the rest of the way" name="should have two validation failures" time="0.002">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity and only one starts with identities and both are not identities the rest of the way" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity has two out paths to the same entity and only one starts with identities and both are not identities the rest of the way" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity extension has out paths without referencing same entity" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension has out paths without referencing same entity" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension has out paths without referencing same entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity extension has out paths to the same entity as base and only base path starts with identities and both are identities the rest of the way" name="should build four domain entities" time="0.002">
    </testcase>
    <testcase classname="when domain entity extension has out paths to the same entity as base and only base path starts with identities and both are identities the rest of the way" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when domain entity extension has out paths to the same entity as base and only base path starts with identities and both are identities the rest of the way" name="should have two validation failures" time="0.002">
    </testcase>
    <testcase classname="when domain entity subclass has out paths without referencing same entity" name="should build three domain entities in core" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has out paths without referencing same entity" name="should build one domain entity in extension" time="0">
    </testcase>
    <testcase classname="when domain entity subclass has out paths without referencing same entity" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass has out paths without referencing same entity" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has out paths to the same entity as base and only base path starts with identities and both are identities the rest of the way" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has out paths to the same entity as base and only base path starts with identities and both are identities the rest of the way" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass has out paths to the same entity as base and only base path starts with identities and both are identities the rest of the way" name="should have two validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity has reference to entity with identity of shared string" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when domain entity has reference to entity with identity of shared string" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when domain entity has reference to entity with identity of shared string" name="should build four domain entities" time="0">
    </testcase>
    <testcase classname="when domain entity has reference to entity with identity of shared string" name="should have two validation failures" time="0.003">
    </testcase>
    <testcase classname="when domain entity in extension namespace has two identity out paths to different entities in core namespace that share an identity element" name="should have two validation failures" time="0.002">
    </testcase>
    <testcase classname="when domain entity in extension namespace has two non-identity out paths to different entities in core namespace that share an identity element" name="should have no validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\DescriptorBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="1.143" tests="104">
    <testcase classname="when building descriptor without map type" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building descriptor without map type" name="should not have map type enumeration" time="0.001">
    </testcase>
    <testcase classname="when building deprecated descriptor" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when building deprecated descriptor" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated descriptor" name="should be deprecated" time="0.008">
    </testcase>
    <testcase classname="when building multiple descriptors" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when building multiple descriptors" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building multiple descriptors" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building multiple descriptors" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have no properties" time="0">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have optional map type enumeration" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have map type enumeration in entityRepository" time="0">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have map type enumeration documentation" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have map type enumeration with one enumeration item" time="0">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have enumeration item with short description" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with optional map type" name="should have enumeration item with documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have no properties" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have required map type enumeration" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have map type enumeration in entityRepository" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have map type enumeration documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have map type enumeration with one enumeration item" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have enumeration item with short description" time="0">
    </testcase>
    <testcase classname="when building descriptor with required map type" name="should have enumeration item with documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with no descriptor name" name="should not build descriptor" time="0">
    </testcase>
    <testcase classname="when building descriptor with no descriptor name" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with lowercase descriptor name" name="should build no descriptor" time="0">
    </testcase>
    <testcase classname="when building descriptor with lowercase descriptor name" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should be found in entity repository but with lowercase prefix ignored" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should have no properties" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should not have map type enumeration" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have no properties" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have required map type enumeration" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have map type enumeration in entityRepository" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should not  have map type enumeration documentation" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have map type enumeration with one enumeration item" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have enumeration item with short description" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have enumeration item with documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with no documentation in map type" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have no properties" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should not have required map type enumeration" time="0">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have map type enumeration in entityRepository" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have map type enumeration documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have map type enumeration with no enumeration item" time="0">
    </testcase>
    <testcase classname="when building descriptor with no enumeration item in map type" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should be found in entity repository but with lowercase prefix ignored" time="0">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should have namespace" time="0.002">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should not have map type enumeration" time="0.002">
    </testcase>
    <testcase classname="when building descriptor with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building descriptor source map with optional map type" name="should have type" time="0">
    </testcase>
    <testcase classname="when building descriptor source map with optional map type" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building descriptor source map with optional map type" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building descriptor source map with optional map type" name="should have isMapTypeOptional" time="0">
    </testcase>
    <testcase classname="when building descriptor source map with optional map type" name="should have line, column, text for each property" time="0.001">
    </testcase>
    <testcase classname="when building descriptor source map with required map type" name="should have isMapTypeRequired" time="0.001">
    </testcase>
    <testcase classname="when building descriptor source map with required map type" name="should have mapTypeEnumeration" time="0">
    </testcase>
    <testcase classname="when building descriptor source map with required map type" name="should have source map with line, column, text for each property" time="0.001">
    </testcase>
    <testcase classname="when building required map type enumeration source map" name="should have type" time="0">
    </testcase>
    <testcase classname="when building required map type enumeration source map" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building required map type enumeration source map" name="should have enumerationItems" time="0">
    </testcase>
    <testcase classname="when building required map type enumeration source map" name="should have line, column, text for each property" time="0.002">
    </testcase>
    <testcase classname="when building map type enumeration item source map" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building map type enumeration item source map" name="should have documentation" time="0.002">
    </testcase>
    <testcase classname="when building map type enumeration item source map" name="should have shortDescription" time="0.001">
    </testcase>
    <testcase classname="when building map type enumeration item source map" name="should have line, column, text for each property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\CopyPropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="0.935" tests="1">
    <testcase classname="when enhancing domainEntity with string properties" name="should add identity property only to domainEntity xsdIdentityProperties" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntitySubclass\DomainEntitySubclassIdentityRenameMustNotExistForMultiPropertyIdentity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.028" tests="14">
    <testcase classname="when domain entity subclass renames base identity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity across namespace" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity across namespace" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity across namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity subclass does not rename identity" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when domain entity subclass does not rename identity" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass does not rename identity" name="should have no validation failures" time="0.003">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity more than once" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity more than once" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity more than once" name="should have validation failures" time="0.021">
    </testcase>
    <testcase classname="when domain entity subclass extends non existent entity" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass extends non existent entity" name="should have validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationExtension\AssociationExtensionMustNotRedeclareProperties.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.103" tests="8">
    <testcase classname="when association extension correctly has different property names" name="should build one association extension" time="0.005">
    </testcase>
    <testcase classname="when association extension correctly has different property names" name="should have no validation failures()" time="0.002">
    </testcase>
    <testcase classname="when association extension has duplicate property name" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when association extension has duplicate property name" name="should have validation failures()" time="0.002">
    </testcase>
    <testcase classname="when association extension has duplicate base property name but different role names" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when association extension has multiple duplicates" name="should have validation failures()" time="0.013">
    </testcase>
    <testcase classname="when association extension has duplicate common property" name="should have validation failures()" time="0.002">
    </testcase>
    <testcase classname="when association extension has duplicate common extension override property" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\ReferenceComponentEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.13" tests="7">
    <testcase classname="when building simple domain entity referencing another" name="should have the referenced domain entitys identity property" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity referencing a descriptor as part of identity" name="should have the descriptor property without a group since descriptors have no identity properties" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity referencing another referencing another without identity" name="should have the referenced domain entitys identity property" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity referencing another referencing another with identity" name="should have the referenced domain entitys identity property" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity referencing another in different namespace" name="should have the referenced domain entitys identity property" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension references domain entity in different namespace" name="should have the referenced domain entitys identity property" time="0.002">
    </testcase>
    <testcase classname="when building domain entity referencing another which has inline common with identity property" name="should have the referenced domain entitys identity property" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\DomainEntityExtensionBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="0.962" tests="45">
    <testcase classname="when building domain entity extension in extension namespace" name="should build one domain entity extension" time="0.002">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should be found in entity repository" time="0.019">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should have extendee name" time="0">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should have base entity namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building deprecated domain entity extension" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when building deprecated domain entity extension" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated domain entity extension" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace extending core entity" name="should have extendee name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace extending core entity" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity extension in extension namespace extending core entity" name="should have base entity namespace" time="0.001">
    </testcase>
    <testcase classname="when building duplicate domain entity extensions" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when building duplicate domain entity extensions" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate domain entity extensions" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate domain entity extensions" name="should have validation failures for each entity" time="0.005">
    </testcase>
    <testcase classname="when building domain entity extension with no domain entity extension name" name="should not build domain entity extension" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with no domain entity extension name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with lowercase domain entity extension name" name="should not build domain entity extension" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with lowercase domain entity extension name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should have extendee name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with no property" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should have extendee name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building domain entity extension with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension source map" name="should have type property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building domain entity extension source map" name="should have baseEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity extension source map" name="should have correct line, column, text" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CrossSimpleProperty\SimplePropertiesCannotDuplicateNames.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.217" tests="26">
    <testcase classname="when two integer properties in different DEs have the same name" name="should build two domain entities, and one integer property" time="0.001">
    </testcase>
    <testcase classname="when two integer properties in different DEs have the same name" name="should have validation failures for each entity" time="0.01">
    </testcase>
    <testcase classname="when two integer properties in different DEs in different namespaces have the same name" name="should build two domain entities, and one integer property" time="0.001">
    </testcase>
    <testcase classname="when two integer properties in different DEs in different namespaces have the same name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when an integer property and a decimal property in different DEs have the same name" name="should build two domain entities, one integer property, one decimal property" time="0.001">
    </testcase>
    <testcase classname="when an integer property and a decimal property in different DEs have the same name" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when a integer property and a string property in different DEs have the same name" name="should build two domain entities, one integer property, one string property" time="0.001">
    </testcase>
    <testcase classname="when a integer property and a string property in different DEs have the same name" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when an string property and a string property in different DEs have the same name" name="should build two domain entities, two string properties" time="0.001">
    </testcase>
    <testcase classname="when an string property and a string property in different DEs have the same name" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when an string property and a decimal property in different DEs have the same name" name="should build two domain entities, one string property, one decimal property" time="0.002">
    </testcase>
    <testcase classname="when an string property and a decimal property in different DEs have the same name" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when an decimal property and a decimal property in different DEs have the same name" name="should build two domain entities, two decimal properties" time="0.005">
    </testcase>
    <testcase classname="when an decimal property and a decimal property in different DEs have the same name" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when a decimal property and a shared decimal property in different DEs have the same name" name="should build two domain entities, one shared decimal, one decimal property" time="0.001">
    </testcase>
    <testcase classname="when a decimal property and a shared decimal property in different DEs have the same name" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when a string property and a shared string property in different DEs have the same name" name="should build two domain entities, one shared string, one string property" time="0.001">
    </testcase>
    <testcase classname="when a string property and a shared string property in different DEs have the same name" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when a string property and a shared string property in different DEs in different namespaces have the same name" name="should build two domain entities, one shared string, one string property" time="0.001">
    </testcase>
    <testcase classname="when a string property and a shared string property in different DEs in different namespaces have the same name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when an integer property and a shared integer property in different DEs have the same name" name="should build two domain entities, one shared integer, one integer property" time="0.001">
    </testcase>
    <testcase classname="when an integer property and a shared integer property in different DEs have the same name" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when a short property and a shared short property in different DEs have the same name" name="should build two domain entities, one shared short, one short property" time="0.006">
    </testcase>
    <testcase classname="when a short property and a shared short property in different DEs have the same name" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when a string property and a shared decimal property in different DEs have the same name" name="should build two domain entities, one shared string, one string property" time="0.001">
    </testcase>
    <testcase classname="when a string property and a shared decimal property in different DEs have the same name" name="should have validation failures for each entity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\enhancer\TemplateSpecificTablePropertyEnhancerV6x.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.154" tests="9">
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with alternate keys" name="should have hasAlternateKeys property set to true" time="0.002">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with alternate keys" name="should have correct alternate key order" time="0.009">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with primary keys" name="should have correct primary key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with foreign keys" name="should have correct foreign key order" time="0.002">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with foreign keys" name="should have correct foreign key column order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with unique indexes" name="should have correct unique index order" time="0">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with primary and non primary keys" name="should have correct column order with primary keys first" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for table" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for columns" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationExtension\AssociationExtensionMustNotBeInSameNamespaceAsBase.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.12" tests="4">
    <testcase classname="when association extension is in correct namespace" name="should build one association extension" time="0.002">
    </testcase>
    <testcase classname="when association extension is in correct namespace" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when association extension is in core namespace" name="should build one association extension" time="0">
    </testcase>
    <testcase classname="when association extension is in core namespace" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\DomainEntitySubclassBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.074" tests="77">
    <testcase classname="when building domain entity subclass in extension namespace" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should have base namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building deprecated domain entity subclass" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when building deprecated domain entity subclass" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated domain entity subclass" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace subclassing core entity" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace subclassing core entity" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass in extension namespace subclassing core entity" name="should have base namespace" time="0.001">
    </testcase>
    <testcase classname="when building duplicate domain entity subclasses" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when building duplicate domain entity subclasses" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate domain entity subclasses" name="should have two validation failures" time="0.003">
    </testcase>
    <testcase classname="when building duplicate domain entity subclasses" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building domain entity subclass with no domain entity subclass name" name="should not build domain entity subclass" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no domain entity subclass name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase domain entity subclass name" name="should not build domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase domain entity subclass name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should have no base name" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with lowercase based on name" name="should have extraneous input error" time="0.002">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have no base name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no based on name" name="should have error" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should have no base name" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should have no documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should have base name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with no property" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have documentation" time="0.005">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass source map" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity subclass source map" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass source map" name="should have baseEntityName" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass source map" name="should have isAbstract" time="0">
    </testcase>
    <testcase classname="when building domain entity subclass source map" name="should have line, column, text for each property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\diminisher\ProgramRoleNameHardcodedSecurityDiminisher.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.763" tests="9">
    <testcase classname="when diminishing a Program role entity hierarchy" name="ProgramEvaluation entity should have EducationOrganization security elements" time="0.002">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy" name="ProgramEvaluationElement entity should have EducationOrganization security elements" time="0.001">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy" name="ProgramEvaluationObjective entity should have EducationOrganization security elements" time="0">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy" name="EvaluationRubricDimension entity should have EducationOrganization security elements" time="0.001">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy with missing ProgramEvaluation resource" name="should throw error" time="0.07">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy with missing ProgramEvaluationElement resource" name="should throw error" time="0.003">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy with missing ProgramEvaluationObjective resource" name="should throw error" time="0.007">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy with missing EvaluationRubricDimension resource" name="should throw error" time="0.003">
    </testcase>
    <testcase classname="when diminishing a Program role entity hierarchy without a valid criteria to get hardcoded securable element" name="should throw error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\integration\ColumnOrderingV6.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.447" tests="24">
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 6.1" name="should have two tables for association" time="0.002">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 6.1" name="should have correct column order for main table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 6.1" name="should have correct foreign key order for main table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 6.1" name="should have correct column order for sub table of association" time="0">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 6.1" name="should have correct foreign key order for sub table of association" time="0">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 6.1" name="should have one table for GraduationPlan" time="0.001">
    </testcase>
    <testcase classname="when StudentSchoolAssociation has a GraduationPlan and targeting ODS/API 6.1" name="should have correct column order for main table of GraduationPlan" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 6.1" name="should have three tables for association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 6.1" name="should have correct column order for main table of association" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 6.1" name="should have correct foreign key order for main table of association" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 6.1" name="should have correct column order for sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 6.1" name="should have correct foreign key order for sub table of association" time="0">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 6.1" name="should have correct column order for sub-sub table of association" time="0.001">
    </testcase>
    <testcase classname="when StudentSpecialEducationProgramAssociation has a Disability common and targeting ODS/API 6.1" name="should have correct foreign key order for sub-sub table of association" time="0">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 6.1" name="should have two tables for entity" time="0.001">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 6.1" name="should have correct column order for main table of entity" time="0">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 6.1" name="should have correct foreign key order for main table of entity" time="0.003">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 6.1" name="should have correct column order for sub table of entity" time="0.001">
    </testcase>
    <testcase classname="when Session has an AcademicWeek collection and targeting ODS/API 6.1" name="should have correct foreign key order for sub table of entity" time="0.02">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 6.1" name="should have two tables for entity" time="0">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 6.1" name="should have correct column order for main table of entity" time="0.002">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 6.1" name="should have correct foreign key order for main table of entity" time="0.001">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 6.1" name="should have correct column order for sub table of entity" time="0.001">
    </testcase>
    <testcase classname="when Assessment has an AssessmentPerformanceLevel common and targeting ODS/API 6.1" name="should have correct foreign key order for sub table of entity" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntity\DomainEntityMustContainAnIdentity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.144" tests="4">
    <testcase classname="when validating domain entity with identity fields" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with identity fields" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with no identity fields" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity with no identity fields" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DomainEntityTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.364" tests="57">
    <testcase classname="when DomainEntityTableEnhancer enhances entity with simple property" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with simple property" name="should have schema equal to namespace" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with simple property" name="should have description equal to documentation" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with simple property" name="should have one column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with simple property" name="should reference the original entity" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection property" name="should create three tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection property" name="should create table for entity with one primary key column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection property" name="should create table for domainEntity with one primary key column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection property" name="should create join table from entity and domainEntity" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection property" name="should have join table with two columns" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection property" name="should have join table with foreign key to entity" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection property" name="should have join table with foreign key to domainEntity" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection common property" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection common property" name="should create table for entity with one primary key column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection common property" name="should create join table from entity and domainEntity" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection common property" name="should have join table with two columns" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection common property" name="should have join table with foreign key to common" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with required collection common property" name="should have join table with foreign key to entity" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a non primary key reference" name="should create three tables" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a non primary key reference" name="should create table for entity with one primary key and one non primary key column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a non primary key reference" name="should create table for referencedEntity with one primary key and one non primary key column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a non primary key reference" name="should create table for subReferencedEntity" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a primary key reference" name="should create three tables" time="0.013">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a primary key reference" name="should create table for entity with one primary key and two non primary key columns" time="0.005">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a primary key reference" name="should create table for referencedEntity with two primary key columns" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with primary key reference to another entity with a primary key reference" name="should create table for subReferencedEntity" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with collection property whose name starts with the referenced entity&apos;s name" name="should create join table that does not conflict with the referenced entity table name" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with two reference properties that have same primary key names" name="should create three tables, one for each entity" time="0.019">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with two reference properties that have same primary key names" name="should create single column in entity table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with two reference properties that have same primary key names" name="should record the column collision" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with two reference properties that have same primary key names" name="should create three tables, one for each entity" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with two reference properties that have same primary key names" name="should create single column in entity table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with two reference properties that have same primary key names" name="should record the column collision" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with optional collection property role name" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with optional collection property role name" name="should have entity table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with optional collection property role name" name="should have join table role name" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with collection enumeration property" name="should create two tables" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with collection enumeration property" name="should have entity table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with collection enumeration property" name="should have join table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with collection enumeration property" name="should have join table with foreign key to enumeration table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with enumeration property" name="should create one table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with enumeration property" name="should have foreign key to enumeration table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with enumeration property whose name starts with the parent entity&apos;s name" name="should create two tables" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with enumeration property whose name starts with the parent entity&apos;s name" name="should have entity table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with enumeration property whose name starts with the parent entity&apos;s name" name="should create join table that does not conflict with the parent entity table name" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor collection property" name="should create two tables" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor collection property" name="should have entity table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor collection property" name="should have join table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor collection property" name="should have join table with foreign key to descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor property" name="should create one table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor property" name="should have foreign key to descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor collection property whose name starts with the parent entity&apos;s name" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor collection property whose name starts with the parent entity&apos;s name" name="should have entity table" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with descriptor collection property whose name starts with the parent entity&apos;s name" name="should create join table that does not conflict with the parent entity table name" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with common collection property whose name starts with the parent entity&apos;s name" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with common collection property whose name starts with the parent entity&apos;s name" name="should have entity table with one primary key" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityTableEnhancer enhances entity with common collection property whose name starts with the parent entity&apos;s name" name="should create join table with two primary keys and one non primary key" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddDecimalSimpleTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="0.983" tests="35">
    <testcase classname="when enhancing decimal type" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have min value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have decimal places assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have total digits assigned" time="0.003">
    </testcase>
    <testcase classname="when enhancing decimal type" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with min value only" name="should create simple type" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with min value only" name="should not have max value assigned" time="0.009">
    </testcase>
    <testcase classname="when enhancing generated decimal type with min value only" name="should have min value assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with min value only" name="should not have decimal places assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with min value only" name="should not have total digits assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with max value only" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with max value only" name="should have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with max value only" name="should not have min value assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with max value only" name="should not have decimal places assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with max value only" name="should not have total digits assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with decimal places only" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with decimal places only" name="should not have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with decimal places only" name="should not have min value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with decimal places only" name="should have decimal places assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with decimal places only" name="should not have total digits assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with total digits only" name="should create simple type" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with total digits only" name="should not have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with total digits only" name="should not have min value assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated decimal type with total digits only" name="should not have decimal places assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with total digits only" name="should have total digits assigned" time="0">
    </testcase>
    <testcase classname="when enhancing non-generated decimal type with no restrictions" name="should create simple type" time="0">
    </testcase>
    <testcase classname="when enhancing non-generated decimal type with no restrictions" name="should not have max value assigned" time="0.014">
    </testcase>
    <testcase classname="when enhancing non-generated decimal type with no restrictions" name="should not have min value assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing non-generated decimal type with no restrictions" name="should not have decimal places assigned" time="0">
    </testcase>
    <testcase classname="when enhancing non-generated decimal type with no restrictions" name="should not have total digits assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated decimal type with no restrictions" name="should create simple type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddCommonComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:37" time="1.624" tests="9">
    <testcase classname="when enhancing common" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing common" name="should have annotation documentation assigned" time="0.012">
    </testcase>
    <testcase classname="when enhancing common" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing common" name="should not have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing common" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing common" name="should not have items" time="0">
    </testcase>
    <testcase classname="when enhancing common" name="should create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing common" name="should not create identity type" time="0.001">
    </testcase>
    <testcase classname="when enhancing common" name="should not create lookup type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\IntegerProperty\IntegerPropertyMustNotMatchASharedDecimal.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.173" tests="6">
    <testcase classname="when validating integer property does not match shared decimal" name="should build one shared decimal" time="0.002">
    </testcase>
    <testcase classname="when validating integer property does not match shared decimal" name="should build one abstract entity" time="0.003">
    </testcase>
    <testcase classname="when validating integer property does not match shared decimal" name="should have no validation failures" time="0.015">
    </testcase>
    <testcase classname="when validating integer property matches shared decimal" name="should build one shared decimal" time="0.001">
    </testcase>
    <testcase classname="when validating integer property matches shared decimal" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating integer property matches shared decimal" name="should have no validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonSubclass\CommonSubclassMustNotRedeclareProperties.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.082" tests="10">
    <testcase classname="when common subclass has different property name" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when common subclass has different property name" name="should build one commonSubclass" time="0">
    </testcase>
    <testcase classname="when common subclass has different property name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when common subclass has duplicate property name" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when common subclass has duplicate property name" name="should build one commonSubclass" time="0.001">
    </testcase>
    <testcase classname="when common subclass has duplicate property name" name="should have validation failures" time="0.003">
    </testcase>
    <testcase classname="when common subclass has duplicate property name across dependent namespaces" name="should build one common" time="0">
    </testcase>
    <testcase classname="when common subclass has duplicate property name across dependent namespaces" name="should build one commonSubclass" time="0.001">
    </testcase>
    <testcase classname="when common subclass has duplicate property name across dependent namespaces" name="should have validation failures" time="0.008">
    </testcase>
    <testcase classname="when common subclass has duplicate property name but different role name" name="should have no validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\EnumerationProperty\EnumerationPropertyMustMatchAnEnumeration.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.133" tests="5">
    <testcase classname="when enumeration property has valid identifier" name="should build one enumeration" time="0.008">
    </testcase>
    <testcase classname="when enumeration property has valid identifier" name="should build one domain entity" time="0.004">
    </testcase>
    <testcase classname="when enumeration property has valid identifier" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when enumeration property has invalid identifier" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when enumeration property has invalid identifier" name="should have validation failures" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\security\StaffSecurableElementEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.376" tests="7">
    <testcase classname="when building Staff domain entity and unrelated DisciplineAction" name="should have staffSecurableElements for Staff" time="0.003">
    </testcase>
    <testcase classname="when building Staff domain entity and unrelated DisciplineAction" name="should have no staffSecurableElements for DisciplineAction" time="0">
    </testcase>
    <testcase classname="when building domain entity with Staff identity" name="should have simple staffSecurableElements" time="0">
    </testcase>
    <testcase classname="when building domain entity with Staff not part of identity" name="should have no staffSecurableElements" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct staffSecurableElements for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity referencing two referencing another with identity" name="should be two staffSecurableElements for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be empty staffSecurableElements for Assessment" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Enumeration\EnumerationExistsOnlyInCoreNamespace.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.217" tests="4">
    <testcase classname="when validating enumeration type exists in core" name="should build one enumeration" time="0.001">
    </testcase>
    <testcase classname="when validating enumeration type exists in core" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating enumeration exists in extension" name="should build one enumeration" time="0">
    </testcase>
    <testcase classname="when validating enumeration exists in extension" name="should have validation failure" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\Deprecated\DeprecatedEntityExtensionWarning.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.328" tests="4">
    <testcase classname="when domain entity is not deprecated" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity is deprecated" name="should have validation failure" time="0.003">
    </testcase>
    <testcase classname="when association is not deprecated" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when association is deprecated" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\integration\DomainEntityExtension.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:36" time="3.001" tests="4">
    <testcase classname="when generating xsd for descriptor" name="should generate descriptor" time="0.009">
    </testcase>
    <testcase classname="when generating xsd for descriptor" name="should generate descriptor reference" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for descriptor" name="should generate descriptor reference" time="0.001">
    </testcase>
    <testcase classname="when generating xsd for descriptor" name="should generate descriptor reference" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\EnumerationPropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.108" tests="8">
    <testcase classname="when building enumeration property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building enumeration property table" name="should create one column" time="0.005">
    </testcase>
    <testcase classname="when building enumeration property table" name="should create one foreign key" time="0">
    </testcase>
    <testcase classname="when building enumeration property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should return join table" time="0.003">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should create two primary key columns" time="0.01">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should create one foreign key" time="0.002">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\MergeDirective\TargetPropertyPathMustExist.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:38" time="1.454" tests="24">
    <testcase classname="when validating domain entity has target property" name="should build two domain entities" time="0.002">
    </testcase>
    <testcase classname="when validating domain entity has target property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property and entity is wrong" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating domain entity has merge property and entity is wrong" name="should have one validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating domain entity has merge property and property is wrong" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property and property is wrong" name="should have one validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has merge property on common type" name="should build two domain entities" time="0">
    </testcase>
    <testcase classname="when validating domain entity has merge property on common type" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity subclass has merge property" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity subclass has merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating association has merge property" name="should build three domain entities" time="0.002">
    </testcase>
    <testcase classname="when validating association has merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating association extension has merge property" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating association extension has merge property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating association subclass has merge property" name="should build three domain entities" time="0">
    </testcase>
    <testcase classname="when validating association subclass has merge property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating abstract entity has merge property" name="should build two domain entities" time="0.002">
    </testcase>
    <testcase classname="when validating abstract entity has merge property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has target property across namespaces" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has target property across namespaces" name="should have no validation failures" time="0.006">
    </testcase>
    <testcase classname="when validating domain entity has merge property across namespaces and entity is wrong" name="should build two domain entities" time="0.002">
    </testcase>
    <testcase classname="when validating domain entity has merge property across namespaces and entity is wrong" name="should have one validation failure" time="0.017">
    </testcase>
    <testcase classname="when validating domain entity has simple property as merge property" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity has simple property as merge property" name="should have no validation failure" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\generator\SchemaGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.177" tests="2">
    <testcase classname="when generating schemas for core namespace" name="should generate correct schema" time="0.005">
    </testcase>
    <testcase classname="when generating schemas for extension namespace" name="should generate correct schema" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\DomainBaseEntityEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.063" tests="14">
    <testcase classname="when enhancing domain" name="should have references to domain entities" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain" name="should have references to domain subclasses" time="0">
    </testcase>
    <testcase classname="when enhancing domain" name="should have references to associations" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain" name="should have references to association subclasses" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain" name="should reference the correct entity when there are multiple with the same name" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain with reference to deprecated domain entity" name="should have references to domain entities" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain with references across namespaces" name="should have references to domain entities" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain with references across namespaces" name="should have references to domain subclasses" time="0">
    </testcase>
    <testcase classname="when enhancing domain with references across namespaces" name="should have references to associations" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain with references across namespaces" name="should have references to association subclasses" time="0.002">
    </testcase>
    <testcase classname="when enhancing subdomain" name="should have references to domain entities" time="0.017">
    </testcase>
    <testcase classname="when enhancing subdomain" name="should have references to domain subclasses" time="0.001">
    </testcase>
    <testcase classname="when enhancing subdomain" name="should have references to associations" time="0.001">
    </testcase>
    <testcase classname="when enhancing subdomain" name="should have references to association subclasses" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddDomainEntityComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="0.906" tests="9">
    <testcase classname="when enhancing domainEntity" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should have annotation documentation assigned" time="0.002">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should not have items" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should not create identity type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity" name="should not create lookup type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\TopLevelEntityBuilderNoDuplicateProperties.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.294" tests="56">
    <testcase classname="when building domain entity with duplicate decimal properties in extension namespace" name="should build one decimal" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with duplicate decimal properties in extension namespace" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with duplicate decimal properties in extension namespace" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when building domain entity with duplicate integer properties in extension namespace" name="should build one integer" time="0">
    </testcase>
    <testcase classname="when building domain entity with duplicate integer properties in extension namespace" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with duplicate integer properties in extension namespace" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when building domain entity with duplicate string properties in extension namespace" name="should build one string" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with duplicate string properties in extension namespace" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity with duplicate string properties in extension namespace" name="should have validation failures for each entity" time="0.003">
    </testcase>
    <testcase classname="when building entities with duplicate boolean properties" name="should build one boolean" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate boolean properties" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate boolean properties" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate currency properties" name="should build one currency" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate currency properties" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate currency properties" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate date properties" name="should build one date" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate date properties" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate date properties" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate duration properties" name="should build one duration" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate duration properties" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate duration properties" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate enumeration properties" name="should build one enumeration" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate enumeration properties" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate enumeration properties" name="should have validation failures for each entity" time="0.023">
    </testcase>
    <testcase classname="when building entities with duplicate common properties" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate common properties" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate common properties" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when building entities with an association property that duplicates name of another property" name="should build one common, zero associations" time="0.001">
    </testcase>
    <testcase classname="when building entities with an association property that duplicates name of another property" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with an association property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with a short property that duplicates name of another property" name="should build one common, zero shorts" time="0.002">
    </testcase>
    <testcase classname="when building entities with a short property that duplicates name of another property" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when building entities with a short property that duplicates name of another property" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that duplicates name of another property" name="should build one common, zero shared decimals" time="0.001">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with a time property that duplicates name of another property" name="should build one common, zero Time&apos;s" time="0.002">
    </testcase>
    <testcase classname="when building entities with a time property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a time property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with a datetime property that duplicates name of another property" name="should build one common, zero datetimes" time="0">
    </testcase>
    <testcase classname="when building entities with a datetime property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a datetime property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with a year property that duplicates name of another property" name="should build one common, zero years" time="0">
    </testcase>
    <testcase classname="when building entities with a year property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a year property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties duplicate property name but different contexts" name="should build two associations" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties duplicate property name but different contexts" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, different shorten to" name="should build two associations" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, different shorten to" name="should have two validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, different shorten to" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, duplicate shorten to" name="should build two associations" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, duplicate shorten to" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, duplicate shorten to" name="should have validation failures for each entity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\ApiPropertyMappingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.489" tests="20">
    <testcase classname="when building simple domain entity referencing another referencing another with identity" name="should be valid" time="0.005">
    </testcase>
    <testcase classname="when domain entity has a reference with same role name as entity name" name="should be valid" time="0.003">
    </testcase>
    <testcase classname="when superclass and subclass will have a naming collision issue" name="should have correct regular and collision resolved top level names" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with common collection" name="should be valid" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with a descriptor collection that meets prefix removal conditions" name="should have the prefix removed from the name" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with a descriptor collection that meets prefix removal conditions" name="should have the prefix removed from the top level name" time="0">
    </testcase>
    <testcase classname="when building a domain entity with a optional collections with prefix of name matching suffix of parent entity name" name="should have the prefix removed from AssessmentScore" time="0">
    </testcase>
    <testcase classname="when building a domain entity with a optional collections with prefix of name matching suffix of parent entity name" name="should have the prefix removed from AssessmentScore top level name" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with a optional collections with prefix of name matching suffix of parent entity name" name="should have the prefix removed from AssessmentDescription" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with a optional collections with prefix of name matching suffix of parent entity name" name="should have the prefix removed from AssessmentDescription top level name" time="0">
    </testcase>
    <testcase classname="when building a domain entity with a optional collections with prefix of name matching suffix of parent entity name" name="should have the prefix removed from AssessmentNumber" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with a optional collections with prefix of name matching suffix of parent entity name" name="should have the prefix removed from AssessmentNumber top level name" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with a optional collection with prefix of role name matching suffix of parent entity name" name="should have the prefix removed from the name" time="0.001">
    </testcase>
    <testcase classname="when building a domain entity with a optional collection with prefix of role name matching suffix of parent entity name" name="should have the prefix removed from the top level name" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with inline common" name="should be valid" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with inline common with role name" name="should be valid" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with choice" name="should be valid" time="0.001">
    </testcase>
    <testcase classname="when building simple domain entity with choice with role name" name="should be valid" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with role name as prefix name of referenced entity BalanceSheetDimension" name="should not have BalanceSheet repeated in naming" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with scalar collection named with prefix of parent entity" name="should have fullName and topLevelName with prefix truncated but not decollisionedTopLevelName or fullNamePreservingPrefix" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InlineCommonProperty\InlineCommonPropertyMustMatchAnInlineCommon.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.414" tests="10">
    <testcase classname="when inline common property has identifier of inline common" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when inline common property has identifier of common" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when inline common property has identifier of common" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when inline common property has invalid identifier" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when inline common property has invalid identifier" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when inline common property has identifier of inline common in dependency namespace" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when inline common property has invalid identifier of inline common in dependency namespace" name="should have validation failures()" time="0.002">
    </testcase>
    <testcase classname="when inline common property has invalid identifier of inline common in dependency namespace" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when inline common property refers to inline common in non-dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when inline common property refers to inline common in non-dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\generator\OdsGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.276" tests="10">
    <testcase classname="when generating output for namespace" name="should generate empty table output" time="0.003">
    </testcase>
    <testcase classname="when generating output for namespace" name="should generate empty foreign key output" time="0">
    </testcase>
    <testcase classname="when generating output for namespace" name="should generate empty extended properties output" time="0.003">
    </testcase>
    <testcase classname="when generating output for namespace" name="should generate empty enumerations output" time="0.001">
    </testcase>
    <testcase classname="when generating output for namespace" name="should generate empty school years output" time="0.003">
    </testcase>
    <testcase classname="when generating output for core namespace" name="should generate empty table output" time="0.001">
    </testcase>
    <testcase classname="when generating output for core namespace" name="should generate empty foreign key output" time="0.002">
    </testcase>
    <testcase classname="when generating output for core namespace" name="should generate empty extended properties output" time="0.001">
    </testcase>
    <testcase classname="when generating output for core namespace" name="should generate empty enumerations output" time="0.001">
    </testcase>
    <testcase classname="when generating output for core namespace" name="should generate empty school years output" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\AssociationBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.173" tests="88">
    <testcase classname="when building association in extension namespace" name="should build one association" time="0.002">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have association documentation" time="0">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have two properties" time="0">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have first domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have first domain entity property as identity property" time="0.001">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have second domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building association in extension namespace" name="should have second domain entity property as identity property" time="0">
    </testcase>
    <testcase classname="when building deprecated association" name="should build one association" time="0">
    </testcase>
    <testcase classname="when building deprecated association" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated association" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building association without extension" name="should build one association" time="0">
    </testcase>
    <testcase classname="when building association without extension" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association without extension" name="should have namespace" time="0.004">
    </testcase>
    <testcase classname="when building association without extension" name="should have no project extension" time="0">
    </testcase>
    <testcase classname="when building association without extension" name="should have association documentation" time="0">
    </testcase>
    <testcase classname="when building association without extension" name="should have two properties" time="0.001">
    </testcase>
    <testcase classname="when building association without extension" name="should have first domain entity property" time="0">
    </testcase>
    <testcase classname="when building association without extension" name="should have first domain entity property as identity property" time="0.001">
    </testcase>
    <testcase classname="when building association without extension" name="should have second domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building association without extension" name="should have second domain entity property as identity property" time="0.001">
    </testcase>
    <testcase classname="when building duplicate associations" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when building duplicate associations" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate associations" name="should have two validation failures" time="0.001">
    </testcase>
    <testcase classname="when building duplicate associations" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building association with additional identity property" name="should have three properties" time="0">
    </testcase>
    <testcase classname="when building association with additional identity property" name="should have first domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building association with additional identity property" name="should have first domain entity property as identity property" time="0.001">
    </testcase>
    <testcase classname="when building association with additional identity property" name="should have second domain entity property" time="0">
    </testcase>
    <testcase classname="when building association with additional identity property" name="should have second domain entity property as identity property" time="0">
    </testcase>
    <testcase classname="when building association with additional identity property" name="should have other domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building association with additional identity property" name="should have other domain entity property as identity property" time="0">
    </testcase>
    <testcase classname="when building association with no association name" name="should not build association" time="0.001">
    </testcase>
    <testcase classname="when building association with no association name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building association with lowercase association name" name="should not build association" time="0.001">
    </testcase>
    <testcase classname="when building association with lowercase association name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building association with no documentation" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should build one association" time="0">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building association with no domain entity property" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should have project extension" time="0.006">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should not have documentation" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should have second domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should have second domain entity property as identity property" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the first domain entity" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should have first domain entity property" time="0">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should have first domain entity property as identity property" time="0.001">
    </testcase>
    <testcase classname="when building association with no documentation in the second domain entity" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should build one association" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have two properties" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have first domain entity property" time="0.001">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have first domain entity property as identity property" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have second domain entity property with" time="0.001">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have second domain entity property as identity property with" time="0">
    </testcase>
    <testcase classname="when building association with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building association source map" name="should have an allowPrimaryKeyUpdates property" time="0">
    </testcase>
    <testcase classname="when building association source map" name="should have a documentation property" time="0.001">
    </testcase>
    <testcase classname="when building association source map" name="should have two identity properties" time="0">
    </testcase>
    <testcase classname="when building association source map" name="should have a metaEdName property" time="0.001">
    </testcase>
    <testcase classname="when building association source map" name="should have a type property" time="0">
    </testcase>
    <testcase classname="when building association source map" name="should have source map data" time="0.003">
    </testcase>
    <testcase classname="when building association source map" name="should have two identity properties with sourceMaps" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\CommonSubclassBaseClassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.112" tests="4">
    <testcase classname="when enhancing common subclass referring to common" name="should have correct references" time="0.012">
    </testcase>
    <testcase classname="when enhancing common subclass referring to common subclass" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing common subclass referring to common across namespaces" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing common subclass referring to common subclass across namespaces" name="should have correct references" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\interchangeOrderMetadata\InterchangeOrderMetadataEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.239" tests="18">
    <testcase classname="when sorting graph with no cycles" name="should sort correctly" time="0.003">
    </testcase>
    <testcase classname="when sorting graph with reflexive cycle" name="should have cycle edge" time="0.001">
    </testcase>
    <testcase classname="when sorting graph with reflexive cycle" name="should sort correctly" time="0.001">
    </testcase>
    <testcase classname="when sorting graph with symmetric cycle" name="should have cycle edges" time="0.015">
    </testcase>
    <testcase classname="when sorting graph with symmetric cycle" name="should sort correctly" time="0.001">
    </testcase>
    <testcase classname="when sorting graph with transitive cycle" name="should not have cycle edges" time="0">
    </testcase>
    <testcase classname="when sorting graph with transitive cycle" name="should sort correctly" time="0.001">
    </testcase>
    <testcase classname="when sorting graph with extended cycle" name="should have cycle edges" time="0.001">
    </testcase>
    <testcase classname="when sorting graph with extended cycle" name="should sort correctly" time="0.001">
    </testcase>
    <testcase classname="when sorting graph with optional cycle" name="should have cycle edges" time="0.001">
    </testcase>
    <testcase classname="when sorting graph with optional cycle" name="should sort correctly" time="0.001">
    </testcase>
    <testcase classname="when InterchangeOrderMetadataEnhancer enhances interchange" name="should have interchange order properties" time="0.001">
    </testcase>
    <testcase classname="when InterchangeOrderMetadataEnhancer enhances interchange with DS 3.0" name="should have interchange order properties" time="0.001">
    </testcase>
    <testcase classname="when InterchangeOrderMetadataEnhancer enhances interchange with different interchange item name" name="should have interchange order properties" time="0.001">
    </testcase>
    <testcase classname="when InterchangeOrderMetadataEnhancer enhances interchange with internal dependency" name="should have interchange order properties" time="0.003">
    </testcase>
    <testcase classname="when InterchangeOrderMetadataEnhancer enhances interchange with external dependency" name="should have interchange order properties" time="0.001">
    </testcase>
    <testcase classname="when InterchangeOrderMetadataEnhancer enhances interchange with external dependency in extension" name="should have interchange order properties" time="0.001">
    </testcase>
    <testcase classname="when InterchangeOrderMetadataEnhancer enhances interchange with external dependency in extension with duplicate name" name="should have interchange order properties" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddDescriptorComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.05" tests="40">
    <testcase classname="when enhancing descriptor" name="should create complex type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should not have items" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should not create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should not have reference type items" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should not create identity type" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should not create lookup type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should not have items" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should not create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should not create identity type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with required map type" name="should not create lookup type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should create complex type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should have annotation documentation assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should have base type assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should not have items" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should not create reference type" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should not create identity type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with optional map type" name="should not create lookup type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with property" name="should have items" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with property" name="should create complex type item element" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with property and map type" name="should have two items" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with property and map type" name="should create complex type item element" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with property and map type" name="should create map type item element" time="0.006">
    </testcase>
    <testcase classname="when enhancing descriptor with descriptor property" name="should have items" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with descriptor property" name="should create complex type item element" time="0.002">
    </testcase>
    <testcase classname="when enhancing descriptor with both queryable and identity property" name="should create complex type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with both queryable and identity property" name="should not create reference type" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with both queryable and identity property" name="should not have reference type items" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with both queryable and identity property" name="should not create identity type" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with both queryable and identity property" name="should not create lookup type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\CommonSubclassBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.251" tests="77">
    <testcase classname="when building common subclass in extension namespace" name="should build one common subclass" time="0.001">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have base name" time="0.001">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have base namespace" time="0">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building common subclass in extension namespace" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building deprecated common subclass" name="should build one common subclass" time="0.001">
    </testcase>
    <testcase classname="when building deprecated common subclass" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated common subclass" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building common subclass in extension namespace subclassing core entity" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building common subclass in extension namespace subclassing core entity" name="should have base name" time="0.001">
    </testcase>
    <testcase classname="when building common subclass in extension namespace subclassing core entity" name="should have base namespace" time="0">
    </testcase>
    <testcase classname="when building duplicate common subclasses" name="should build one common subclass" time="0">
    </testcase>
    <testcase classname="when building duplicate common subclasses" name="should be found in entity repository" time="0.002">
    </testcase>
    <testcase classname="when building duplicate common subclasses" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate common subclasses" name="should have validation failures for each entity" time="0.004">
    </testcase>
    <testcase classname="when building common subclass with no common subclass name" name="should not build common subclass" time="0.002">
    </testcase>
    <testcase classname="when building common subclass with no common subclass name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building common subclass with lowercase common subclass name" name="should not build common subclass" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with lowercase common subclass name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should build one common subclass" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with no based on name" name="should have error" time="0">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should build one common subclass" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with lowercase based on name" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should build one common subclass" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should be found in entity repository" time="0.007">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should have base name but with lowercase prefix ignored" time="0">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should have no documentation" time="0">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building common subclass with no documentation" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should build one common subclass" time="0">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should have base name but with lowercase prefix ignored" time="0">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building common subclass with no property" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should build one common subclass" time="0">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building common subclass with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building common subclass source map" name="should have a baseEntityName property" time="0.001">
    </testcase>
    <testcase classname="when building common subclass source map" name="should have a documentation property" time="0">
    </testcase>
    <testcase classname="when building common subclass source map" name="should have a metaEdName property" time="0">
    </testcase>
    <testcase classname="when building common subclass source map" name="should have a type property" time="0.001">
    </testcase>
    <testcase classname="when building common subclass source map" name="should have source map data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\CommonReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.021" tests="4">
    <testcase classname="when enhancing common property" name="should have no validation failures()" time="0.016">
    </testcase>
    <testcase classname="when enhancing common property referring to common subclass" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when enhancing common property referring to deprecated common" name="should have deprecation flag set" time="0.011">
    </testcase>
    <testcase classname="when enhancing common property across namespaces" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\diminisher\OrganizationDepartmentHardcodedSecurityDiminisher.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:39" time="1.411" tests="4">
    <testcase classname="when diminishing OrganizationDepartment" name="should have ParentEducationOrganization security elements" time="0.002">
    </testcase>
    <testcase classname="when diminishing OrganizationDepartment with missing resource" name="should throw error" time="0.033">
    </testcase>
    <testcase classname="when diminishing OrganizationDepartment with invalid json path" name="should throw error" time="0.004">
    </testcase>
    <testcase classname="when diminishing OrganizationDepartment with missing property" name="should throw error" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\DomainEntityExtensionAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.133" tests="6">
    <testcase classname="when enhancing domainEntity extensions" name="should add aggregate to namespace" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extensions" name="should create aggregate" time="0.008">
    </testcase>
    <testcase classname="when enhancing domainEntity extensions" name="should create entity tables" time="0.002">
    </testcase>
    <testcase classname="when enhancing domainEntity extension that has a required collection table" name="should add aggregate to namespace" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension that has a required collection table" name="should create aggregate" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension that has a required collection table" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\MergedInterchangeElementOrderEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.075" tests="2">
    <testcase classname="when MergedInterchangeElementOrderEnhancer enhances MergedInterchanges with elements differing by xsdName" name="should have correct core interchange item order" time="0.002">
    </testcase>
    <testcase classname="when MergedInterchangeElementOrderEnhancer enhances MergedInterchanges with elements differing by xsdName" name="should have correct extension interchange item order" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Interchange\InterchangeElementMustMatchADomainEntityOrAssociationOrSubclass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.28" tests="25">
    <testcase classname="when validating interchange element is an abstract entity" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is an abstract entity" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange element is an abstract entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity" name="should build one domain entity" time="0.003">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity across namespaces" name="should build one domain entity" time="0.002">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity across namespaces" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity across namespaces" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity subclass" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity subclass" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity subclass" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange element is a domain entity subclass" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange element is an association" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is an association" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange element is an association" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange element is an association subclass" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is an association subclass" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when validating interchange element is an association subclass" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element is an association subclass" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange element is a descriptor" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when validating interchange element is a descriptor" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange element is a descriptor" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange element has invalid name" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange element has invalid name" name="should have validation failures" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\security\NamespaceSecurableElementEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.493" tests="11">
    <testcase classname="when building descriptor" name="should have simple namespace security element" time="0.002">
    </testcase>
    <testcase classname="when building domain entity without any namespace properties" name="should have empty namespace security elements" time="0.001">
    </testcase>
    <testcase classname="when building domain entity without any namespace properties" name="should have empty namespace security elements" time="0">
    </testcase>
    <testcase classname="when building domain entity with SharedString identity but not URI" name="should have empty namespace security elements" time="0">
    </testcase>
    <testcase classname="when building domain entity with SharedString identity referencing URI but not named Namespace" name="should have empty namespace security elements" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with SharedString referencing URI named Namespace but not an identity" name="should have empty namespace security elements" time="0">
    </testcase>
    <testcase classname="when building domain entity with required SharedString referencing URI named Namespace but not an identity" name="should have simple namespace security elements" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with SharedString identity referencing URI named Namespace but role named" name="should have empty namespace security elements" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with SharedString identity referencing URI named Namespace not role named" name="should have simple namespace security element" time="0.001">
    </testcase>
    <testcase classname="when building domain entity referencing another with proper Namespace" name="should have namespace security element on referencing entity" time="0.001">
    </testcase>
    <testcase classname="when building domain entity referencing another with role named Namespace" name="should not have namespace security element on referencing entity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AbstractEntity\AbstractEntityMustContainAnIdentity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="0.984" tests="4">
    <testcase classname="when validating abstract entity with identity fields" name="should build one abstract entity" time="0.002">
    </testcase>
    <testcase classname="when validating abstract entity with identity fields" name="should have no validation failures()" time="0.002">
    </testcase>
    <testcase classname="when validating abstract entity with no identity fields" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating abstract entity with no identity fields" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-odsapi-deploy\test\integration\DeployExtension.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.186" tests="2">
    <testcase classname="when deploying 7.0 extension artifacts" name="should have successful deploy result" time="0.004">
    </testcase>
    <testcase classname="when deploying 7.0 extension artifacts" name="should have correct directory paths" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-odsapi-deploy\test\integration\DeployCoreV6.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.284" tests="2">
    <testcase classname="when deploying 6.1 core artifacts" name="should have successful deploy result" time="0.002">
    </testcase>
    <testcase classname="when deploying 6.1 core artifacts" name="should have correct directory paths" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\Deprecated\DeprecatedEntitySubclassWarning.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.208" tests="6">
    <testcase classname="when domain entity is not deprecated" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity is deprecated" name="should have validation failure" time="0.003">
    </testcase>
    <testcase classname="when association is not deprecated" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when association is deprecated" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when common is not deprecated" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when common is deprecated" name="should have validation failure" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\templates\AttributeTemplate.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.121" tests="10">
    <testcase classname="when generating attribute" name="should be attribute only" time="0.001">
    </testcase>
    <testcase classname="when generating attribute" name="should have attribute name" time="0">
    </testcase>
    <testcase classname="when generating attribute" name="should have attribute type" time="0.001">
    </testcase>
    <testcase classname="when generating attribute" name="should have annotation" time="0">
    </testcase>
    <testcase classname="when generating attribute" name="should not have use required" time="0">
    </testcase>
    <testcase classname="when generating attribute with use required" name="should be attribute only" time="0.001">
    </testcase>
    <testcase classname="when generating attribute with use required" name="should have attribute name" time="0">
    </testcase>
    <testcase classname="when generating attribute with use required" name="should have attribute type" time="0">
    </testcase>
    <testcase classname="when generating attribute with use required" name="should have annotation" time="0.001">
    </testcase>
    <testcase classname="when generating attribute with use required" name="should not have use required" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\validator\UpcomingImprovements\IncludingRequiredPropertiesInExtendedDomainEntitiesProhibited.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.128" tests="3">
    <testcase classname="when a domain entity extension extends a domain entity with no required properties" name="should have no validation failures" time="0.003">
    </testcase>
    <testcase classname="when a domain entity extension extends a domain entity with a required property" name="should have validation failures" time="0.003">
    </testcase>
    <testcase classname="when a domain entity extension extends a domain entity with a required property for ODS/API &gt;5.1" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\MergeDirective\SourcePropertyAndTargetPropertyMustMatch.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.45" tests="26">
    <testcase classname="when validating merge property name and types match" name="should build two domain entities" time="0.002">
    </testcase>
    <testcase classname="when validating merge property name and types match" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating merge property type mismatch" name="should build three domain entities" time="0">
    </testcase>
    <testcase classname="when validating merge property type mismatch" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating merge of nested domain entity with domain entity properties" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge of nested domain entity with domain entity properties" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity with nested domain entity properties" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge of domain entity with nested domain entity properties" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating merge of doubly nested domain entity with domain entity properties" name="should build four domain entities" time="0">
    </testcase>
    <testcase classname="when validating merge of doubly nested domain entity with domain entity properties" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties" name="should build one domain entity subclass" time="0.002">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties of base entity" name="should build four domain entities" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties of base entity" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties of base entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity, domain entity extension, and domain entity subclass properties, across namespaces" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge of domain entity, domain entity extension, and domain entity subclass properties, across namespaces" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity, domain entity extension, and domain entity subclass properties, across namespaces" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when validating merge of domain entity, domain entity extension, and domain entity subclass properties, across namespaces" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating merging domain entity property of an association" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merging domain entity property of an association" name="should build one association" time="0">
    </testcase>
    <testcase classname="when validating merging domain entity property of an association" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating merging domain entity property of an association across namespaces" name="should build three domain entities" time="0">
    </testcase>
    <testcase classname="when validating merging domain entity property of an association across namespaces" name="should build one association" time="0">
    </testcase>
    <testcase classname="when validating merging domain entity property of an association across namespaces" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationSubclass\AssociationSubclassIdentityRenameMustExistNoMoreThanOnce.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="1.344" tests="3">
    <testcase classname="when association subclass renames base identity more than once" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when association subclass renames base identity more than once" name="should build one associationSubclass" time="0">
    </testcase>
    <testcase classname="when association subclass renames base identity more than once" name="should have validation failures" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\AssociationSubclassTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.21" tests="6">
    <testcase classname="when AssociationSubclassTableEnhancer enhances association subclass" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when AssociationSubclassTableEnhancer enhances association subclass" name="should have schema equal to namespace" time="0.001">
    </testcase>
    <testcase classname="when AssociationSubclassTableEnhancer enhances association subclass" name="should have description equal to documentation" time="0">
    </testcase>
    <testcase classname="when AssociationSubclassTableEnhancer enhances association subclass" name="should have one column" time="0.001">
    </testcase>
    <testcase classname="when AssociationSubclassTableEnhancer enhances association subclass with primary key" name="should create a table" time="0">
    </testcase>
    <testcase classname="when AssociationSubclassTableEnhancer enhances association subclass with primary key" name="should have one primary key column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\security\EducationOrganizationHierarchyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:40" time="2.03" tests="6">
    <testcase classname="when building an EdOrg hierarchy with only EducationOrganization" name="should have EducationOrganizationTypes" time="0.002">
    </testcase>
    <testcase classname="when building an EdOrg hierarchy with only EducationOrganization" name="should have EducationOrganizationHierarchy" time="0.001">
    </testcase>
    <testcase classname="when building an EdOrg hierarchy with EducationOrganization subclasses" name="should have EducationOrganizationTypes" time="0.001">
    </testcase>
    <testcase classname="when building an EdOrg hierarchy with EducationOrganization subclasses" name="should have EducationOrganizationHierarchy" time="0.002">
    </testcase>
    <testcase classname="when building an EdOrg hierarchy with EducationOrganization subclasses" name="should have EducationOrganizationTypes" time="0.033">
    </testcase>
    <testcase classname="when building an EdOrg hierarchy with EducationOrganization subclasses" name="should have EducationOrganizationHierarchy" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\TopLevelEntityBuilderExternalNamespaceReferences.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.51" tests="75">
    <testcase classname="when building entities with duplicate enumeration properties" name="should build one enumeration" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate enumeration properties" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate enumeration properties" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with non-duplicate enumeration properties" name="should build two enumerations" time="0.001">
    </testcase>
    <testcase classname="when building entities with non-duplicate enumeration properties" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with non-duplicate enumeration properties" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with duplicate common properties" name="should build one common" time="0.006">
    </testcase>
    <testcase classname="when building entities with duplicate common properties" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with duplicate common properties" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with non-duplicate common properties" name="should build two commons" time="0">
    </testcase>
    <testcase classname="when building entities with non-duplicate common properties" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with non-duplicate common properties" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with an association property that duplicates name of another property" name="should build one common, zero associations" time="0">
    </testcase>
    <testcase classname="when building entities with an association property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with an association property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with an association property that non-duplicates name of another property" name="should build one common, one association" time="0.002">
    </testcase>
    <testcase classname="when building entities with an association property that non-duplicates name of another property" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with an association property that non-duplicates name of another property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a short property that duplicates name of another property" name="should build one common, zero shorts" time="0.001">
    </testcase>
    <testcase classname="when building entities with a short property that duplicates name of another property" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with a short property that duplicates name of another property" name="should have validation failures for each entity" time="0.008">
    </testcase>
    <testcase classname="when building entities with a short property that non-duplicates name of another property" name="should build one common, one short" time="0">
    </testcase>
    <testcase classname="when building entities with a short property that non-duplicates name of another property" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with a short property that non-duplicates name of another property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that duplicates name of another property" name="should build one common, zero shared decimals" time="0.001">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that non-duplicates name of another property" name="should build one common, one shared decimal" time="0.004">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that non-duplicates name of another property" name="should have correct reference namespace and metaed name" time="0.009">
    </testcase>
    <testcase classname="when building entities with an shared decimal property that non-duplicates name of another property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with renamed shared decimal property that non-duplicates name of another property" name="should build one common, one shared decimal" time="0">
    </testcase>
    <testcase classname="when building entities with renamed shared decimal property that non-duplicates name of another property" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with renamed shared decimal property that non-duplicates name of another property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a time property that duplicates name of another property" name="should build one common, zero Time&apos;s" time="0.001">
    </testcase>
    <testcase classname="when building entities with a time property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a time property that duplicates name of another property" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building entities with a time property that non-duplicates name of another property" name="should build one common, one time" time="0.002">
    </testcase>
    <testcase classname="when building entities with a time property that non-duplicates name of another property" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with a time property that non-duplicates name of another property" name="should have no validation failures" time="0.003">
    </testcase>
    <testcase classname="when building entities with a datetime property that duplicates name of another property" name="should build one common, zero datetimes" time="0.001">
    </testcase>
    <testcase classname="when building entities with a datetime property that duplicates name of another property" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a datetime property that duplicates name of another property" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with a datetime property that non-duplicates name of another property" name="should build one common, one datetime" time="0">
    </testcase>
    <testcase classname="when building entities with a datetime property that non-duplicates name of another property" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with a datetime property that non-duplicates name of another property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with a year property that duplicates name of another property" name="should build one common, zero years" time="0">
    </testcase>
    <testcase classname="when building entities with a year property that duplicates name of another property" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with a year property that duplicates name of another property" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building entities with a year property that non-duplicates name of another property" name="should build one common, one year" time="0.001">
    </testcase>
    <testcase classname="when building entities with a year property that non-duplicates name of another property" name="should have correct reference namespace and metaed name" time="0">
    </testcase>
    <testcase classname="when building entities with a year property that non-duplicates name of another property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties duplicate property name but different contexts" name="should build two associations" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties duplicate property name but different contexts" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties non-duplicate property name but different contexts" name="should build two associations" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties non-duplicate property name but different contexts" name="should have correct reference namespace and metaed name" time="0.027">
    </testcase>
    <testcase classname="when building entities with two association properties non-duplicate property name but different contexts" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts" name="should build one association" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts" name="should build two associations" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts" name="should have correct reference namespace and metaed name" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, different shorten to" name="should build one association" time="0.002">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, different shorten to" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, different shorten to" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts, different shorten to" name="should build two associations" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts, different shorten to" name="should have correct reference namespace and metaed name" time="0.019">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts, different shorten to" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, duplicate shorten to" name="should build two associations" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, duplicate shorten to" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with duplicate property name and duplicate contexts, duplicate shorten to" name="should have validation failures for each entity" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts, duplicate shorten to" name="should build two associations" time="0">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts, duplicate shorten to" name="should have correct reference namespace and metaed name" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate property name and duplicate contexts, duplicate shorten to" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building entities with two association properties with non-duplicate namespaces, duplicate property name and duplicate contexts" name="should have validation failures for each entity" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationSubclass\AssociationSubclassIdentityRenameMustMatchIdentityPropertyInBaseClass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.397" tests="18">
    <testcase classname="when association subclass renames base identity" name="should build one association" time="0.002">
    </testcase>
    <testcase classname="when association subclass renames base identity" name="should build one associationSubclass" time="0.002">
    </testcase>
    <testcase classname="when association subclass renames base identity" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when association subclass renames base identity across dependent namespaces" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when association subclass renames base identity across dependent namespaces" name="should build one associationSubclass" time="0">
    </testcase>
    <testcase classname="when association subclass renames base identity across dependent namespaces" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when association subclass does not rename identity" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when association subclass does not rename identity" name="should build one associationSubclass" time="0.001">
    </testcase>
    <testcase classname="when association subclass does not rename identity" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when association subclass renames base identity that does not exist" name="should build one association" time="0">
    </testcase>
    <testcase classname="when association subclass renames base identity that does not exist" name="should build one associationSubclass" time="0">
    </testcase>
    <testcase classname="when association subclass renames base identity that does not exist" name="should have validation failures" time="0.004">
    </testcase>
    <testcase classname="when association subclass renames base property that is not identity" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when association subclass renames base property that is not identity" name="should build one associationSubclass" time="0">
    </testcase>
    <testcase classname="when association subclass renames base property that is not identity" name="should have validation failures" time="0.003">
    </testcase>
    <testcase classname="when association subclass extends non existent entity" name="should not build association" time="0.022">
    </testcase>
    <testcase classname="when association subclass extends non existent entity" name="should build one associationSubclass" time="0">
    </testcase>
    <testcase classname="when association subclass extends non existent entity" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\CommonExtensionBaseClassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.14" tests="2">
    <testcase classname="when enhancing common extension referring to common" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing common extension referring to common across namespaces" name="should have correct references" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-odsapi-deploy\test\integration\DeployCore.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.437" tests="2">
    <testcase classname="when deploying 7.0 core artifacts" name="should have successful deploy result" time="0.003">
    </testcase>
    <testcase classname="when deploying 7.0 core artifacts" name="should have correct directory paths" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Identity\IdentityExistsOnlyIfIdentityIsAllowed.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.416" tests="24">
    <testcase classname="when validating association with valid identity property" name="should build one association" time="0.002">
    </testcase>
    <testcase classname="when validating association with valid identity property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with valid identity property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with valid identity property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating abstract entity with valid identity property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating abstract entity with valid identity property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating common type with valid identity property" name="should build one common" time="0">
    </testcase>
    <testcase classname="when validating common type with valid identity property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating inline common type with valid identity property" name="should build one common" time="0">
    </testcase>
    <testcase classname="when validating inline common type with valid identity property" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating association extension with invalid identity property" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating association extension with invalid identity property" name="should build one association extension" time="0">
    </testcase>
    <testcase classname="when validating association extension with invalid identity property" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating association subclass with invalid identity property" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating association subclass with invalid identity property" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when validating association subclass with invalid identity property" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating descriptor with invalid identity property" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when validating descriptor with invalid identity property" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity extension with invalid identity property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity extension with invalid identity property" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity extension with invalid identity property" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity subclass with invalid identity property" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity subclass with invalid identity property" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when validating domain entity subclass with invalid identity property" name="should have validation failure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\ChoiceProperty\ChoicePropertyMustMatchAChoice.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.23" tests="6">
    <testcase classname="when choice property has identifier of choice" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when choice property has identifier of choice in dependency namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when choice property has invalid identifier" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when choice property has invalid identifier" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when choice property has invalid identifier in dependency namespace" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when choice property has invalid identifier in dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CrossEntity\MostEntitiesCannotHaveSameName.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.302" tests="25">
    <testcase classname="when entities have different names" name="should build one domain entity and one association" time="0.001">
    </testcase>
    <testcase classname="when entities have different names" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when DE and Association have identical names" name="should build one domain entity and one association" time="0.007">
    </testcase>
    <testcase classname="when DE and Association have identical names" name="should have validation failures for each entity" time="0.003">
    </testcase>
    <testcase classname="when DE has same name as DE extension" name="should build one DE and one DE extension" time="0.001">
    </testcase>
    <testcase classname="when DE has same name as DE extension" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when Association has same name as Association extension" name="should build one DE and one DE extension" time="0">
    </testcase>
    <testcase classname="when Association has same name as Association extension" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when DE and SharedInteger have identical names" name="should build one domain entity and one shared integer" time="0.001">
    </testcase>
    <testcase classname="when DE and SharedInteger have identical names" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when DE and Common have identical names" name="should build one domain entity and one common" time="0">
    </testcase>
    <testcase classname="when DE and Common have identical names" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when DE and Common in separate dependency-linked namespaces have identical names" name="should build one core domain entity" time="0.001">
    </testcase>
    <testcase classname="when DE and Common in separate dependency-linked namespaces have identical names" name="should build one extension domain entity extension" time="0">
    </testcase>
    <testcase classname="when DE and Common in separate dependency-linked namespaces have identical names" name="should have not validation failures" time="0.001">
    </testcase>
    <testcase classname="when DE and Common in non-dependency-linked namespaces have identical names" name="should build one core domain entity" time="0.001">
    </testcase>
    <testcase classname="when DE and Common in non-dependency-linked namespaces have identical names" name="should build one extension1 domain entity" time="0">
    </testcase>
    <testcase classname="when DE and Common in non-dependency-linked namespaces have identical names" name="should build one extension2 common" time="0">
    </testcase>
    <testcase classname="when DE and Common in non-dependency-linked namespaces have identical names" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when DE has same name as descriptor" name="should build one DE and one descriptor" time="0">
    </testcase>
    <testcase classname="when DE has same name as descriptor" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when DE has same name as enumeration" name="should build one DE and one enumeration" time="0.001">
    </testcase>
    <testcase classname="when DE has same name as enumeration" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when DE has same name as interchange" name="should build one DE and one interchange" time="0.001">
    </testcase>
    <testcase classname="when DE has same name as interchange" name="should have no validation failures()" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\SimplePropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.209" tests="17">
    <testcase classname="when converting boolean property to column" name="should return converted column" time="0.003">
    </testcase>
    <testcase classname="when converting currency property to column" name="should return converted column" time="0.003">
    </testcase>
    <testcase classname="when converting date property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting datetime property to column" name="should return converted column" time="0.003">
    </testcase>
    <testcase classname="when converting decimal property to column" name="should return converted column" time="0.007">
    </testcase>
    <testcase classname="when converting duration property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting integer property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting integer property with big hint to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting percent property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting shared decimal property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting shared integer property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting shared short property to column" name="should return converted column" time="0.004">
    </testcase>
    <testcase classname="when converting shared string property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting short property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting string property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting time property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting year property to column" name="should return converted column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\ShortProperty\ShortPropertyMinValueMustNotBeGreaterThanMaxValue.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.275" tests="6">
    <testcase classname="when validating short property with correct minimum value and maximum value" name="should build one abstract entity" time="0.002">
    </testcase>
    <testcase classname="when validating short property with correct minimum value and maximum value" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating short property with same minimum value and maximum value" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating short property with same minimum value and maximum value" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating short property with minimum value greater than maximum value" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating short property with minimum value greater than maximum value" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\enhancer\DescriptorChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="1.278" tests="4">
    <testcase classname="when enhancing core descriptor targeting 7.2 ODS/API" name="should create delete tracking table" time="0.002">
    </testcase>
    <testcase classname="when enhancing core descriptor targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.003">
    </testcase>
    <testcase classname="when enhancing extension descriptor targeting 7.2 ODS/API" name="should create delete tracking table" time="0.005">
    </testcase>
    <testcase classname="when enhancing extension descriptor targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\security\AuthorizationPathwayEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:41" time="1.532" tests="6">
    <testcase classname="when building StudentSchoolAssociation" name="should have the StudentSchoolAssociationAuthorization and ContactStudentSchoolAuthorization pathway" time="0.002">
    </testcase>
    <testcase classname="when building StudentEducationOrganizationResponsibilityAssociation" name="should have the StudentEducationOrganizationResponsibilityAssociation pathway" time="0.001">
    </testcase>
    <testcase classname="when building StudentContactAssociation" name="should have the ContactStudentSchoolAuthorization pathway" time="0">
    </testcase>
    <testcase classname="when building StaffEducationOrganizationAssignmentAssociation" name="should have the StaffEducationOrganizationAuthorization pathway" time="0.001">
    </testcase>
    <testcase classname="when building StaffEducationOrganizationEmploymentAssociation" name="should have the StaffEducationOrganizationAuthorization pathway" time="0">
    </testcase>
    <testcase classname="when building a non-pathway association" name="should have no authorizationPathways" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\validator\UnsupportedExtension\SubclassingAnythingInExtensionsIsUnsupported.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="1.135" tests="2">
    <testcase classname="when a domain entity subclass in an extension project subclasses a domain entity" name="should have validation failures" time="0.006">
    </testcase>
    <testcase classname="when an association subclass in an extension project subclasses an association" name="should have validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\enhancer\BaseDescriptorChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="1.392" tests="2">
    <testcase classname="when enhancing base descriptor targeting 7.2 ODS/API" name="should create delete tracking table" time="0.003">
    </testcase>
    <testcase classname="when enhancing base descriptor targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\BaseDescriptorTableCreatingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="0.889" tests="2">
    <testcase classname="when BaseDescriptorTableEnhancer enhances" name="should create descriptor table" time="0.001">
    </testcase>
    <testcase classname="when BaseDescriptorTableEnhancer enhances" name="should have eight descriptor columns" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddCommonSubclassComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="1.258" tests="9">
    <testcase classname="when enhancing commonSubclass" name="should create complex type" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should not have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should not have items" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should not create identity type" time="0">
    </testcase>
    <testcase classname="when enhancing commonSubclass" name="should not create lookup type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonSubclass\CommonSubclassIdentifierMustMatchACommon.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="0.909" tests="6">
    <testcase classname="when common subclass has valid extendee" name="should build one common subclass" time="0.003">
    </testcase>
    <testcase classname="when common subclass has valid extendee" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when common subclass has invalid extendee" name="should build one common subclass" time="0.001">
    </testcase>
    <testcase classname="when common subclass has invalid extendee" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when common subclass has valid extendee across dependent namespaces" name="should build one common subclass" time="0.001">
    </testcase>
    <testcase classname="when common subclass has valid extendee across dependent namespaces" name="should have no validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\DescriptorMapTypeRowEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="0.824" tests="4">
    <testcase classname="when DescriptorMapTypeRowEnhancer enhances map type descriptor" name="should create row" time="0.011">
    </testcase>
    <testcase classname="when DescriptorMapTypeRowEnhancer enhances map type descriptor" name="should have correct enumeration row" time="0.002">
    </testcase>
    <testcase classname="when DescriptorMapTypeRowEnhancer enhances map type descriptor with name that ends with &apos;Type&apos;" name="should create row" time="0.001">
    </testcase>
    <testcase classname="when DescriptorMapTypeRowEnhancer enhances map type descriptor with name that ends with &apos;Type&apos;" name="should have correct enumeration row" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonProperty\CommonPropertyWithExtensionOverrideRestrictedToDomainEntityAndAssociationExtensionsAndMaintainsCardinality.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="1.392" tests="48">
    <testcase classname="when validating common property does not have extension override" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property does not have extension override" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating common property does not have extension override" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on non domain entity or association extensions" name="should build one common" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on non domain entity or association extensions" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on non domain entity or association extensions" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension without include on extendee" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension without include on extendee" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension without include on extendee" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension without include on extendee" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension without include on extendee" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension without include on extendee" name="should build one association" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension without include on extendee" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension without include on extendee" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee and matching cardinality" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee and matching cardinality" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee and matching cardinality" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee and matching cardinality" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension of subclass with include on extendee and matching cardinality" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension of subclass with include on extendee and matching cardinality" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension of subclass with include on extendee and matching cardinality" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension of subclass with include on extendee and matching cardinality" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension of subclass with include on extendee and matching cardinality" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee and matching cardinality" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee and matching cardinality" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee and matching cardinality" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee and matching cardinality" name="should have no validation failures" time="0.007">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension of subclass with include on extendee and matching cardinality" name="should build one common" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension of subclass with include on extendee and matching cardinality" name="should build one association" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension of subclass with include on extendee and matching cardinality" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension of subclass with include on extendee and matching cardinality" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension of subclass with include on extendee and matching cardinality" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching collection cardinality" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching collection cardinality" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching collection cardinality" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching collection cardinality" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching collection cardinality" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching collection cardinality" name="should build one association" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching collection cardinality" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching collection cardinality" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching nullablility" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching nullablility" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching nullablility" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on domain entity extension with include on extendee not matching nullablility" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching nullablility" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching nullablility" name="should build one association" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching nullablility" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override on association extension with include on extendee not matching nullablility" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\AssociationTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:42" time="1.077" tests="50">
    <testcase classname="when AssociationTableEnhancer enhances entity with simple property" name="should create a table" time="0.002">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with simple property" name="should have schema equal to namespace" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with simple property" name="should have description equal to documentation" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with simple property" name="should have one column" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection property" name="should create three tables" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection property" name="should create table for entity with one primary key column" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection property" name="should create table for association with one primary key column" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection property" name="should create join table from entity and association" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection property" name="should have join table with two columns" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection property" name="should have join table with foreign key to entity" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection property" name="should have join table with foreign key to association" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection common property" name="should create two tables" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection common property" name="should create table for entity with one primary key column" time="0.002">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection common property" name="should create join table from entity and association" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection common property" name="should have join table with two columns" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection common property" name="should have join table with foreign key to common" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with required collection common property" name="should have join table with foreign key to entity" time="0.014">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with primary key reference to another entity with a non primary key reference" name="should create three tables" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with primary key reference to another entity with a non primary key reference" name="should create table for entity with one primary key and one non primary key column" time="0.002">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with primary key reference to another entity with a non primary key reference" name="should create table for referencedEntity with one primary key and one non primary key column" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with primary key reference to another entity with a primary key reference" name="should create three tables" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with primary key reference to another entity with a primary key reference" name="should create table for entity with one primary key and two non primary key columns" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with primary key reference to another entity with a primary key reference" name="should create table for referencedEntity with two primary key columns" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with collection property whose name starts with the referenced entity&apos;s name" name="should create join table that does not conflict with the referenced entity table name" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with two reference properties that have same primary key names" name="should create three tables, one for each entity" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with two reference properties that have same primary key names" name="should create single column in entity table" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with optional collection property role name" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with optional collection property role name" name="should have entity table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with optional collection property role name" name="should have join table role name" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with collection enumeration property" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with collection enumeration property" name="should have entity table" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with collection enumeration property" name="should have join table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with collection enumeration property" name="should have join table with foreign key to enumeration table" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with enumeration property" name="should create one table" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with enumeration property" name="should have foreign key to enumeration table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with enumeration property whose name starts with the parent entity&apos;s name" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with enumeration property whose name starts with the parent entity&apos;s name" name="should have entity table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with enumeration property whose name starts with the parent entity&apos;s name" name="should create join table that does not conflict with the parent entity table name" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor collection property" name="should create two tables" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor collection property" name="should have entity table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor collection property" name="should have join table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor collection property" name="should have join table with foreign key to descriptor table" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor property" name="should create one table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor property" name="should have foreign key to descriptor table" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor collection property whose name starts with the parent entity&apos;s name" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor collection property whose name starts with the parent entity&apos;s name" name="should have entity table" time="0.001">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with descriptor collection property whose name starts with the parent entity&apos;s name" name="should create join table that does not conflict with the parent entity table name" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with common collection property whose name starts with the parent entity&apos;s name" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with common collection property whose name starts with the parent entity&apos;s name" name="should have entity table with one primary key" time="0">
    </testcase>
    <testcase classname="when AssociationTableEnhancer enhances entity with common collection property whose name starts with the parent entity&apos;s name" name="should create join table with two primary keys and one non primary key" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\StringProperty\StringPropertyMustNotHaveMinLengthOneOnOptionalFields.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.048" tests="4">
    <testcase classname="when validating string property with no minimum length and is optional" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating string property with minimum length one and is required" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating string property with minimum length one and is optional v7" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when validating string property with minimum length one and is optional v6" name="should have validation warnings" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Subdomain\SubdomainMustNotDuplicateDomainItems.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.066" tests="7">
    <testcase classname="when validating subdomain entity domain item does not duplicate domain items" name="should build one subdomain entity" time="0.002">
    </testcase>
    <testcase classname="when validating subdomain entity domain item does not duplicate domain items" name="should build two domain entity domain items" time="0.001">
    </testcase>
    <testcase classname="when validating subdomain entity domain item does not duplicate domain items" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating subdomain entity domain item has duplicate domain items" name="should build one subdomain entity" time="0.001">
    </testcase>
    <testcase classname="when validating subdomain entity domain item has duplicate domain items" name="should have one validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating subdomain entity domain item has multiple duplicate domain items" name="should build one subdomain entity" time="0.001">
    </testcase>
    <testcase classname="when validating subdomain entity domain item has multiple duplicate domain items" name="should have multiple validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\IdentityRename\IdentityRenameExistsOnlyIfIdentityRenameIsAllowed.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.004" tests="10">
    <testcase classname="when validating association with invalid identity rename property" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating association with invalid identity rename property" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with invalid identity rename property" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with invalid identity rename property" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating association subclass with valid identity rename property" name="should build one association" time="0">
    </testcase>
    <testcase classname="when validating association subclass with valid identity rename property" name="should build one associationSubclass" time="0.001">
    </testcase>
    <testcase classname="when validating association subclass with valid identity rename property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating domain entity subclass with valid identity rename property" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity subclass with valid identity rename property" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when validating domain entity subclass with valid identity rename property" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\MergeDirective\MergeDirectiveMustStartSourcePathWithPropertyName.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.129" tests="12">
    <testcase classname="when validating reference property starts merge path with matching property name" name="should build one domain entity" time="0.002">
    </testcase>
    <testcase classname="when validating reference property starts merge path with matching property name" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating reference property starts merge path with mismatched property name" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating reference property starts merge path with mismatched property name" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating reference property starts merge path with matching property name and context" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating reference property starts merge path with matching property name and context" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating reference property starts merge path with property name and different context" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating reference property starts merge path with property name and different context" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating reference property starts merge path with property name and missing context" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating reference property starts merge path with property name and missing context" name="should have validation failure" time="0.01">
    </testcase>
    <testcase classname="when validating reference property starts merge path with matching property name for simple type" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating reference property starts merge path with matching property name for simple type" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\ChoiceBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.05" tests="46">
    <testcase classname="when building choice in extension namespace" name="should build one choice" time="0.007">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should have no validation failures" time="0.048">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building choice in extension namespace" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building deprecated choice" name="should build one choice" time="0">
    </testcase>
    <testcase classname="when building deprecated choice" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated choice" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building duplicate choices" name="should build one choice" time="0">
    </testcase>
    <testcase classname="when building duplicate choices" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate choices" name="should have two validation failures" time="0.001">
    </testcase>
    <testcase classname="when building duplicate choices" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building choice with no choice name" name="should not build choice" time="0.001">
    </testcase>
    <testcase classname="when building choice with no choice name" name="should have missing id error" time="0.001">
    </testcase>
    <testcase classname="when building choice with lowercase choice name" name="should build no choice" time="0.001">
    </testcase>
    <testcase classname="when building choice with lowercase choice name" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building choice with no documentation" name="should be found in entity repository" time="0.002">
    </testcase>
    <testcase classname="when building choice with no documentation" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building choice with no documentation" name="should have namespace" time="0.002">
    </testcase>
    <testcase classname="when building choice with no documentation" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building choice with no documentation" name="should have no documentation" time="0">
    </testcase>
    <testcase classname="when building choice with no documentation" name="should have no properties" time="0">
    </testcase>
    <testcase classname="when building choice with no documentation" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building choice with no property" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building choice with no property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building choice with no property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building choice with no property" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building choice with no property" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building choice with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building choice with no property" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should have no documentation" time="0">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building choice with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building choice source map" name="should have a documentation property" time="0.001">
    </testcase>
    <testcase classname="when building choice source map" name="should have a metaEdName property" time="0">
    </testcase>
    <testcase classname="when building choice source map" name="should have a type property" time="0.001">
    </testcase>
    <testcase classname="when building choice source map" name="should have source map data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AbstractEntity\AbstractEntityMustNotBeExtended.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1" tests="6">
    <testcase classname="when validating domain entity additions" name="should build domain entity and domain entity extension" time="0.002">
    </testcase>
    <testcase classname="when validating domain entity additions" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating abstract entity additions" name="should build abstract entity and domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when validating abstract entity additions" name="should have one validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating abstract entity additions in extension namespace" name="should build domain entity, abstract entity and domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when validating abstract entity additions in extension namespace" name="should have one validation failure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntityProperty\DomainEntityPropertyMustMatchADomainEntity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.205" tests="11">
    <testcase classname="when domain entity property has identifier of domain entity" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity property has identifier of domain entity subclass" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity property has invalid identifier" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity property has invalid identifier" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when domain entity property on association has invalid identifier" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity property on association has invalid identifier" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when domain entity property has identifier of domain entity in dependency namespace" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity property has invalid identifier of domain entity in dependency namespace" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity property has invalid identifier of domain entity in dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when domain entity property refers to domain entity in non-dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when domain entity property refers to domain entity in non-dependency namespace" name="should have validation failure for property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\AssociationSubclassBaseClassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.133" tests="4">
    <testcase classname="when enhancing association subclass referring to association" name="should have correct references" time="0.002">
    </testcase>
    <testcase classname="when enhancing association subclass referring to association subclass" name="should have correct references" time="0.005">
    </testcase>
    <testcase classname="when enhancing association subclass referring to association across namespaces" name="should have correct references" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass referring to association subclass across namespaces" name="should have correct references" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DescriptorProperty\DescriptorPropertyNameCannotEndInDescriptor.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.281" tests="4">
    <testcase classname="when descriptor property has valid name" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when descriptor property has valid name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when descriptor property has invalid name" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when descriptor property has invalid name" name="should have validation failures" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\ForeignKeyCreatingTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.163" tests="20">
    <testcase classname="when using get reference properties and associated columns with non reference properties" name="should return two property column pairs" time="0.002">
    </testcase>
    <testcase classname="when using get reference properties and associated columns with non reference properties" name="should have first reference pair" time="0.001">
    </testcase>
    <testcase classname="when using get reference properties and associated columns with non reference properties" name="should have second reference pair" time="0.001">
    </testcase>
    <testcase classname="when using get reference properties and associated columns with weak reference properties" name="should only return strong reference property column pair" time="0.002">
    </testcase>
    <testcase classname="when using get reference properties and associated columns" name="should return two property column pairs" time="0.001">
    </testcase>
    <testcase classname="when using get reference properties and associated columns" name="should have first pair with two columns" time="0">
    </testcase>
    <testcase classname="when using get reference properties and associated columns" name="should have second pair with one column" time="0.001">
    </testcase>
    <testcase classname="when using get matching column from source entity properties with no matching source entity properties" name="should return null" time="0.001">
    </testcase>
    <testcase classname="when using get matching column from source entity properties with matching source entity property only" name="should return matching column" time="0.001">
    </testcase>
    <testcase classname="when using get matching column from source entity properties with matching source entity property and column name" name="should return matching column with same name" time="0.001">
    </testcase>
    <testcase classname="when using get matching column from source entity properties with matching column" name="should return matching column" time="0.001">
    </testcase>
    <testcase classname="when using get merge property column with property that is not included in column source properties" name="should return undefined" time="0">
    </testcase>
    <testcase classname="when using get merge property column with column that has invalid merge reference context and source property" name="should return undefined" time="0">
    </testcase>
    <testcase classname="when using get merge property column with non reference target property" name="should return undefined" time="0.001">
    </testcase>
    <testcase classname="when using get merge property column with reference property" name="should return merge property column" time="0.004">
    </testcase>
    <testcase classname="when using get merge property column with multiple source entity properties" name="should return merge property column" time="0.001">
    </testcase>
    <testcase classname="when ForeignKeyCreatingEnhancer enhances a table with primary key reference column" name="should have one foreign key" time="0">
    </testcase>
    <testcase classname="when ForeignKeyCreatingEnhancer enhances a table with primary key reference column" name="should have correct foreign key relationship" time="0.001">
    </testcase>
    <testcase classname="when ForeignKeyCreatingEnhancer enhances a table with primary key reference column across namespaces" name="should have one foreign key" time="0.001">
    </testcase>
    <testcase classname="when ForeignKeyCreatingEnhancer enhances a table with primary key reference column across namespaces" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\AssociationSubclassAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.48" tests="2">
    <testcase classname="when enhancing association extensions" name="should create aggregate" time="0.002">
    </testcase>
    <testcase classname="when enhancing association extensions" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\templates\ComplexTypeItemTemplate.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.561" tests="30">
    <testcase classname="when generating complex type item" name="should be element complex type only" time="0.002">
    </testcase>
    <testcase classname="when generating complex type item" name="should have element complex type name" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item" name="should have element complex type type" time="0">
    </testcase>
    <testcase classname="when generating complex type item" name="should have annotation only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item" name="should not have min occurs" time="0">
    </testcase>
    <testcase classname="when generating complex type item" name="should not have max occurs" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with min occurs" name="should be element complex type only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with min occurs" name="should have element complex type name" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with min occurs" name="should have element complex type type" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with min occurs" name="should have annotation only" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with min occurs" name="should have min occurs" time="0">
    </testcase>
    <testcase classname="when generating complex type item with min occurs" name="should not have max occurs" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with max occurs unbounded" name="should be element complex type only" time="0.004">
    </testcase>
    <testcase classname="when generating complex type item with max occurs unbounded" name="should have element complex type name" time="0">
    </testcase>
    <testcase classname="when generating complex type item with max occurs unbounded" name="should have element complex type type" time="0.003">
    </testcase>
    <testcase classname="when generating complex type item with max occurs unbounded" name="should have annotation only" time="0">
    </testcase>
    <testcase classname="when generating complex type item with max occurs unbounded" name="should not have min occurs" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with max occurs unbounded" name="should not have max occurs" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with element item" name="should be sequence complex type only" time="0">
    </testcase>
    <testcase classname="when generating complex type item with element item" name="should not have element complex type name" time="0">
    </testcase>
    <testcase classname="when generating complex type item with element item" name="should not have element complex type type" time="0.001">
    </testcase>
    <testcase classname="when generating complex type item with element item" name="should not have annotation, but element instead" time="0.001">
    </testcase>
    <testcase classname="when generating element group complex type item is choice with element item" name="should be sequence complex type only" time="0">
    </testcase>
    <testcase classname="when generating element group complex type item is choice with element item" name="should not have element complex type name" time="0">
    </testcase>
    <testcase classname="when generating element group complex type item is choice with element item" name="should not have element complex type type" time="0.001">
    </testcase>
    <testcase classname="when generating element group complex type item is choice with element item" name="should not have annotation, but element instead" time="0">
    </testcase>
    <testcase classname="when generating element group complex type item with element group item" name="should be sequence complex type only" time="0.002">
    </testcase>
    <testcase classname="when generating element group complex type item with element group item" name="should not have element complex type name" time="0">
    </testcase>
    <testcase classname="when generating element group complex type item with element group item" name="should not have element complex type type" time="0.001">
    </testcase>
    <testcase classname="when generating element group complex type item with element group item" name="should not have annotation, but sequqence followed by element instead" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Domain\DomainMustNotDuplicateDomainItems.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.253" tests="6">
    <testcase classname="when validating domain entity domain item does not duplicate domain items" name="should build one domain entity" time="0.006">
    </testcase>
    <testcase classname="when validating domain entity domain item does not duplicate domain items" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating domain entity domain item duplicates domain items" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity domain item duplicates domain items" name="should have one validation failure" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity domain item has multiple duplicate domain items" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity domain item has multiple duplicate domain items" name="should have multiple validation failures" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\ShortProperty\ShortPropertyMustNotMatchASharedString.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.584" tests="6">
    <testcase classname="when validating short property does not match shared string" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating short property does not match shared string" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating short identity matches shared string" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating short identity matches shared string" name="should have one validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating short property matches shared string" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating short property matches shared string" name="should have one validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\InterchangeGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:43" time="1.687" tests="3">
    <testcase classname="when generating single interchange" name="should generate valid xsd" time="0.009">
    </testcase>
    <testcase classname="when generating single interchange with extension" name="should not generate explicit extension interchange" time="0.004">
    </testcase>
    <testcase classname="when generating single interchange with extension" name="should have interchange name" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\SharedIntegerPropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.385" tests="4">
    <testcase classname="when shared integer property refers to a shared integer" name="should have the shared integer restrictions" time="0.003">
    </testcase>
    <testcase classname="when shared short property refers to a shared short" name="should have the shared integer restrictions" time="0.001">
    </testcase>
    <testcase classname="when shared integer property refers to a shared integer with empty min/max values" name="should have the empty shared integer restrictions as null" time="0.002">
    </testcase>
    <testcase classname="when shared short property refers to a shared short with empty min/max values" name="should have the shared integer restrictions as null" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\InterchangeBaseItemEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.636" tests="3">
    <testcase classname="when enhancing interchange in core" name="should have references for all entities" time="0.005">
    </testcase>
    <testcase classname="when enhancing interchange extension" name="should have references for all entities" time="0.001">
    </testcase>
    <testcase classname="when enhancing with deprecated references" name="should have references for all entities" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\enhancer\AssociationSubclassChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.543" tests="4">
    <testcase classname="when enhancing core associationSubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.024">
    </testcase>
    <testcase classname="when enhancing core associationSubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension associationSubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension associationSubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Domain\CommonDomainItemMustMatchTopLevelEntity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.768" tests="14">
    <testcase classname="when validating common domain item matches top level entity" name="should build one domain" time="0.001">
    </testcase>
    <testcase classname="when validating common domain item matches top level entity" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating common domain item matches subclass" name="should build one domain" time="0.001">
    </testcase>
    <testcase classname="when validating common domain item matches subclass" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating common domain item matches top level entity across namespace" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating common domain item matches top level entity across namespace" name="should have no validation failures()" time="0.002">
    </testcase>
    <testcase classname="when validating common domain item does not match top level entity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating common domain item does not match top level entity" name="should have one validation failure()" time="0.002">
    </testcase>
    <testcase classname="when validating inline common domain item matches top level entity" name="should build one domain" time="0">
    </testcase>
    <testcase classname="when validating inline common domain item matches top level entity" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating inline common domain item matches top level entity across namespace" name="should build one domain" time="0.001">
    </testcase>
    <testcase classname="when validating inline common domain item matches top level entity across namespace" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating inline common domain item does not match top level entity" name="should build one domain" time="0.001">
    </testcase>
    <testcase classname="when validating inline common domain item does not match top level entity" name="should have one validation failure()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\SchoolYearEnumerationAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.468" tests="2">
    <testcase classname="when enhancing schoolYearEnumerations" name="should create aggregate" time="0.002">
    </testcase>
    <testcase classname="when enhancing schoolYearEnumerations" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\CommonProperty\CommonPropertyCollectionTargetMustContainIdentity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.586" tests="13">
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has no superclass" name="should build one common" time="0.002">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has no superclass" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has no superclass" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has a superclass also without identity" name="should build one commons" time="0">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has a superclass also without identity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has a superclass also without identity" name="should have one validation failure" time="0">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has a superclass also without identity" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has a superclass with identity" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has a superclass with identity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property does not have an identity &gt; and given the property has a superclass with identity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property has an identity" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property has an identity" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating collection common property target &gt; given the property has an identity" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DecimalProperty\DecimalPropertyMustNotMatchASharedString.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.398" tests="4">
    <testcase classname="when validating decimal property does not match shared string" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property does not match shared string" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when validating decimal property matches shared string" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating decimal property matches shared string" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\security\ContactSecurableElementEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.96" tests="7">
    <testcase classname="when building Contact domain entity and unrelated DisciplineAction" name="should have contactSecurableElements for Contact" time="0.005">
    </testcase>
    <testcase classname="when building Contact domain entity and unrelated DisciplineAction" name="should have no contactSecurableElements for DisciplineAction" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with Contact identity" name="should have simple contactSecurableElements" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with Contact not part of identity" name="should have no contactSecurableElements" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing another referencing another with identity" name="should be correct contactSecurableElements for DomainEntityName" time="0">
    </testcase>
    <testcase classname="when building a domain entity referencing two referencing another with identity" name="should be two contactSecurableElements for DomainEntityName" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with a common with a domain entity reference with a role name" name="should be empty contactSecurableElements for Assessment" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\generator\AggregateIdColumnsGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.525" tests="4">
    <testcase classname="when generating aggregateId columns for core namespace table that is not an aggregate root" name="should not generate aggregateId columns" time="0.002">
    </testcase>
    <testcase classname="when generating aggregateId columns for core namespace table for ODS/API &lt; 7.3" name="should not generate aggregateId columns" time="0">
    </testcase>
    <testcase classname="when generating aggregateId columns for core namespace table for ODS/API 7.3" name="should generate correct aggregateId columns" time="0.002">
    </testcase>
    <testcase classname="when generating aggregateId columns for extension namespace table" name="should generate correct aggregateId columns" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonExtension\CommonExtensionIdentifierMustMatchACommon.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.306" tests="6">
    <testcase classname="when common extension extends common" name="should build one common extension" time="0.003">
    </testcase>
    <testcase classname="when common extension extends common" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when common extension extends an invalid identifier" name="should build one common extension" time="0.002">
    </testcase>
    <testcase classname="when common extension extends an invalid identifier" name="should have validation failures()" time="0.006">
    </testcase>
    <testcase classname="when common extension specifies wrong namespace" name="should build one common extension" time="0.001">
    </testcase>
    <testcase classname="when common extension specifies wrong namespace" name="should have validation failures()" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\enhancer\DomainEntityChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:44" time="1.711" tests="4">
    <testcase classname="when enhancing core domainEntity targeting 7.2 ODS/API" name="should create delete tracking table" time="0.007">
    </testcase>
    <testcase classname="when enhancing core domainEntity targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension domainEntity targeting 7.2 ODS/API" name="should create delete tracking table" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension domainEntity targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\SchoolYearEnumerationRowEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.198" tests="3">
    <testcase classname="when SchoolYearEnumerationRowEnhancer enhances enumeration" name="should create two rows" time="0.001">
    </testcase>
    <testcase classname="when SchoolYearEnumerationRowEnhancer enhances enumeration" name="should have correct first enumeration row" time="0.001">
    </testcase>
    <testcase classname="when SchoolYearEnumerationRowEnhancer enhances enumeration" name="should have correct second enumeration row" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntityExtension\DomainEntityExtensionNamesMustBeUnique.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.3" tests="11">
    <testcase classname="when entities in same namespace have different names" name="should build two domainEntityExtension" time="0.005">
    </testcase>
    <testcase classname="when entities in same namespace have different names" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should build one domainEntityExtension because TopLevelEntityBuilder will not let it get that far" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should have no validation failures because of TopLevelEntityBuilder" time="0">
    </testcase>
    <testcase classname="when domainEntityExtensions in separate dependency-linked namespaces have identical names" name="should build one domainEntityExtension in core namespace" time="0.001">
    </testcase>
    <testcase classname="when domainEntityExtensions in separate dependency-linked namespaces have identical names" name="should build one domainEntityExtension in extension namespace" time="0">
    </testcase>
    <testcase classname="when domainEntityExtensions in separate dependency-linked namespaces have identical names" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domainEntityExtensions in non-dependency-linked namespaces have identical names" name="should build one core domainEntityExtension" time="0.001">
    </testcase>
    <testcase classname="when domainEntityExtensions in non-dependency-linked namespaces have identical names" name="should build one extension1 domainEntityExtension" time="0">
    </testcase>
    <testcase classname="when domainEntityExtensions in non-dependency-linked namespaces have identical names" name="should build one extension2 domainEntityExtension" time="0.001">
    </testcase>
    <testcase classname="when domainEntityExtensions in non-dependency-linked namespaces have identical names" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonProperty\CommonPropertyWithExtensionOverrideMustReferenceCommonTypeExtension.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.626" tests="8">
    <testcase classname="when validating common property has extension override of common type extension" name="should build one common" time="0.002">
    </testcase>
    <testcase classname="when validating common property has extension override of common type extension" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override of common type extension" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override of common type extension" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override of non common type extension" name="should build one common" time="0.026">
    </testcase>
    <testcase classname="when validating common property has extension override of non common type extension" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating common property has extension override of non common type extension" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when validating common property has extension override of non common type extension" name="should have validation failure for property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntityExtension\DomainEntityExtensionMustNotBeInSameNamespaceAsBase.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.377" tests="4">
    <testcase classname="when domain entity extension is in correct namespace" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension is in correct namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when domain entity extension is in core namespace" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when domain entity extension is in core namespace" name="should have validation failure" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InterchangeExtension\InterchangeExtensionMustNotRedeclareIdentityNames.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.211" tests="6">
    <testcase classname="when validating interchange extension identity template has different names" name="should build one interchange extension" time="0.002">
    </testcase>
    <testcase classname="when validating interchange extension identity template has different names" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template has duplicate names" name="should build one interchange extension" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template has duplicate names" name="should have validation failures" time="0.013">
    </testcase>
    <testcase classname="when validating interchange identity template has multiple duplicate names" name="should build one interchange extension" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template has multiple duplicate names" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\EnumerationAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.205" tests="2">
    <testcase classname="when enhancing enumerations" name="should create aggregate" time="0.002">
    </testcase>
    <testcase classname="when enhancing enumerations" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\OutReferencePathEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.663" tests="62">
    <testcase classname="when domain entity has single reference to a second domain entity" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity" name="should have DE1 with out path to DE2" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity" name="should have DE1 with map of out path containing DE2" time="0.005">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity" name="should have DE1 with map of endpoint containing DE2" time="0.002">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity" name="should have DE2 with no out paths" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity with reference to a third" name="should build three domain entities" time="0">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity with reference to a third" name="should have DE1 with out path to DE3" time="0.002">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity with reference to a third" name="should have DE1 with map of out path containing DE2" time="0.004">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity with reference to a third" name="should have DE1 with map of out path containing DE3" time="0.026">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity with reference to a third" name="should have DE1 with map of endpoint containing DE3" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity with reference to a third" name="should have DE2 with out path to DE3" time="0.002">
    </testcase>
    <testcase classname="when domain entity has single reference to a second domain entity with reference to a third" name="should have DE3 with no out paths" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should build five domain entities" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with out path to DE3a" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with out path to DE3b" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with map of out path containing DE2a" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with map of out path containing DE3a" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with map of endpoint containing DE3a" time="0.045">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with map of out path containing DE2b" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with map of out path containing DE3b" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE1 with map of endpoint containing DE3b" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE2a with out path to DE3a" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE2b with out path to DE3b" time="0.009">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE3a with no out paths" time="0.002">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another" name="should have DE3b with no out paths" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should build four domain entities" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE1 with 1st out path to DE3" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE1 with 2nd out path to DE3" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE1 with map of out path containing DE2a" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE1 with map of out path containing DE3" time="0.013">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE1 with map of endpoint containing DE3" time="0.003">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE1 with map of out path containing DE2b" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE2a with out path to DE3" time="0">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE2b with out path to DE3" time="0.001">
    </testcase>
    <testcase classname="when domain entity has dual references to domain entities with reference to another that is the same (diamond)" name="should have DE3 with no out paths" time="0">
    </testcase>
    <testcase classname="when model has a leaf attached to a cycle" name="should build four domain entities" time="0">
    </testcase>
    <testcase classname="when model has a leaf attached to a cycle" name="should have DE1 with out path direct to Leaf" time="0.001">
    </testcase>
    <testcase classname="when model has a leaf attached to a cycle" name="should have DE2 with out path to Leaf via DE3 -&gt; DE1" time="0.003">
    </testcase>
    <testcase classname="when model has a leaf attached to a cycle" name="should have DE3 with out path to Leaf via DE1" time="0">
    </testcase>
    <testcase classname="when model has a leaf attached to a cycle" name="should have Leaf with no out paths" time="0">
    </testcase>
    <testcase classname="when domain entity has single reference to a shared string" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a shared string" name="should build one shared string" time="0">
    </testcase>
    <testcase classname="when domain entity has single reference to a shared string" name="should have DE with out path to SS" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a shared string" name="should have DE with map of out path containing SS" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a common with reference to a descriptor" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when domain entity has single reference to a common with reference to a descriptor" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a common with reference to a descriptor" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when domain entity has single reference to a common with reference to a descriptor" name="should have DE with out path to DS" time="0.001">
    </testcase>
    <testcase classname="when domain entity has single reference to a common with reference to a descriptor" name="should have CO with out path to DS" time="0">
    </testcase>
    <testcase classname="when domain entity has single reference to a common with reference to a descriptor" name="should have DS with no out paths" time="0.001">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DE1 with out path to DE2" time="0.001">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DES with out path to DE3" time="0.001">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DE2 with no out paths" time="0">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DE3 with no out paths" time="0.001">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should build three domain entities" time="0.001">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DE1 with out path to DE2" time="0">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DES with out path to DE3" time="0.002">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DE2 with no out paths" time="0">
    </testcase>
    <testcase classname="when domain entity has a reference and domain entity subclass has another" name="should have DE3 with no out paths" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\MergedInterchangeDomainEntityExtensionEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.226" tests="5">
    <testcase classname="when enhances MergedInterchange with domainEntity extension" name="should create additional extension interchange" time="0.004">
    </testcase>
    <testcase classname="when enhances existing MergedInterchange with domainEntity extension" name="should not create additional extension interchange" time="0.001">
    </testcase>
    <testcase classname="when enhances existing MergedInterchange with domainEntity extension" name="should add extension interchange item to existing interchange" time="0.004">
    </testcase>
    <testcase classname="when enhances MergedInterchange with multiple domainEntity extension" name="should create additional extension interchange" time="0.015">
    </testcase>
    <testcase classname="when enhances MergedInterchange in extension namespace with multiple domainEntity" name="should create interchange with correct elements" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InterchangeExtension\InterchangeExtensionIdentifierMustMatchAnInterchange.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.186" tests="5">
    <testcase classname="when validating interchange extension has valid extendee" name="should build one interchange" time="0.004">
    </testcase>
    <testcase classname="when validating interchange extension has valid extendee" name="should build one interchange extension" time="0.001">
    </testcase>
    <testcase classname="when validating interchange extension has valid extendee" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange extension has invalid extendee" name="should build one interchange extension" time="0">
    </testcase>
    <testcase classname="when validating interchange extension has invalid extendee" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddAssociationExtensionComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.39" tests="28">
    <testcase classname="when enhancing association extension" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension" name="should have annotation documentation assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association extension" name="should have base type assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association extension" name="should not have items" time="0">
    </testcase>
    <testcase classname="when enhancing association extension" name="should create reference type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension" name="should not create identity type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have annotation documentation assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have annotation type group assigned on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have base type assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have name assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have items on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have annotation documentation assigned on restriction complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should not have annotation type group assigned on restriction complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have base type assigned on restriction complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have name assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension with common type override" name="should have items on restriction complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have annotation documentation assigned on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have annotation type group assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have base type assigned on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have name assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have items on extension complex type" time="0.002">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have annotation documentation assigned on restriction complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should not have annotation type group assigned on restriction complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have base type assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have name assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing association extension of a association subclass with common type override" name="should have items on restriction complex type from both base and subclass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InlineCommon\InlineCommonExistsOnlyInCoreNamespace.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.379" tests="4">
    <testcase classname="when validating inline common type exists in core" name="should build one common" time="0.002">
    </testcase>
    <testcase classname="when validating inline common type exists in core" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating inline common type exists in extension" name="should build one common" time="0">
    </testcase>
    <testcase classname="when validating inline common type exists in extension" name="should have validation failure" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\SharedStringProperty\SharedStringPropertyMustNotHaveMinLengthOneOnOptionalFields.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:45" time="1.587" tests="4">
    <testcase classname="when validating shared string property with no minimum length and is optional" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when validating shared string property with minimum length one and is required" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating shared string property with minimum length one and is optional v7" name="should have validation failures" time="0.004">
    </testcase>
    <testcase classname="when validating shared string property with minimum length one and is optional v6" name="should have validation warnings" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddDomainEntitySubclassComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.202" tests="9">
    <testcase classname="when enhancing domainEntity subclass" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should not have items" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should not create identity type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass" name="should not create lookup type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntitySubclass\DomainEntitySubclassIdentifierMustMatchADomainOrAbstractEntity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.38" tests="11">
    <testcase classname="when domain entity subclass extends domain entity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass extends domain entity" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass extends domain entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity subclass extends domain entity across namespace" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass extends domain entity across namespace" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass extends domain entity across namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass extends abstract entity" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass extends abstract entity" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass extends abstract entity" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has invalid extendee" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has invalid extendee" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DecimalProperty\DecimalPropertyDecimalPlacesMustNotBeGreaterThanTotalDigits.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.203" tests="6">
    <testcase classname="when validating decimal property with correct total digits and decimal places" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property with correct total digits and decimal places" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property with same total digits and decimal places" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating decimal property with same total digits and decimal places" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating decimal property with decimal places greater than total digits" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating decimal property with decimal places greater than total digits" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\ShortProperty\ShortPropertyMustNotMatchASharedInteger.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.388" tests="6">
    <testcase classname="when validating short property does not match shared integer" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating short property does not match shared integer" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating string identity matches shared integer" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating string identity matches shared integer" name="should have one validation failure" time="0.003">
    </testcase>
    <testcase classname="when validating short property matches shared integer" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating short property matches shared integer" name="should have one validation failure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\CommonPropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.193" tests="20">
    <testcase classname="when building common property table" name="should return join table" time="0.002">
    </testcase>
    <testcase classname="when building common property table" name="should have two primary key columns" time="0.001">
    </testcase>
    <testcase classname="when building common property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building common property table" name="should have correct original entities" time="0.002">
    </testcase>
    <testcase classname="when building common property table" name="should have one foreign key" time="0">
    </testcase>
    <testcase classname="when building common property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should have two columns with one primary key" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building optional common property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should have one foreign key" time="0">
    </testcase>
    <testcase classname="when building optional common property table" name="should have correct foreign key relationship" time="0.002">
    </testcase>
    <testcase classname="when building required collection common property table" name="should return required collection table" time="0.001">
    </testcase>
    <testcase classname="when building required collection common property table" name="should have two primary keys" time="0.001">
    </testcase>
    <testcase classname="when building required collection common property table" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building required collection common property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should return required collection table" time="0">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should have two primary keys" time="0">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should have correct original entities" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\SchoolYearEnumerationTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="0.984" tests="5">
    <testcase classname="when SchoolYearEnumerationTableEnhancer enhances schoolYearEnumeration" name="should create table" time="0.002">
    </testcase>
    <testcase classname="when SchoolYearEnumerationTableEnhancer enhances schoolYearEnumeration" name="should have three columns" time="0.001">
    </testcase>
    <testcase classname="when SchoolYearEnumerationTableEnhancer enhances schoolYearEnumeration" name="should have one primary key" time="0.001">
    </testcase>
    <testcase classname="when SchoolYearEnumerationTableEnhancer enhances schoolYearEnumeration" name="should have school year description column" time="0.001">
    </testcase>
    <testcase classname="when SchoolYearEnumerationTableEnhancer enhances schoolYearEnumeration" name="should have current school year column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\validator\UpcomingImprovements\IncludingRequiredPropertiesInExtendedAssociationsProhibited.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.251" tests="3">
    <testcase classname="when an association extension extends an association with no required properties" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when an association extension extends an association with a required property" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when an association extension extends an association with a required property for ODS/API &gt;5.1" name="should have no validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\DomainEntitySubclassAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="0.942" tests="2">
    <testcase classname="when enhancing association extensions" name="should create aggregate" time="0.002">
    </testcase>
    <testcase classname="when enhancing association extensions" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\XsdGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:46" time="1.168" tests="1">
    <testcase classname="when generating schema" name="should generate valid xsd" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\CommonExtensionBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.052" tests="28">
    <testcase classname="when building common extension in extension namespace" name="should build one common extension" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should have extendee name" time="0">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should have base namespace" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should have correct namespace" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should have correct project extension" time="0">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should not be deprecated" time="0.002">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building deprecated common extension" name="should build one common extension" time="0.001">
    </testcase>
    <testcase classname="when building deprecated common extension" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated common extension" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace extending core entity" name="should have extendee name" time="0.001">
    </testcase>
    <testcase classname="when building common extension in extension namespace extending core entity" name="should have base namespace" time="0">
    </testcase>
    <testcase classname="when building common extension in extension namespace extending core entity" name="should have correct namespace" time="0.001">
    </testcase>
    <testcase classname="when building multiple common extensions" name="should build one common extension" time="0">
    </testcase>
    <testcase classname="when building multiple common extensions" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building multiple common extensions" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building multiple common extensions" name="should have validation failures for each entity" time="0.003">
    </testcase>
    <testcase classname="when building common extension with missing common extension name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building common extension with lowercase common extension name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building common extension with missing property" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building common extension with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building common extension source map" name="should have a baseEntityName property" time="0.001">
    </testcase>
    <testcase classname="when building common extension source map" name="should have a metaEdName property" time="0">
    </testcase>
    <testcase classname="when building common extension source map" name="should have a type property" time="0.001">
    </testcase>
    <testcase classname="when building common extension source map" name="should have source map data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntity\DomainEntityMustContainNoMoreThanOneUniqueIdColumn.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.087" tests="8">
    <testcase classname="when validating domain entity with no UniqueId fields" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with no UniqueId fields" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating domain entity with one UniqueId field" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity with one UniqueId field" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with two UniqueId fields" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity with two UniqueId fields" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating domain entity with two UniqueId fields in extension namespace" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity with two UniqueId fields in extension namespace" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\MergeDirective\SourcePropertyAndTargetPropertyMustMatchForSimpleTypes.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.159" tests="9">
    <testcase classname="when validating merge property name and types match" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge property name and types match" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating merge property type mismatch" name="should build two domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge property type mismatch" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when validating merge of doubly nested domain entity with domain entity properties" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge of doubly nested domain entity with domain entity properties" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties of base entity" name="should build four domain entities" time="0.001">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties of base entity" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when validating merge of domain entity and domain entity subclass properties of base entity" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\AssociationBaseInlinePropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.246" tests="2">
    <testcase classname="when enhancing association with inline string property" name="should add identity properties to association" time="0.001">
    </testcase>
    <testcase classname="when enhancing association with inline nested string property" name="should add identity properties to association" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CrossProperty\PropertiesMustReferToValidNamespaces.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.255" tests="2">
    <testcase classname="when referring to valid namespace" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when referring to invalid namespace" name="should have validation failure" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\SchemaAnnotationGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.221" tests="3">
    <testcase classname="when generating schema annotation for a single descriptor" name="should be simple type for descriptor list" time="0.002">
    </testcase>
    <testcase classname="when generating schema annotation for a single descriptor" name="should be token restriction for descriptor list" time="0.009">
    </testcase>
    <testcase classname="when generating schema annotation for a single descriptor" name="should have single descriptor" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\PrimaryKeyCollectorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.082" tests="8">
    <testcase classname="when collecting primary key columns for identity property" name="should return a primary key column" time="0.003">
    </testcase>
    <testcase classname="when collecting primary key columns for inline common property" name="should return a primary key column" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for identity property and inline common property" name="should return two columns" time="0">
    </testcase>
    <testcase classname="when collecting primary key columns for identity property and inline common property" name="should return a primary key column for identity property" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for identity property and inline common property" name="should return a primary key column for inline common property" time="0.002">
    </testcase>
    <testcase classname="when collecting primary key columns for two inline common properties with primary key to same inline common entity" name="should return two columns" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for two inline common properties with primary key to same inline common entity" name="should return a primary key column first" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for two inline common properties with primary key to same inline common entity" name="should return a primary key column role named second" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\enhancer\EnumerationChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.763" tests="4">
    <testcase classname="when enhancing core enumeration targeting 7.2 ODS/API" name="should create delete tracking table" time="0.002">
    </testcase>
    <testcase classname="when enhancing core enumeration targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension enumeration targeting 7.2 ODS/API" name="should create delete tracking table" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension enumeration targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddAssociationSubclassComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.135" tests="9">
    <testcase classname="when enhancing association subclass" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should not have items" time="0.001">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should not create identity type" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass" name="should not create lookup type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\enhancer\TemplateSpecificTablePropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.462" tests="9">
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with alternate keys" name="should have hasAlternateKeys property set to true" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with alternate keys" name="should have correct alternate key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with primary keys" name="should have correct primary key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with foreign keys" name="should have correct foreign key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with foreign keys" name="should have correct foreign key column order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with unique indexes" name="should have correct unique index order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with primary and non primary keys" name="should have correct column order with primary keys first" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for table" time="0">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for columns" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\validator\UpcomingImprovements\SubclassingAnyAssociationExceptGeneralStudentProgramAssociationIsUnsupported.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.111" tests="3">
    <testcase classname="when an association subclass subclasses GeneralStudentProgramAssociation" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when an association subclass subclasses a non-GeneralStudentProgramAssociation association" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when an association subclass subclasses StudentProgramAssociation association" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\enhancer\SubclassPropertyNamingCollisionEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:47" time="1.239" tests="6">
    <testcase classname="when superclass and subclass have a naming collision issue" name="should indicate subclass property has a conflict with superclass property" time="0.002">
    </testcase>
    <testcase classname="when superclass and subclass have a naming collision issue" name="should indicate superclass property has a conflict with subclass property" time="0.001">
    </testcase>
    <testcase classname="when superclass and subclass have no naming collision issue due to different collection suffixes" name="should indicate subclass property has no conflict" time="0.001">
    </testcase>
    <testcase classname="when superclass and subclass have no naming collision issue due to different collection suffixes" name="should indicate superclass property has no conflict" time="0.001">
    </testcase>
    <testcase classname="when superclass and subclass have no naming collision issue due to one being a non-collection" name="should indicate subclass property has no conflict" time="0.001">
    </testcase>
    <testcase classname="when superclass and subclass have no naming collision issue due to one being a non-collection" name="should indicate superclass property has no conflict" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationExtension\AssociationExtensionNamesMustBeUnique.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.3" tests="11">
    <testcase classname="when entities in same namespace have different names" name="should build two associationExtension" time="0.002">
    </testcase>
    <testcase classname="when entities in same namespace have different names" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should build one associationExtension because TopLevelEntityBuilder will not let it get that far" time="0">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should have no validation failures because of TopLevelEntityBuilder" time="0.001">
    </testcase>
    <testcase classname="when associationExtensions in separate dependency-linked namespaces have identical names" name="should build one associationExtension in core namespace" time="0.005">
    </testcase>
    <testcase classname="when associationExtensions in separate dependency-linked namespaces have identical names" name="should build one associationExtension in extension namespace" time="0.001">
    </testcase>
    <testcase classname="when associationExtensions in separate dependency-linked namespaces have identical names" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when associationExtensions in non-dependency-linked namespaces have identical names" name="should build one core associationExtension" time="0">
    </testcase>
    <testcase classname="when associationExtensions in non-dependency-linked namespaces have identical names" name="should build one extension1 associationExtension" time="0">
    </testcase>
    <testcase classname="when associationExtensions in non-dependency-linked namespaces have identical names" name="should build one extension2 associationExtension" time="0">
    </testcase>
    <testcase classname="when associationExtensions in non-dependency-linked namespaces have identical names" name="should have no validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\StringProperty\StringPropertyMustNotMatchASharedInteger.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.231" tests="6">
    <testcase classname="when validating string property does not match shared integer" name="should build one abstract entity" time="0.003">
    </testcase>
    <testcase classname="when validating string property does not match shared integer" name="should have no validation failures" time="0.004">
    </testcase>
    <testcase classname="when validating string identity matches shared integer" name="should build one abstract entity" time="0.002">
    </testcase>
    <testcase classname="when validating string identity matches shared integer" name="should have no validation failures" time="0.003">
    </testcase>
    <testcase classname="when validating string property matches shared integer" name="should build one abstract entity" time="0.003">
    </testcase>
    <testcase classname="when validating string property matches shared integer" name="should have no validation failures" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\Deprecated\DeprecatedEntityWarning.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.295" tests="3">
    <testcase classname="when entity is not deprecated" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when entities are deprecated in alliance mode" name="should have validation failure" time="0.004">
    </testcase>
    <testcase classname="when entities are deprecated not in alliance mode" name="should have validation failure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\SimplePropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.022" tests="17">
    <testcase classname="when converting boolean property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting currency property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting date property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting datetime property to column" name="should return converted column" time="0.007">
    </testcase>
    <testcase classname="when converting decimal property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting duration property to column" name="should return converted column" time="0.005">
    </testcase>
    <testcase classname="when converting integer property to column" name="should return converted column" time="0.005">
    </testcase>
    <testcase classname="when converting integer property with big hint to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting percent property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting shared decimal property to column" name="should return converted column" time="0.002">
    </testcase>
    <testcase classname="when converting shared integer property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting shared short property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting shared string property to column" name="should return converted column" time="0.003">
    </testcase>
    <testcase classname="when converting short property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting string property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting time property to column" name="should return converted column" time="0.001">
    </testcase>
    <testcase classname="when converting year property to column" name="should return converted column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DecimalProperty\DecimalPropertyMinValueMustNotBeGreaterThanMaxValue.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.05" tests="9">
    <testcase classname="when validating decimal property with correct minimum value and maximum value" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property with correct minimum value and maximum value" name="should build two properties" time="0">
    </testcase>
    <testcase classname="when validating decimal property with correct minimum value and maximum value" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property with same minimum value and maximum value" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating decimal property with same minimum value and maximum value" name="should build two properties" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property with same minimum value and maximum value" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating decimal property with minimum value greater than maximum value" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating decimal property with minimum value greater than maximum value" name="should build two properties" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property with minimum value greater than maximum value" name="should have validation failures" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\IntegerProperty\IntegerPropertyMinValueMustNotBeGreaterThanMaxValue.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.272" tests="6">
    <testcase classname="when validating integer property with correct minimum value and maximum value" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating integer property with correct minimum value and maximum value" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating integer property with same minimum value and maximum value" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating integer property with same minimum value and maximum value" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating integer property with minimum value greater than maximum value" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating integer property with minimum value greater than maximum value" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Subdomain\SubdomainParentDomainNameMustMatchADomain.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.193" tests="4">
    <testcase classname="when validating subdomain entity parent domain name does match a domain" name="should build one domain and one subdomain entity" time="0.002">
    </testcase>
    <testcase classname="when validating subdomain entity parent domain name does match a domain" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating subdomain entity parent domain name does not match a domain" name="should build one domain and one subdomain entity" time="0">
    </testcase>
    <testcase classname="when validating subdomain entity parent domain name does not match a domain" name="should have one validation failure" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\UpdateCascadeTopLevelEntityEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="0.902" tests="19">
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates" name="should not have cascade primary key updates for first domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates" name="should have cascade primary key updates for second domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates" name="should have cascade primary key updates for third domain entity" time="0">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances associations with allow primary key updates" name="should not have cascade primary key updates for first domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances associations with allow primary key updates" name="should not have cascade primary key updates for second domain entity" time="0">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances associations with allow primary key updates" name="should have cascade primary key updates for association" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances associations with allow primary key updates" name="should have cascade primary key updates for third domain entity" time="0">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on deep reference graph" name="should have cascade primary key updates for first domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on deep reference graph" name="should have cascade primary key updates for second domain entity" time="0.002">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on deep reference graph" name="should have cascade primary key updates for third domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on deep reference graph" name="should have cascade primary key updates for forth domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on cyclical reference graph" name="should have cascade primary key updates for first domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on cyclical reference graph" name="should have cascade primary key updates for second domain entity" time="0">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on cyclical reference graph" name="should have cascade primary key updates for third domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on cyclical reference graph" name="should have cascade primary key updates for forth domain entity" time="0.002">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on cyclical reference graph" name="should have only one cascading property on forth domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on non primary key reference" name="should not have cascade primary key updates for first domain entity" time="0.001">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on non primary key reference" name="should have cascade primary key updates for second domain entity" time="0">
    </testcase>
    <testcase classname="when UpdateCascadeTopLevelEntityEnhancer enhances domain entity with allow primary key updates on non primary key reference" name="should have cascade primary key updates for third domain entity" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\SimplePropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.033" tests="8">
    <testcase classname="when building simple entity property table with collection property and identity property" name="should return join table" time="0.002">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have two columns" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have primary key" time="0">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should convert collection to primary key" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have foreign key" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have correct foreign key relationship" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\CommonPropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="0.891" tests="5">
    <testcase classname="when creating columns for common with is collection property" name="should return no columns" time="0.001">
    </testcase>
    <testcase classname="when creating columns for common with only one property" name="should return a single column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for common with two properties" name="should return two columns" time="0">
    </testcase>
    <testcase classname="when creating columns for common with two properties" name="should return a string column" time="0.005">
    </testcase>
    <testcase classname="when creating columns for common with two properties" name="should return an integer column" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntitySubclass\DomainEntitySubclassIdentityRenameMustMatchIdentityPropertyInBaseClass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.075" tests="18">
    <testcase classname="when domain entity subclass renames base identity" name="should build one domain entity" time="0.002">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity across dependent namespaces" name="should build one domain entity" time="0.003">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity across dependent namespaces" name="should build one domain entity subclass" time="0.002">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity across dependent namespaces" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass does not rename identity" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when domain entity subclass does not rename identity" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass does not rename identity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity that does not exist" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity that does not exist" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity that does not exist" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when domain entity subclass renames base property that is not identity" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when domain entity subclass renames base property that is not identity" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base property that is not identity" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass extends non existent entity" name="should not build domain entity" time="0">
    </testcase>
    <testcase classname="when domain entity subclass extends non existent entity" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass extends non existent entity" name="should have validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntityExtension\DomainEntityExtensionMustNotRedeclareProperties.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:48" time="1.339" tests="10">
    <testcase classname="when domain entity extension correctly has different property names" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension correctly has different property names" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension has duplicate property name" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension has duplicate property name" name="should have validation failures()" time="0.002">
    </testcase>
    <testcase classname="when domain entity extension has duplicate property name but different role name" name="should have no validation failures()" time="0.003">
    </testcase>
    <testcase classname="when domain entity subclass and extension have duplicate property name" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when domain entity subclass and extension have duplicate property name" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension has multiple duplicates" name="should have validation failures()" time="0.004">
    </testcase>
    <testcase classname="when domain entity extension has duplicate common property" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension has duplicate common extension override property" name="should have no validation failures()" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Interchange\InterchangeIdentityMustMatchADomainEntityOrAssociationOrSubclass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.139" tests="22">
    <testcase classname="when validating interchange identity template is an abstract entity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is an abstract entity" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is an abstract entity" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity across namespaces" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity across namespaces" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity across namespaces" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity subclass" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity subclass" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity subclass" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is a domain entity subclass" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is an association" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is an association" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is an association" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is an association" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is an association" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template is an association" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange identity template is an association" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template has invalid name" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange identity template has invalid name" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\ForeignKeyForeignTableReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.047" tests="1">
    <testcase classname="when ForeignKeyForeignTableReferenceEnhancer enhances table with foreign key" name="should have foreign key with table set" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ChoicePropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="0.896" tests="2">
    <testcase classname="when building choice property table with two integer properties" name="should return no join table" time="0.002">
    </testcase>
    <testcase classname="when building choice property table with two integer properties" name="should have two columns" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\Deprecated\DeprecatedPropertyWarning.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.112" tests="4">
    <testcase classname="when property is not deprecated" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when properties are deprecated in alliance mode" name="should have validation failure" time="0.003">
    </testcase>
    <testcase classname="when properties are deprecated not in alliance mode" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when property references deprecated entity" name="should have validation failure" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\diminisher\AddLookupTypesDiminisher.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="0.94" tests="26">
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type name" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type annotation documentation" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type type group" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have no lookup type base type" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type item" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type item name" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type item type" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type item annotation" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type item annotation documentation" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have no lookup type item annotation descriptorName" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type item minOccurs" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have lookup type item maxOccursIsUnbounded" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type item" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type item name" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type item type" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type item annotation" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type item annotation documentation" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have no reference type item annotation descriptorName" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type item minOccurs" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity included in lookupTypeNames list" name="should have reference type item maxOccursIsUnbounded" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity not included in lookupTypeNames list" name="should have no lookup type" time="0">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity not included in lookupTypeNames list" name="should have no lookup type item" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity not included in lookupTypeNames list" name="should have no reference type" time="0.001">
    </testcase>
    <testcase classname="when AddLookupTypesDiminisher diminishes entity not included in lookupTypeNames list" name="should have no reference type item" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\enhancer\AssociationChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.127" tests="4">
    <testcase classname="when enhancing core association targeting 7.2 ODS/API" name="should create delete tracking table" time="0.004">
    </testcase>
    <testcase classname="when enhancing core association targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.003">
    </testcase>
    <testcase classname="when enhancing extension association targeting 7.2 ODS/API" name="should create delete tracking table" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension association targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\generator\OdsGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.045" tests="3">
    <testcase classname="when generating output for namespace" name="should generate empty output" time="0.002">
    </testcase>
    <testcase classname="when generating output for core namespace" name="should generate correct file name" time="0.001">
    </testcase>
    <testcase classname="when generating output for extension namespace" name="should generate correct file name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationSubclass\AssociationSubclassIdentifierMustMatchAnAssociation.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.036" tests="6">
    <testcase classname="when association subclass has valid extendee" name="should build one association subclass" time="0.002">
    </testcase>
    <testcase classname="when association subclass has valid extendee" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when association subclass has invalid extendee" name="should build one association subclass" time="0.001">
    </testcase>
    <testcase classname="when association subclass has invalid extendee" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when association subclass has valid extendee across dependent namespaces" name="should build one association subclass" time="0.001">
    </testcase>
    <testcase classname="when association subclass has valid extendee across dependent namespaces" name="should have no validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InterchangeExtension\InterchangeExtensionMustNotRedeclareBaseInterchangeElements.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.082" tests="9">
    <testcase classname="when validating interchange extension elements has different names than base interchange" name="should build one interchange" time="0.004">
    </testcase>
    <testcase classname="when validating interchange extension elements has different names than base interchange" name="should build one interchange extension" time="0.014">
    </testcase>
    <testcase classname="when validating interchange extension elements has different names than base interchange" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange extension elements duplicates names in base interchange" name="should build one interchange" time="0.004">
    </testcase>
    <testcase classname="when validating interchange extension elements duplicates names in base interchange" name="should build one interchange extension" time="0">
    </testcase>
    <testcase classname="when validating interchange extension elements duplicates names in base interchange" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when interchange extension elements duplicates multiple names in base interchange" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when interchange extension elements duplicates multiple names in base interchange" name="should build one interchange extension" time="0">
    </testcase>
    <testcase classname="when interchange extension elements duplicates multiple names in base interchange" name="should have validation failures" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationExtension\AssociationExtensionIdentifierMustMatchAnAssociationOrAssociationSubclass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.103" tests="8">
    <testcase classname="when association extension extends association" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when association extension extends association" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when association extension extends association subclass" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when association extension extends association subclass" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when association extension extends an invalid identifier" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when association extension extends an invalid identifier" name="should have validation failures()" time="0.004">
    </testcase>
    <testcase classname="when association extension specifies wrong namespace" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when association extension specifies wrong namespace" name="should have validation failures()" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\OdsTableIdEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="0.924" tests="4">
    <testcase classname="when enhancing a domain entity with ods table name" name="should have ods table name" time="0.001">
    </testcase>
    <testcase classname="when enhancing a descriptor with ods table name" name="should have ods table name" time="0">
    </testcase>
    <testcase classname="when enhancing an enumeration with ods table name" name="should have ods table name" time="0">
    </testcase>
    <testcase classname="when enhancing an school year enumeration with ods table name" name="should have ods table name" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationProperty\AssociationPropertyMustMatchAnAssociation.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.204" tests="9">
    <testcase classname="when association property has identifier of association" name="should have no validation failures()" time="0.03">
    </testcase>
    <testcase classname="when association property has identifier of association subclass" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when association property has invalid identifier" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when association property has invalid identifier" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when association property has identifier of association in dependency namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when association property has invalid identifier of association in dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when association property has invalid identifier of association in dependency namespace" name="should have validation failure for property" time="0.009">
    </testcase>
    <testcase classname="when association property refers to association in non-dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when association property refers to association in non-dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\generator\DomainMetadataGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:49" time="1.171" tests="8">
    <testcase classname="when generating aggregate for edfi" name="should generate aggregate element" time="0.001">
    </testcase>
    <testcase classname="when generating aggregate for extensions" name="should generate aggregate element" time="0.001">
    </testcase>
    <testcase classname="when generating aggregate with subclass for edfi" name="should generate aggregate element" time="0.001">
    </testcase>
    <testcase classname="when generating aggregate extensions" name="should generate aggregate element" time="0">
    </testcase>
    <testcase classname="when generating abstract aggregate for edfi" name="should generate aggregate element" time="0">
    </testcase>
    <testcase classname="when generating aggregate with primary key update" name="should generate aggregate element" time="0.001">
    </testcase>
    <testcase classname="when generating aggregate with required collection table" name="should generate aggregate element" time="0">
    </testcase>
    <testcase classname="when targeting ODS/API version 6.0.0 or greater" name="should not generate domain metadata" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedInteger\SharedIntegerMinValueMustNotBeGreaterThanMaxValue.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="0.983" tests="6">
    <testcase classname="when validating shared integer with max value greater than min value" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating shared integer with min value greater than max value" name="should build one shared integer" time="0">
    </testcase>
    <testcase classname="when validating shared integer with min value greater than max value" name="should have validation failures" time="0.003">
    </testcase>
    <testcase classname="when validating shared short with max value greater than min value" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating shared short with min value greater than max value" name="should build one shared integer" time="0">
    </testcase>
    <testcase classname="when validating shared short with min value greater than max value" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AssociationSubclass\AssociationSubclassMustNotRedeclareProperties.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.112" tests="10">
    <testcase classname="when association subclass has different property name" name="should build one association" time="0.001">
    </testcase>
    <testcase classname="when association subclass has different property name" name="should build one associationSubclass" time="0.001">
    </testcase>
    <testcase classname="when association subclass has different property name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when association subclass has duplicate property name" name="should build one association" time="0">
    </testcase>
    <testcase classname="when association subclass has duplicate property name" name="should build one associationSubclass" time="0.001">
    </testcase>
    <testcase classname="when association subclass has duplicate property name" name="should have validation failures" time="0.003">
    </testcase>
    <testcase classname="when association subclass has duplicate property name across dependent namespaces" name="should build one association" time="0">
    </testcase>
    <testcase classname="when association subclass has duplicate property name across dependent namespaces" name="should build one associationSubclass" time="0.001">
    </testcase>
    <testcase classname="when association subclass has duplicate property name across dependent namespaces" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when association subclass has duplicate property name but different role name" name="should have no validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InterchangeExtension\InterchangeExtensionMustNotRedeclareBaseInterchangeIdentityName.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.051" tests="9">
    <testcase classname="when validating interchange extension identity template has different names than base interchange" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange extension identity template has different names than base interchange" name="should build one interchange extension" time="0.001">
    </testcase>
    <testcase classname="when validating interchange extension identity template has different names than base interchange" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange extension identity template duplicates names in base interchange" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange extension identity template duplicates names in base interchange" name="should build one interchange extension" time="0.001">
    </testcase>
    <testcase classname="when validating interchange extension identity template duplicates names in base interchange" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when interchange extension identity templates duplicates multiple names in base interchange" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when interchange extension identity templates duplicates multiple names in base interchange" name="should build one interchange extension" time="0">
    </testcase>
    <testcase classname="when interchange extension identity templates duplicates multiple names in base interchange" name="should have validation failures" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\EnumerationPropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.118" tests="8">
    <testcase classname="when building enumeration property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building enumeration property table" name="should create one column" time="0">
    </testcase>
    <testcase classname="when building enumeration property table" name="should create one foreign key" time="0.001">
    </testcase>
    <testcase classname="when building enumeration property table" name="should have correct foreign key relationship" time="0">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should create two primary key columns" time="0">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should create one foreign key" time="0">
    </testcase>
    <testcase classname="when building collection enumeration property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\SchoolYearEnumerationPropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.141" tests="8">
    <testcase classname="when creating columns for school year enumeration property" name="should return a column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for school year enumeration property role name" name="should return a column role name" time="0.001">
    </testcase>
    <testcase classname="when creating columns for school year enumeration property role name and append parent context strategy" name="should return a column role name" time="0.001">
    </testcase>
    <testcase classname="when creating columns for nullable school year enumeration property" name="should return a nullable column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for primary key school year enumeration property" name="should return a primary key column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity rename school year enumeration property" name="should return a identity rename column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for primary key school year enumeration property with suppress primary key creation strategy" name="should return a primary key column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity rename school year enumeration property with suppress primary key creation strategy" name="should return a identity rename column" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedDecimal\SharedDecimalMinValueMustNotBeGreaterThanMaxValue.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.333" tests="3">
    <testcase classname="when validating shared decimal with max value greater than min value" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating shared decimal with min value greater than max value" name="should build one shared decimal" time="0.001">
    </testcase>
    <testcase classname="when validating shared decimal with min value greater than max value" name="should have validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntitySubclass\DomainEntitySubclassMustNotRedeclareProperties.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.107" tests="10">
    <testcase classname="when domain entity subclass has different property name" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has different property name" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has different property name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when domain entity subclass has duplicate property name" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has duplicate property name" name="should build one domain entity subclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has duplicate property name" name="should have validation failures" time="0.007">
    </testcase>
    <testcase classname="when domain entity subclass has duplicate property name but different role name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has multiple duplicate property name" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass has multiple duplicate property name" name="should build one domain entity subclass" time="0">
    </testcase>
    <testcase classname="when domain entity subclass has multiple duplicate property name" name="should have validation failures" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ReferencePropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.003" tests="23">
    <testcase classname="when building domain entity property table that is not an identity, required, optional, or a collection" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property table that is not an identity, required, optional, or a collection" name="should create no columns" time="0">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should return no join table" time="0">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should create one column" time="0.001">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should create no foreign keys" time="0.001">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should create one column" time="0">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should create no foreign keys" time="0">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should create one column" time="0">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should create no foreign keys" time="0.001">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should create two primary key columns" time="0.001">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should create one foreign key" time="0.002">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\AssociationAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.136" tests="2">
    <testcase classname="when enhancing associations" name="should create aggregate" time="0.006">
    </testcase>
    <testcase classname="when enhancing associations" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Namespace\NamespacesNamesMustNotHaveOnlyDifferentCasing.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="0.891" tests="3">
    <testcase classname="when validating namespaces are different" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating namespaces are exactly the same" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating namespaces are different only in casing" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\enhancer\DomainEntitySubclassChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.783" tests="4">
    <testcase classname="when enhancing core domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.003">
    </testcase>
    <testcase classname="when enhancing core domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.003">
    </testcase>
    <testcase classname="when enhancing extension domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\enhancer\EnumerationChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.074" tests="4">
    <testcase classname="when enhancing core enumeration targeting 7.2 ODS/API" name="should create delete tracking table" time="0.003">
    </testcase>
    <testcase classname="when enhancing core enumeration targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension enumeration targeting 7.2 ODS/API" name="should create delete tracking table" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension enumeration targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\CommonExtensionPropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:50" time="1.036" tests="6">
    <testcase classname="when building common property extension table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building common property extension table" name="should have three columns with two primary keys" time="0.002">
    </testcase>
    <testcase classname="when building common property extension table" name="should have correct column property paths" time="0.001">
    </testcase>
    <testcase classname="when building common property extension table" name="should have correct original entitie" time="0.001">
    </testcase>
    <testcase classname="when building common property extension table" name="should have one foreign key" time="0">
    </testcase>
    <testcase classname="when building common property extension table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Enumeration\EnumerationItemsMustBeUnique.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.892" tests="6">
    <testcase classname="when enumeration items have different short descriptions" name="should build one enumeration" time="0.001">
    </testcase>
    <testcase classname="when enumeration items have different short descriptions" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when enumeration items have duplicate short descriptions" name="should build one enumeration" time="0.001">
    </testcase>
    <testcase classname="when enumeration items have duplicate short descriptions" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when enumeration items have multiple duplicate short descriptions" name="should build one enumeration" time="0">
    </testcase>
    <testcase classname="when enumeration items have multiple duplicate short descriptions" name="should have multiple validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\diminisher\AbstractGeneralStudentProgramAssociationDiminisher.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.806" tests="2">
    <testcase classname="when diminishing with no matching entity" name="should not change associations in namespace" time="0">
    </testcase>
    <testcase classname="when diminishing with matching entity" name="should only set GeneralStudentProgramAssociation isAbstract" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Domain\DomainNamesMustBeUnique.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="1.048" tests="11">
    <testcase classname="when entities in same namespace have different names" name="should build two domain" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have different names" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should build one domain because DomainBuilder will not let it get that far" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should have no validation failures because of DomainBuilder" time="0">
    </testcase>
    <testcase classname="when domains in separate dependency-linked namespaces have identical names" name="should build one domain in core namespace" time="0.001">
    </testcase>
    <testcase classname="when domains in separate dependency-linked namespaces have identical names" name="should build one domain in extension namespace" time="0">
    </testcase>
    <testcase classname="when domains in separate dependency-linked namespaces have identical names" name="should have validation failures for each entity" time="0">
    </testcase>
    <testcase classname="when domains in non-dependency-linked namespaces have identical names" name="should build one core domain" time="0.001">
    </testcase>
    <testcase classname="when domains in non-dependency-linked namespaces have identical names" name="should build one extension1 domain" time="0">
    </testcase>
    <testcase classname="when domains in non-dependency-linked namespaces have identical names" name="should build one extension2 domain" time="0.001">
    </testcase>
    <testcase classname="when domains in non-dependency-linked namespaces have identical names" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Descriptor\DescriptorNamesMustBeUnique.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="1.104" tests="11">
    <testcase classname="when entities in same namespace have different names" name="should build two descriptor" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have different names" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should build one descriptor because TopLevelEntityBuilder will not let it get that far" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should have no validation failures because of TopLevelEntityBuilder" time="0">
    </testcase>
    <testcase classname="when descriptors in separate dependency-linked namespaces have identical names" name="should build one descriptor in core namespace" time="0">
    </testcase>
    <testcase classname="when descriptors in separate dependency-linked namespaces have identical names" name="should build one descriptor in extension namespace" time="0">
    </testcase>
    <testcase classname="when descriptors in separate dependency-linked namespaces have identical names" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when descriptors in non-dependency-linked namespaces have identical names" name="should build one core descriptor" time="0.001">
    </testcase>
    <testcase classname="when descriptors in non-dependency-linked namespaces have identical names" name="should build one extension1 descriptor" time="0.001">
    </testcase>
    <testcase classname="when descriptors in non-dependency-linked namespaces have identical names" name="should build one extension2 descriptor" time="0.005">
    </testcase>
    <testcase classname="when descriptors in non-dependency-linked namespaces have identical names" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Domain\DescriptorDomainItemMustMatchTopLevelEntity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.888" tests="6">
    <testcase classname="when validating descriptor domain item matches top level entity" name="should build one domain" time="0.002">
    </testcase>
    <testcase classname="when validating descriptor domain item matches top level entity" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating descriptor domain item matches top level entity across namespace" name="should build one domain" time="0.001">
    </testcase>
    <testcase classname="when validating descriptor domain item matches top level entity across namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating descriptor domain item does not match top level entity" name="should build one domain" time="0">
    </testcase>
    <testcase classname="when validating descriptor domain item does not match top level entity" name="should have one validation failure()" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Subdomain\SubdomainNamesMustBeUnique.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.926" tests="11">
    <testcase classname="when entities in same namespace have different names" name="should build two subdomain" time="0.001">
    </testcase>
    <testcase classname="when entities in same namespace have different names" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should build one subdomain because DomainBuilder will not let it get that far" time="0">
    </testcase>
    <testcase classname="when entities in same namespace have identical names" name="should have no validation failures because of DomainBuilder" time="0">
    </testcase>
    <testcase classname="when subdomains in separate dependency-linked namespaces have identical names" name="should build one subdomain in core namespace" time="0">
    </testcase>
    <testcase classname="when subdomains in separate dependency-linked namespaces have identical names" name="should build one subdomain in extension namespace" time="0.001">
    </testcase>
    <testcase classname="when subdomains in separate dependency-linked namespaces have identical names" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when subdomains in non-dependency-linked namespaces have identical names" name="should build one core subdomain" time="0.001">
    </testcase>
    <testcase classname="when subdomains in non-dependency-linked namespaces have identical names" name="should build one extension1 subdomain" time="0">
    </testcase>
    <testcase classname="when subdomains in non-dependency-linked namespaces have identical names" name="should build one extension2 subdomain" time="0">
    </testcase>
    <testcase classname="when subdomains in non-dependency-linked namespaces have identical names" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\DomainEntityReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.856" tests="5">
    <testcase classname="when enhancing domainEntity property referring to domainEntity" name="should have no validation failures()" time="0.003">
    </testcase>
    <testcase classname="when enhancing domainEntity property referring deprecated domainEntity" name="should have deprecation flag set" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity property referring to subclass" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity property referring to deprecated subclass" name="should have deprecation flag set" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity property referring to domainEntity across namespaces" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\AddDescriptorInterchangeEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.774" tests="6">
    <testcase classname="when running with one descriptor" name="should create only the one descriptor interchange element" time="0.002">
    </testcase>
    <testcase classname="when running with one descriptor" name="should not create extension descriptor interchange element" time="0.001">
    </testcase>
    <testcase classname="when running with one extension descriptor" name="should create two interchanges" time="0.001">
    </testcase>
    <testcase classname="when running with one extension descriptor" name="should create one core descriptor interchange element" time="0">
    </testcase>
    <testcase classname="when running with one extension descriptor" name="should create one extension descriptor interchange element" time="0.001">
    </testcase>
    <testcase classname="when running with no descriptors" name="should not create descriptor interchange element" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedDecimalProperty\SharedDecimalPropertyMustMatchASharedDecimal.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.946" tests="11">
    <testcase classname="when shared decimal property has identifier of shared decimal" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared decimal property has identifier of shared decimal with different local name" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared decimal property has invalid identifier" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared decimal property has invalid identifier" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when shared decimal property has identifier of shared decimal in dependency namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when shared decimal property has invalid identifier of shared decimal in dependency namespace" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared decimal property has invalid identifier of shared decimal in dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when shared decimal property refers to shared decimal in non-dependency namespace" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared decimal property refers to shared decimal in non-dependency namespace" name="should have validation failure for property" time="0.011">
    </testcase>
    <testcase classname="when shared decimal property has omitted namespace of shared decimal in dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared decimal property has omitted namespace of shared decimal in dependency namespace" name="should have validation failure for property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\validator\UpcomingImprovements\SubclassingAnyDomainEntityExceptEducationOrganizationIsUnsupported.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.898" tests="2">
    <testcase classname="when a domain entity subclass subclasses EducationOrganization" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when a domain entity subclass subclasses a non-EducationOrganization domain entity" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\IntegerProperty\IntegerPropertyMustNotMatchASharedString.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="0.994" tests="6">
    <testcase classname="when validating integer property does not match shared string" name="should build one shared string" time="0.001">
    </testcase>
    <testcase classname="when validating integer property does not match shared string" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating integer property does not match shared string" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating integer property matches shared string" name="should build one shared string" time="0">
    </testcase>
    <testcase classname="when validating integer property matches shared string" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating integer property matches shared string" name="should have no validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\EnumerationTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="1.026" tests="12">
    <testcase classname="when EnumerationTableEnhancer enhances enumeration" name="should create table" time="0.001">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration" name="should have four columns" time="0">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration" name="should have one primary key" time="0.001">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration" name="should have code value column" time="0.001">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration" name="should have description column" time="0.008">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration" name="should have short description column" time="0.001">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration name ending with &apos;Type&apos;" name="should create table" time="0.001">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration name ending with &apos;Type&apos;" name="should have four columns" time="0.001">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration name ending with &apos;Type&apos;" name="should have one primary key" time="0.017">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration name ending with &apos;Type&apos;" name="should have code value column" time="0">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration name ending with &apos;Type&apos;" name="should have description column" time="0">
    </testcase>
    <testcase classname="when EnumerationTableEnhancer enhances enumeration name ending with &apos;Type&apos;" name="should have short description column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\apiModel\BuildApiProperty.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="1.036" tests="10">
    <testcase classname="when building an api property from a not null integer column" name="should have correct api property" time="0.002">
    </testcase>
    <testcase classname="when building an api property from a nullable string column" name="should have correct api property" time="0.001">
    </testcase>
    <testcase classname="when building an api property from a decimal primary key column" name="should have correct api property" time="0.001">
    </testcase>
    <testcase classname="when building an api property from an identity integer column" name="should have correct api property" time="0.001">
    </testcase>
    <testcase classname="when building an api property from an integer column with min/max values for ODS/API version 7.0" name="should have correct api property" time="0.001">
    </testcase>
    <testcase classname="when building an api property from an integer column without min/max values for ODS/API version 7.0" name="should have correct api property" time="0">
    </testcase>
    <testcase classname="when building an api property from a short column with min/max values for ODS/API version 7.0" name="should have correct api property" time="0.001">
    </testcase>
    <testcase classname="when building an api property from a short column without min/max values for ODS/API version 7.0" name="should have correct api property" time="0">
    </testcase>
    <testcase classname="when building an api property from a decimal column with min/max values for ODS/API version 5.3" name="should have correct api property" time="0.002">
    </testcase>
    <testcase classname="when building an api property from a decimal column without min/max values for ODS/API version 5.3" name="should have correct api property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\StringProperty\StringPropertyMustNotMatchASharedString.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.095" tests="6">
    <testcase classname="when validating string property does not match shared string" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating string property does not match shared string" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating string identity matches shared string" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating string identity matches shared string" name="should have no validation failures" time="0.048">
    </testcase>
    <testcase classname="when validating string property matches shared string" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating string property matches shared string" name="should have no validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\StringProperty\StringPropertyMustNotMatchASharedDecimal.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="1.187" tests="6">
    <testcase classname="when validating string property does not match shared decimal" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating string property does not match shared decimal" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating string identity matches shared decimal" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating string identity matches shared decimal" name="should have no validation failures" time="0.003">
    </testcase>
    <testcase classname="when validating string property matches shared decimal" name="should build one abstract entity" time="0.002">
    </testcase>
    <testcase classname="when validating string property matches shared decimal" name="should have no validation failures" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\enhancer\DomainEntityChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:51" time="1.221" tests="4">
    <testcase classname="when enhancing core domainEntity targeting 7.2 ODS/API" name="should create delete tracking table" time="0.002">
    </testcase>
    <testcase classname="when enhancing core domainEntity targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension domainEntity targeting 7.2 ODS/API" name="should create delete tracking table" time="0.004">
    </testcase>
    <testcase classname="when enhancing extension domainEntity targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\CrossProperty\SelfReferencingPropertiesMustHaveRoleNameIfAllowed.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.158" tests="6">
    <testcase classname="when entity has no self-referencing properties" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when self-referencing property has no role name" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when self-referencing property has a role name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when self-referencing property is on an Inline Common" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when self-referencing property is on a Common" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when self-referencing property is on a Choice" name="should have validation failure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\generator\AggregateIdColumnsGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.133" tests="5">
    <testcase classname="when generating aggregateId columns for core namespace table that is not an aggregate root" name="should not generate aggregateId columns" time="0.003">
    </testcase>
    <testcase classname="when generating aggregateId columns for core namespace table for ODS/API &lt; 7.3" name="should not generate aggregateId columns" time="0.001">
    </testcase>
    <testcase classname="when generating aggregateId columns for core namespace table for ODS/API 7.3" name="should generate correct aggregateId columns" time="0.005">
    </testcase>
    <testcase classname="when generating aggregateId columns for core namespace table with a long tablename" name="should generate correct aggregateId columns" time="0.001">
    </testcase>
    <testcase classname="when generating aggregateId columns for extension namespace table" name="should generate correct aggregateId columns" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\AssociationExtensionBaseClassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="0.905" tests="4">
    <testcase classname="when enhancing association extension referring to association" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension referring to association subclass" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension referring to association across namespaces" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension referring to association subclass across namespaces" name="should have correct references" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CrossSimpleProperty\SimplePropertiesCannotReuseEntitySharedTypeNames.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.123" tests="12">
    <testcase classname="when building shared integer with duplicate integer property in core namespace" name="should build one integer property" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with duplicate integer property in core namespace" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with duplicate integer property in core namespace" name="should have validation failures for each entity" time="0.003">
    </testcase>
    <testcase classname="when building shared integer with duplicate integer property in extension namespace" name="should build one integer property" time="0">
    </testcase>
    <testcase classname="when building shared integer with duplicate integer property in extension namespace" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building shared decimal with duplicate decimal property in extension namespace" name="should build one decimal property" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with duplicate decimal property in extension namespace" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building shared string with duplicate string property in extension namespace reversed" name="should build one string property" time="0.001">
    </testcase>
    <testcase classname="when building shared string with duplicate string property in extension namespace reversed" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building shared string with duplicate integer property in core namespace" name="should build one integer property" time="0.001">
    </testcase>
    <testcase classname="when building shared string with duplicate integer property in core namespace" name="should have validation failures" time="0">
    </testcase>
    <testcase classname="when building shared string with duplicate integer property in core namespace" name="should have validation failures for each entity" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\generator\EducationOrganizationReferenceGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.13" tests="6">
    <testcase classname="when generating education organization reference for core" name="should generate education organization reference element" time="0.011">
    </testcase>
    <testcase classname="when generating education organization reference for extension" name="should generate education organization reference element" time="0">
    </testcase>
    <testcase classname="when generating education organization reference for both core and extensions" name="should generate core education organization reference element" time="0">
    </testcase>
    <testcase classname="when generating education organization reference for both core and extensions" name="should generate extension education organization reference element" time="0">
    </testcase>
    <testcase classname="when generating education organization reference for both core and empty extension" name="should only generate core education organization reference element" time="0.001">
    </testcase>
    <testcase classname="when targeting ODS/API version 6.0.0 or greater" name="should not generate education organization" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\validator\BlockPropertiesNamedDiscriminator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.111" tests="3">
    <testcase classname="when domain entity has no properties named Discriminator on tech version 5.1" name="should have no validation failures" time="0.002">
    </testcase>
    <testcase classname="when domain entity has property named Discriminator on tech version 5.1" name="should have validation failure" time="0.001">
    </testcase>
    <testcase classname="when domain entity has property named Discriminator on tech version below 5.1" name="should not have validation failure" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CrossProperty\NoPagingPropertyNames.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.157" tests="1">
    <testcase classname="when using reserved paging keywords as property names" name="should have validation failures" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonProperty\CommonPropertyMustNotContainIdentity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.1" tests="3">
    <testcase classname="when validating common property is part of identity" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when validating common property is part of identity" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating common property is part of identity" name="should have validation failure for property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\SchoolYearEnumerationPropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="0.937" tests="8">
    <testcase classname="when creating columns for school year enumeration property" name="should return a column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for school year enumeration property role name" name="should return a column role name" time="0.001">
    </testcase>
    <testcase classname="when creating columns for school year enumeration property role name and append parent context strategy" name="should return a column role name" time="0.001">
    </testcase>
    <testcase classname="when creating columns for nullable school year enumeration property" name="should return a nullable column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for primary key school year enumeration property" name="should return a primary key column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for identity rename school year enumeration property" name="should return a identity rename column" time="0.01">
    </testcase>
    <testcase classname="when creating columns for primary key school year enumeration property with suppress primary key creation strategy" name="should return a primary key column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity rename school year enumeration property with suppress primary key creation strategy" name="should return a identity rename column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\ChoiceReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="0.97" tests="3">
    <testcase classname="when enhancing choice property" name="should have no validation failures()" time="0.002">
    </testcase>
    <testcase classname="when enhancing choice property referring to deprecated choice" name="should have deprecation flag set" time="0">
    </testcase>
    <testcase classname="when enhancing choice property across namespaces" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\schema\AddEdFiOdsEntityRepository.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="0.893" tests="1">
    <testcase classname="when BaseDescriptorTableEnhancer enhances" name="should create plugin entity table" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntityExtension\DomainEntityExtensionIdentifierMustMatchADomainEntityOrDomainEntitySubclass.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:52" time="1.1" tests="8">
    <testcase classname="when domain entity extension extends domain entity" name="should build one domain entity extension" time="0.002">
    </testcase>
    <testcase classname="when domain entity extension extends domain entity" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension extends domain entity subclass" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension extends domain entity subclass" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when domain entity extension extends an invalid identifier" name="should build one domain entity extension" time="0">
    </testcase>
    <testcase classname="when domain entity extension extends an invalid identifier" name="should have validation failures()" time="0.002">
    </testcase>
    <testcase classname="when domain entity extension specifies wrong namespace" name="should build one domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when domain entity extension specifies wrong namespace" name="should have validation failures()" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\AssociationExtensionBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.878" tests="44">
    <testcase classname="when building association extension in extension namespace" name="should build one association extension" time="0.002">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should have extendee name" time="0.001">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should have base entity namespace" time="0">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building association extension in extension namespace" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building deprecated association extension" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when building deprecated association extension" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated association extension" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building association extension in extension namespace extending core entity" name="should have extendee name" time="0">
    </testcase>
    <testcase classname="when building association extension in extension namespace extending core entity" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building association extension in extension namespace extending core entity" name="should have base entity namespace" time="0">
    </testcase>
    <testcase classname="when building duplicate association extensions" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when building duplicate association extensions" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate association extensions" name="should have two validation failures" time="0.001">
    </testcase>
    <testcase classname="when building duplicate association extensions" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building association extension with no association extension name" name="should not build association extension" time="0">
    </testcase>
    <testcase classname="when building association extension with no association extension name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building association extension with lowercase association extension name" name="should not build association extension" time="0">
    </testcase>
    <testcase classname="when building association extension with lowercase association extension name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building association extension with no property" name="should build one association extension" time="0">
    </testcase>
    <testcase classname="when building association extension with no property" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association extension with no property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association extension with no property" name="should have extendee name" time="0">
    </testcase>
    <testcase classname="when building association extension with no property" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building association extension with no property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association extension with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building association extension with no property" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should build one association extension" time="0.001">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should have extendee name" time="0">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building association extension with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building association extension source map" name="should have a metaEdName property" time="0.001">
    </testcase>
    <testcase classname="when building association extension source map" name="should have a type property" time="0">
    </testcase>
    <testcase classname="when building association extension source map" name="should have source map data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Descriptor\DescriptorNameCannotEndInDescriptor.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.829" tests="4">
    <testcase classname="when descriptor has name ending in Descriptor" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when descriptor has name ending in Descriptor" name="should have validation failure" time="0.002">
    </testcase>
    <testcase classname="when descriptor has name not ending in Descriptor" name="should build one descriptor" time="0">
    </testcase>
    <testcase classname="when descriptor has name not ending in Descriptor" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Domain\AssociationDomainItemMustMatchTopLevelEntity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.961" tests="8">
    <testcase classname="when validating association domain item matches top level entity" name="should build one domain" time="0.002">
    </testcase>
    <testcase classname="when validating association domain item matches top level entity" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating association domain item matches top level entity across namespace" name="should build one domain" time="0">
    </testcase>
    <testcase classname="when validating association domain item matches top level entity across namespace" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating association domain item matches top level entity subclass" name="should build one domain" time="0.001">
    </testcase>
    <testcase classname="when validating association domain item matches top level entity subclass" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when validating association domain item does not match top level entity" name="should build one domain" time="0">
    </testcase>
    <testcase classname="when validating association domain item does not match top level entity" name="should have one validation failure()" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CrossProperty\ExtensionNamespacePropertiesShouldNotHaveSameRoleNameAsPropertyName.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.877" tests="6">
    <testcase classname="when property in Ed-Fi namespace has no role name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when property in Ed-Fi namespace has role name different from property name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when property in Ed-Fi namespace has role name same as property name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when property in non Ed-Fi namespace has no role name" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when property in non Ed-Fi namespace has role name different from property name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when property in non Ed-Fi namespace has role name same as property name" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonExtension\CommonExtensionMustNotRedeclareProperties.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.987" tests="8">
    <testcase classname="when common extension correctly has different property names" name="should build one common extension" time="0.002">
    </testcase>
    <testcase classname="when common extension correctly has different property names" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when common extension has duplicate property name" name="should build one common extension" time="0">
    </testcase>
    <testcase classname="when common extension has duplicate property name" name="should have validation failures()" time="0.004">
    </testcase>
    <testcase classname="when common extension has duplicate property name but different role names" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when common extension has multiple duplicates" name="should have validation failures()" time="0.011">
    </testcase>
    <testcase classname="when common extension has duplicate common property" name="should have validation failures()" time="0.002">
    </testcase>
    <testcase classname="when common extension has duplicate common extension override property" name="should have no validation failures()" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DescriptorPropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.952" tests="8">
    <testcase classname="when creating columns for descriptor property" name="should return a column" time="0.004">
    </testcase>
    <testcase classname="when creating columns for primary key descriptor property" name="should return a primary key column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for nullable descriptor property" name="should return a nullable column" time="0.017">
    </testcase>
    <testcase classname="when creating columns for descriptor property role name" name="should return a nullable column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for descriptor property role name and append parent context strategy" name="should return a nullable column" time="0.008">
    </testcase>
    <testcase classname="when creating columns for collection descriptor property" name="should return a primary key column" time="0.014">
    </testcase>
    <testcase classname="when creating columns for primary key descriptor property with suppress primary key creation strategy" name="should return a column" time="0.004">
    </testcase>
    <testcase classname="when creating columns for collection descriptor property with suppress primary key creation strategy" name="should return a column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\InterchangeBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="1.037" tests="95">
    <testcase classname="when building single interchange" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when building single interchange" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building single interchange" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building single interchange" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building single interchange" name="should have project extension" time="0.005">
    </testcase>
    <testcase classname="when building single interchange" name="should have interchange documentation" time="0.001">
    </testcase>
    <testcase classname="when building single interchange" name="should have extended documentation" time="0.001">
    </testcase>
    <testcase classname="when building single interchange" name="should have use case documentation" time="0">
    </testcase>
    <testcase classname="when building single interchange" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building single interchange" name="should have one element" time="0.001">
    </testcase>
    <testcase classname="when building single interchange" name="should have one identity template" time="0.001">
    </testcase>
    <testcase classname="when building deprecated interchange" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when building deprecated interchange" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated interchange" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building interchange with additional element and identity types" name="should have two element" time="0.005">
    </testcase>
    <testcase classname="when building interchange with additional element and identity types" name="should have one identity template" time="0.001">
    </testcase>
    <testcase classname="when building duplicate interchanges" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when building duplicate interchanges" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building duplicate interchanges" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate interchanges" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building single interchange extension" name="should build one interchange" time="0.01">
    </testcase>
    <testcase classname="when building single interchange extension" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have base entity namespace" time="0">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have one element" time="0">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have one identity template" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when building single interchange extension" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have base entity namespace" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have one element" time="0">
    </testcase>
    <testcase classname="when building single interchange extension" name="should have one identity template" time="0.002">
    </testcase>
    <testcase classname="when building deprecated interchange extension" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when building deprecated interchange extension" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated interchange extension" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension extending core interchange" name="should have extendee name" time="0.001">
    </testcase>
    <testcase classname="when building single interchange extension extending core interchange" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building single interchange extension extending core interchange" name="should have base entity namespace" time="0">
    </testcase>
    <testcase classname="when building single interchange extension extending core interchange" name="should have one element in local namespace" time="0.002">
    </testcase>
    <testcase classname="when building single interchange extension extending core interchange" name="should have one identity template in core namespace" time="0.001">
    </testcase>
    <testcase classname="when building duplicate interchange extensions" name="should build one interchange extension" time="0.001">
    </testcase>
    <testcase classname="when building duplicate interchange extensions" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate interchange extensions" name="should have two validation failures" time="0.002">
    </testcase>
    <testcase classname="when building duplicate interchange extensions" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building interchange with no interchange name" name="should not build interchange" time="0">
    </testcase>
    <testcase classname="when building interchange with no interchange name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building interchange with lowercase interchange name" name="should not build interchange" time="0.001">
    </testcase>
    <testcase classname="when building interchange with lowercase interchange name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building interchange with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building interchange with no interchange component property" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when building interchange with no interchange component property" name="should be found in entity repository" time="0.002">
    </testcase>
    <testcase classname="when building interchange with no interchange component property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building interchange with no interchange component property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building interchange with no interchange component property" name="should have no documentation" time="0">
    </testcase>
    <testcase classname="when building interchange with no interchange component property" name="should have no element" time="0.001">
    </testcase>
    <testcase classname="when building interchange with no interchange component property" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building interchange with invalid trailing text" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when building interchange with invalid trailing text" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building interchange with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building interchange with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building interchange with invalid trailing text" name="should have no documentation" time="0">
    </testcase>
    <testcase classname="when building interchange with invalid trailing text" name="should have one element" time="0">
    </testcase>
    <testcase classname="when building interchange with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building interchange extension with no interchange extension name" name="should not build interchange extension" time="0">
    </testcase>
    <testcase classname="when building interchange extension with no interchange extension name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building interchange extension with lowercase interchange extension name" name="should not build interchange extension" time="0">
    </testcase>
    <testcase classname="when building interchange extension with lowercase interchange extension name" name="should have no viable alternative error" time="0">
    </testcase>
    <testcase classname="when building interchange extension with no element property" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when building interchange extension with no element property" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building interchange extension with no element property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building interchange extension with no element property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building interchange extension with no element property" name="should have no element" time="0.001">
    </testcase>
    <testcase classname="when building interchange extension with no element property" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building interchange extension with invalid trailing text" name="should build one interchange" time="0.002">
    </testcase>
    <testcase classname="when building interchange extension with invalid trailing text" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building interchange extension with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building interchange extension with invalid trailing text" name="should have one element" time="0.005">
    </testcase>
    <testcase classname="when building interchange extension with invalid trailing text" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have extendedDocumentation" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have useCaseDocumentation" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have one element" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have one identityTemplate" time="0.001">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have line, column, text for each property" time="0.001">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have element type" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have element metaEdName" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have element line, column, text for each property" time="0.001">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have identityTemplate type" time="0.001">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have identityTemplate metaEdName" time="0">
    </testcase>
    <testcase classname="when building single interchange source map" name="should have identityTemplate line, column, text for each property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\generator\templates\SimpleTypeTemplate.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="1.203" tests="36">
    <testcase classname="when generating integer simple type" name="should be simple type only" time="0.004">
    </testcase>
    <testcase classname="when generating integer simple type" name="should have annotation and restriction" time="0.001">
    </testcase>
    <testcase classname="when generating integer simple type" name="should have annotation" time="0">
    </testcase>
    <testcase classname="when generating integer simple type" name="should have simple type name" time="0.001">
    </testcase>
    <testcase classname="when generating integer simple type" name="should have annotation" time="0">
    </testcase>
    <testcase classname="when generating integer simple type" name="should have base" time="0.001">
    </testcase>
    <testcase classname="when generating integer simple type" name="should not have further restrictions" time="0">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should be simple type only" time="0.001">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have annotation and restriction" time="0.001">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have annotation" time="0.001">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have simple type name" time="0">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have annotation" time="0.004">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have base" time="0">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have two restrictions" time="0.001">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have min length" time="0">
    </testcase>
    <testcase classname="when generating string simple type with min and max length" name="should have max length" time="0.001">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should be simple type only" time="0.001">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have annotation and restriction" time="0.001">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have annotation" time="0">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have simple type name" time="0">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have annotation" time="0.001">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have base" time="0">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have four restrictions" time="0">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have min value" time="0">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have max value" time="0">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have total digits" time="0.001">
    </testcase>
    <testcase classname="when generating decimal simple type with min and max value" name="should have decimal places" time="0.001">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should be simple type only" time="0.001">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have annotation and restriction" time="0.001">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have annotation" time="0">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have simple type name" time="0.001">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have annotation" time="0">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have base" time="0.001">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have one restriction" time="0">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have enumeration" time="0">
    </testcase>
    <testcase classname="when generating enumeration simple type with token" name="should have enumeration documentation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\MergeDirectiveEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="1.068" tests="33">
    <testcase classname="when enhancing top level entity with no merge directives" name="should have no merge directives" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to top level reference" name="should have correct source property" time="0.003">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to top level reference" name="should have correct target property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to top level reference" name="should have correct source targeted by property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to top level reference" name="should have correct merge targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with top level reference to nested reference" name="should have correct source property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with top level reference to nested reference" name="should have correct target property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with top level reference to nested reference" name="should have correct source targeted by property" time="0.026">
    </testcase>
    <testcase classname="when enhancing top level entity with top level reference to nested reference" name="should have correct merge targeted by property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to nested reference" name="should have correct source property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to nested reference" name="should have correct target property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to nested reference" name="should have correct source targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to nested reference" name="should have correct merge targeted by property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with deep nested reference to deep nested reference" name="should have correct source property" time="0.008">
    </testcase>
    <testcase classname="when enhancing top level entity with deep nested reference to deep nested reference" name="should have correct target property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with deep nested reference to deep nested reference" name="should have correct source targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with deep nested reference to deep nested reference" name="should have correct merge targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference through an extension to top level reference" name="should have correct source property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference through an extension to top level reference" name="should have correct target property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference through an extension to top level reference" name="should have correct source targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference through an extension to top level reference" name="should have correct merge targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous target property reference" name="should have correct source property" time="0.002">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous target property reference" name="should have null target property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous target property reference" name="should have correct source targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous target property reference" name="should have no merge targeted by property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous source property reference" name="should have null source property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous source property reference" name="should have correct target property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous source property reference" name="should have no source targeted by property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with extraneous source property reference" name="should have correct merge targeted by property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with non-reference property in middle of target path" name="should have correct source property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with non-reference property in middle of target path" name="should have no target property and only partial target chain" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with non-reference property in middle of target path" name="should have correct source targeted by property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with non-reference property in middle of target path" name="should have no merge targeted by property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DecimalProperty\DecimalPropertyMustNotMatchASharedInteger.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="1.028" tests="4">
    <testcase classname="when validating decimal property does not match shared integer" name="should build one abstract entity" time="0.011">
    </testcase>
    <testcase classname="when validating decimal property does not match shared integer" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating decimal property matches shared integer" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating decimal property matches shared integer" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedString\SharedStringMinLengthMustNotBeGreaterThanMaxLength.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.944" tests="4">
    <testcase classname="when validating shared string with max length greater than min length" name="should build one shared string" time="0.002">
    </testcase>
    <testcase classname="when validating shared string with max length greater than min length" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating shared string with min length greater than max length" name="should build one shared string" time="0.001">
    </testcase>
    <testcase classname="when validating shared string with min length greater than max length" name="should have validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\TopLevelEntityBaseReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.983" tests="5">
    <testcase classname="when enhancing domain entity subclass base entity reference" name="should create base entity reference property" time="0.002">
    </testcase>
    <testcase classname="when enhancing domain entity subclass base entity reference with identity rename" name="should not create base entity reference property" time="0">
    </testcase>
    <testcase classname="when enhancing domain entity extension base entity reference" name="should create base entity reference property" time="0.001">
    </testcase>
    <testcase classname="when enhancing association subclass base entity reference" name="should create base entity reference property" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extension base entity reference" name="should create base entity reference property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\DomainEntityAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="1.064" tests="8">
    <testcase classname="when enhancing a domain entity" name="should add aggregate to namespace" time="0.001">
    </testcase>
    <testcase classname="when enhancing a domain entity" name="should create aggregate" time="0.001">
    </testcase>
    <testcase classname="when enhancing a domain entity" name="should create entity tables" time="0.026">
    </testcase>
    <testcase classname="when enhancing a domain entity that allows primary key updates" name="should create aggregate" time="0.001">
    </testcase>
    <testcase classname="when enhancing a domain entity that allows primary key updates" name="should create entity tables" time="0">
    </testcase>
    <testcase classname="when enhancing a domain entity that has a required collection table" name="should add aggregate to namespace" time="0.001">
    </testcase>
    <testcase classname="when enhancing a domain entity that has a required collection table" name="should create aggregate" time="0">
    </testcase>
    <testcase classname="when enhancing a domain entity that has a required collection table" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DomainEntityExtensionTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="0.954" tests="25">
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension" name="should have schema equal to namespace" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension" name="should have description equal to documentation" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension" name="should have one columns" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with primary key" name="should create a table" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with primary key" name="should have one primary key column" time="0.002">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with primary key" name="should include create date column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common extension override" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common extension override" name="should create table for domain entity extension" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common extension override" name="should include create date column" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common extension override" name="should create common extension override join table" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common" name="should create a table for domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common" name="should include create date column" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with common" name="should create join table from domain entity and common" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only common" name="should create one tables" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only common" name="should not create a table for domain entity extension" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only common" name="should create join table from domain entity and common" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only commons" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only commons" name="should not create a table for domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only commons" name="should create join table from domain entity and common" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only commons" name="should create join table from domain entity and common collection" time="0.001">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only optional common property" name="should create one tables" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only optional common property" name="should not create a table for domain entity extension" time="0">
    </testcase>
    <testcase classname="when DomainEntityExtensionTableEnhancer enhances domain entity extension with only optional common property" name="should create join table from domain entity and common" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified-advanced\test\validator\Deprecated\DeprecatedDomainItemReferenceWarning.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:53" time="1.036" tests="2">
    <testcase classname="when domain item references no deprecated entity" name="should have no validation failure" time="0.002">
    </testcase>
    <testcase classname="when domain item references deprecated entity" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\PrimaryKeyCollector.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.961" tests="8">
    <testcase classname="when collecting primary key columns for identity property" name="should return a primary key column" time="0.004">
    </testcase>
    <testcase classname="when collecting primary key columns for inline common property" name="should return a primary key column" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for identity property and inline common property" name="should return two columns" time="0">
    </testcase>
    <testcase classname="when collecting primary key columns for identity property and inline common property" name="should return a primary key column for identity property" time="0.002">
    </testcase>
    <testcase classname="when collecting primary key columns for identity property and inline common property" name="should return a primary key column for inline common property" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for two inline common properties with primary key to same inline common entity" name="should return two columns" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for two inline common properties with primary key to same inline common entity" name="should return a primary key column role named first" time="0.001">
    </testcase>
    <testcase classname="when collecting primary key columns for two inline common properties with primary key to same inline common entity" name="should return a primary key column second" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Domain\DomainEntityDomainItemMustMatchTopLevelEntity.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.9" tests="8">
    <testcase classname="when validating domain entity domain item matches top level entity" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity domain item matches top level entity" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity domain item matches top level entity across namespace" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity domain item matches top level entity across namespace" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity domain item matches top level entity subclass" name="should build one domain entity" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity domain item matches top level entity subclass" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when validating domain entity domain item does not match top level entity" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when validating domain entity domain item does not match top level entity" name="should have one validation failure()" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedIntegerProperty\SharedIntegerPropertyMustMatchASharedInteger.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.942" tests="11">
    <testcase classname="when shared integer property has identifier of shared integer" name="should have no validation failures()" time="0.003">
    </testcase>
    <testcase classname="when shared integer property has identifier of shared short" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared integer property has identifier of shared short" name="should have validation failure for property" time="0.003">
    </testcase>
    <testcase classname="when shared integer property has identifier of shared integer with different local name" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when shared integer property has invalid identifier" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared integer property has invalid identifier" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when shared integer property has identifier of shared integer in dependency namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when shared integer property has invalid identifier of shared integer in dependency namespace" name="should have validation failures()" time="0.003">
    </testcase>
    <testcase classname="when shared integer property has invalid identifier of shared integer in dependency namespace" name="should have validation failure for property" time="0.009">
    </testcase>
    <testcase classname="when shared integer property refers to shared integer in non-dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared integer property refers to shared integer in non-dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedStringProperty\SharedStringPropertyMustMatchASharedString.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.945" tests="9">
    <testcase classname="when shared string property has identifier of shared string" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared string property has identifier of shared string with different local name" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when shared string property has invalid identifier" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared string property has invalid identifier" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when shared string property has identifier of shared string in dependency namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when shared string property has invalid identifier of shared string in dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared string property has invalid identifier of shared string in dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when shared string property refers to shared string in non-dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared string property refers to shared string in non-dependency namespace" name="should have validation failure for property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DescriptorPropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.926" tests="12">
    <testcase classname="when building descriptor property table" name="should return no join table" time="0.025">
    </testcase>
    <testcase classname="when building descriptor property table" name="should create one column" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building descriptor property table" name="should create one foreign key" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should create two primary key columns" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should create one foreign key" time="0">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should have correct foreign key relationship" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\AssociationSubclassBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.848" tests="77">
    <testcase classname="when building association subclass in extension namespace" name="should build one association subclass" time="0.001">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have base namespace" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building deprecated association subclass" name="should build one association subclass" time="0.001">
    </testcase>
    <testcase classname="when building deprecated association subclass" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated association subclass" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building association subclass in extension namespace subclassing core entity" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace subclassing core entity" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building association subclass in extension namespace subclassing core entity" name="should have base namespace" time="0">
    </testcase>
    <testcase classname="when building duplicate association subclasses" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when building duplicate association subclasses" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate association subclasses" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate association subclasses" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building association subclass with no association subclass name" name="should not build association subclass" time="0">
    </testcase>
    <testcase classname="when building association subclass with no association subclass name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with lowercase association subclass name" name="should not build association subclass" time="0">
    </testcase>
    <testcase classname="when building association subclass with lowercase association subclass name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building association subclass with no based on name" name="should have error" time="0.002">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should have one property" time="0.011">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should have integer property" time="0.004">
    </testcase>
    <testcase classname="when building association subclass with lowercase based on name" name="should have extraneous input error" time="0.009">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should build one association subclass" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should have base name but with lowercase prefix ignored" time="0">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should have no documentation" time="0">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building association subclass with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should build one association subclass" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should have base name but with lowercase prefix ignored" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building association subclass with no property" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should build one association subclass" time="0">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have base name" time="0">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building association subclass with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building association subclass source map" name="should have a baseEntityName property" time="0.001">
    </testcase>
    <testcase classname="when building association subclass source map" name="should have a documentation property" time="0">
    </testcase>
    <testcase classname="when building association subclass source map" name="should have a metaEdName property" time="0.001">
    </testcase>
    <testcase classname="when building association subclass source map" name="should have a type property" time="0">
    </testcase>
    <testcase classname="when building association subclass source map" name="should have source map data" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DescriptorPropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="1.061" tests="8">
    <testcase classname="when creating columns for descriptor property" name="should return a column" time="0.005">
    </testcase>
    <testcase classname="when creating columns for primary key descriptor property" name="should return a primary key column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for nullable descriptor property" name="should return a nullable column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for descriptor property role name" name="should return a nullable column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for descriptor property role name and append parent context strategy" name="should return a nullable column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for collection descriptor property" name="should return a primary key column" time="0.017">
    </testcase>
    <testcase classname="when creating columns for primary key descriptor property with suppress primary key creation strategy" name="should return a column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for collection descriptor property with suppress primary key creation strategy" name="should return a column" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\IntegerProperty\IntegerPropertyMustNotMatchASharedInteger.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="1.007" tests="4">
    <testcase classname="when validating integer property does not match shared integer" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating integer property does not match shared integer" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating integer property matches shared integer" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating integer property matches shared integer" name="should have no validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\AssociationExtensionTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.962" tests="23">
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension" name="should create a table" time="0.002">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension" name="should have schema equal to namespace" time="0.001">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension" name="should have description equal to documentation" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension" name="should have one column" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension" name="should include create date column" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with primary key" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with primary key" name="should have one primary key column" time="0.001">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with primary key" name="should include create date column" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common extension override" name="should create a table" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common extension override" name="should create table for association extension" time="0.001">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common extension override" name="should include create date column" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common extension override" name="should not create common extension override join table" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common" name="should create a table for association extension" time="0.001">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common" name="should include create date column" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with common" name="should create join table from association and common" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with only common" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with only common" name="should not create a table for association extension" time="0.001">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with only common" name="should create join table from association and common" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with only commons" name="should create two tables" time="0.001">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with only commons" name="should not create a table for association extension" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with only commons" name="should create join table from association and common" time="0">
    </testcase>
    <testcase classname="when AssociationExtensionTableEnhancer enhances association extension with only commons" name="should create join table from association and common collection" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\DecimalReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.851" tests="9">
    <testcase classname="when enhancing decimal property" name="should have property with no referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing decimal property" name="should have decimal type with no referring properties" time="0">
    </testcase>
    <testcase classname="when enhancing shared decimal property" name="should have property with correct referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing shared decimal property" name="should have decimal type with correct referring properties" time="0">
    </testcase>
    <testcase classname="when enhancing shared decimal property referring to deprecated shared decimal" name="should have deprecation flag set" time="0">
    </testcase>
    <testcase classname="when enhancing decimal property across namespaces" name="should have property with no referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing decimal property across namespaces" name="should have decimal type with no referring properties" time="0">
    </testcase>
    <testcase classname="when enhancing shared decimal property across namespaces" name="should have property with correct referenced entity" time="0">
    </testcase>
    <testcase classname="when enhancing shared decimal property across namespaces" name="should have decimal type with correct referring properties" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ReferencePropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.831" tests="6">
    <testcase classname="when creating columns for identity collection reference property" name="should return no columns" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity reference property" name="should return a primary key column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for identity reference properties with composite primary key" name="should return two columns" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity reference properties with composite primary key" name="should return a primary key column for first property" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity reference properties with composite primary key" name="should return a primary key column for second property" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity reference property that references entity with identity reference property" name="should return a primary key column" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddCommonExtensionComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.872" tests="9">
    <testcase classname="when enhancing common extension" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing common extension" name="should have annotation documentation assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing common extension" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing common extension" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing common extension" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing common extension" name="should not have items" time="0">
    </testcase>
    <testcase classname="when enhancing common extension" name="should not create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing common extension" name="should not create identity type" time="0.001">
    </testcase>
    <testcase classname="when enhancing common extension" name="should not create lookup type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DescriptorTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.926" tests="47">
    <testcase classname="when DescriptorTableEnhancer enhances simple descriptor" name="should create table" time="0.002">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances simple descriptor" name="should create two columns" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances simple descriptor" name="should have primary key" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances simple descriptor" name="should have property column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances simple descriptor" name="should have foreign key to descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have two columns" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have primary key" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have type column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have two foreign keys" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have foreign key to descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have foreign key to map type enumeration table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have map type enumeration table" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have four columns" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have one primary key" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have code value column" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have description column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with required map type" name="should have short description column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have two columns" time="0.005">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have primary key" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have type column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have two foreign keys" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have foreign key to descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have foreign key to map type enumeration table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have map type enumeration table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have four columns" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have one primary key" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have code value column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have description column" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with optional map type" name="should have short description column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should create two tables" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have two columns" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have primary key" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have type column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have two foreign keys" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have foreign key to descriptor table" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have foreign key to map type enumeration table" time="0.002">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have map type enumeration table" time="0.002">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have four columns" time="0">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have one primary key" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have code value column" time="0.002">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have description column" time="0.001">
    </testcase>
    <testcase classname="when DescriptorTableEnhancer enhances descriptor with map type name ending with &apos;Type&apos;" name="should have short description column" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InterchangeExtension\InterchangeExtensionMustNotRedeclareElements.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.815" tests="6">
    <testcase classname="when validating interchange extension element has different names" name="should build one interchange extension" time="0.001">
    </testcase>
    <testcase classname="when validating interchange extension element has different names" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating interchange element has duplicate names" name="should build one interchange extension" time="0">
    </testcase>
    <testcase classname="when validating interchange element has duplicate names" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when validating interchange element has multiple duplicate names" name="should build one interchange extension" time="0">
    </testcase>
    <testcase classname="when validating interchange element has multiple duplicate names" name="should have validation failures" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\ShortProperty\ShortPropertyMustNotMatchASharedDecimal.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="0.997" tests="9">
    <testcase classname="when validating short property does not match shared decimal" name="should build one shared decimal" time="0.001">
    </testcase>
    <testcase classname="when validating short property does not match shared decimal" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating short property does not match shared decimal" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating short identity matches shared decimal" name="should build one shared decimal" time="0.003">
    </testcase>
    <testcase classname="when validating short identity matches shared decimal" name="should build one abstract entity" time="0">
    </testcase>
    <testcase classname="when validating short identity matches shared decimal" name="should have one validation failure" time="0.003">
    </testcase>
    <testcase classname="when validating short property matches shared decimal" name="should build one shared decimal" time="0.001">
    </testcase>
    <testcase classname="when validating short property matches shared decimal" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating short property matches shared decimal" name="should have one validation failure" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\SimplePropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.846" tests="8">
    <testcase classname="when building simple entity property table with collection property and identity property" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have two columns" time="0">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have primary key" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should convert collection to primary key" time="0">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have foreign key" time="0">
    </testcase>
    <testcase classname="when building simple entity property table with collection property and identity property" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\CommonPropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.911" tests="5">
    <testcase classname="when creating columns for common with is collection property" name="should return no columns" time="0">
    </testcase>
    <testcase classname="when creating columns for common with only one property" name="should return a single column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for common with two properties" name="should return two columns" time="0.006">
    </testcase>
    <testcase classname="when creating columns for common with two properties" name="should return a string column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for common with two properties" name="should return an integer column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-postgresql\test\enhancer\DescriptorChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:54" time="1.107" tests="4">
    <testcase classname="when enhancing core descriptor targeting 7.2 ODS/API" name="should create delete tracking table" time="0.003">
    </testcase>
    <testcase classname="when enhancing core descriptor targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension descriptor targeting 7.2 ODS/API" name="should create delete tracking table" time="0.002">
    </testcase>
    <testcase classname="when enhancing extension descriptor targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DescriptorPropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.861" tests="12">
    <testcase classname="when building descriptor property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property table" name="should create one column" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property table" name="should have correct property paths" time="0.002">
    </testcase>
    <testcase classname="when building descriptor property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building descriptor property table" name="should create one foreign key" time="0.001">
    </testcase>
    <testcase classname="when building descriptor property table" name="should have correct foreign key relationship" time="0">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should create two primary key columns" time="0.003">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should create one foreign key" time="0.001">
    </testcase>
    <testcase classname="when building collection descriptor property table" name="should have correct foreign key relationship" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\EnumerationPropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.762" tests="6">
    <testcase classname="when creating columns for enumeration property" name="should return a column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for primary key enumeration property" name="should return a primary key column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity rename enumeration property" name="should return a primary key column with base key name" time="0.001">
    </testcase>
    <testcase classname="when creating columns for nullable enumeration property" name="should return a column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for primary key enumeration property with suppress primary key creation strategy" name="should return a column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity rename enumeration property with suppress primary key creation strategy" name="should return a column with base key name" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\InlineCommonProperty\InlineCommonPropertyMustNotBeACollection.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.944" tests="5">
    <testcase classname="when inline common property is not a collection" name="should not have validation failures()" time="0">
    </testcase>
    <testcase classname="when inline common property is an optional collection" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when inline common property is an optional collection" name="should have validation failure for property" time="0.003">
    </testcase>
    <testcase classname="when inline common property is a required collection" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when inline common property is a required collection" name="should have validation failure for property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\shared\AppendOverlapCollapsing.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.932" tests="9">
    <testcase classname="when appending overlapping strings" name="should append normally if no overlap :: AaaBbb, CccDdd =&gt; AaaBbbCccDdd" time="0.002">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should fully collapse if a prefix :: AaaBbb, AaaBbbCcc =&gt; AaaBbbCcc" time="0.001">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should fully collapse if a suffix :: AaaBbbCcc, BbbCcc =&gt; AaaBbbCcc" time="0">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should collapse single word overlap :: AaaBbbCcc, CccDddEee =&gt; AaaBbbCccDddEee" time="0.001">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should collapse two word overlap :: AaaBbbCcc, BbbCccDdd =&gt; AaaBbbCccDdd" time="0">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should collapse three word overlap :: AaaBbbCccDdd, BbbCccDddEee =&gt; AaaBbbCccDddEee" time="0.001">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should collapse with left side longer :: AaaBbbCccDddEee, DddEeeFff =&gt; AaaBbbCccDddEeeFff" time="0.001">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should collapse with right side longer :: AaaBbbCcc, BbbCccDddEeeFff =&gt; AaaBbbCccDddEeeFff" time="0">
    </testcase>
    <testcase classname="when appending overlapping strings" name="should not remove words not in overlap :: AaaBbbCccDdd, CccDddEeeAaa =&gt; AaaBbbCccDddEeeAaa" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\CommonExtension\CommonExtensionExistsOnlyInExtensionNamespace.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="1.028" tests="4">
    <testcase classname="when common extension is in correct namespace" name="should build one common extension" time="0.017">
    </testcase>
    <testcase classname="when common extension is in correct namespace" name="should have no validation failures()" time="0">
    </testcase>
    <testcase classname="when common extension is in core namespace" name="should build one common extension" time="0">
    </testcase>
    <testcase classname="when common extension is in core namespace" name="should have validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery\test\validator\NamespaceMustNotBeNamedChanges.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.921" tests="2">
    <testcase classname="when validating namespace named changes" name="should have validation failure" time="0.003">
    </testcase>
    <testcase classname="when validating namespace not named changes" name="should have validation failure" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\AssociationExtensionAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="1.01" tests="3">
    <testcase classname="when enhancing association extensions" name="should add aggregate to namespace" time="0.001">
    </testcase>
    <testcase classname="when enhancing association extensions" name="should create aggregate" time="0.002">
    </testcase>
    <testcase classname="when enhancing association extensions" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\InterchangeItemEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="1.026" tests="8">
    <testcase classname="when InterchangeItemEnhancer enhances element" name="should have xsdName assigned" time="0.001">
    </testcase>
    <testcase classname="when InterchangeItemEnhancer enhances element" name="should have xsdType value assigned" time="0">
    </testcase>
    <testcase classname="when InterchangeItemEnhancer enhances identity template" name="should have xsdName assigned" time="0.001">
    </testcase>
    <testcase classname="when InterchangeItemEnhancer enhances identity template" name="should have xsdType value assigned" time="0.001">
    </testcase>
    <testcase classname="when InterchangeItemEnhancer enhances element on extension" name="should have xsdName assigned" time="0">
    </testcase>
    <testcase classname="when InterchangeItemEnhancer enhances element on extension" name="should have xsdType value assigned" time="0">
    </testcase>
    <testcase classname="when InterchangeItemEnhancer enhances identity template on extension" name="should have xsdName assigned" time="0">
    </testcase>
    <testcase classname="when InterchangeItemEnhancer enhances identity template on extension" name="should have xsdType value assigned" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\SubclassIdentityEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.949" tests="4">
    <testcase classname="when enhancing association subclass without identity renames" name="should add base identity property to subclass primary key list" time="0.002">
    </testcase>
    <testcase classname="when enhancing association subclass without identity renames" name="should still have original identity" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass without identity renames" name="should not have base identity in properties" time="0">
    </testcase>
    <testcase classname="when enhancing association subclass with identity renames" name="should not add renamed identity property to subclass" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DescriptorProperty\DescriptorPropertyMustMatchADescriptor.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="1.037" tests="5">
    <testcase classname="when descriptor property has valid identifier" name="should build one descriptor" time="0.001">
    </testcase>
    <testcase classname="when descriptor property has valid identifier" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when descriptor property has valid identifier" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when descriptor property has invalid identifier" name="should build one domain entity" time="0">
    </testcase>
    <testcase classname="when descriptor property has invalid identifier" name="should have validation failures" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-postgresql\test\generator\IdIndexesGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="1.014" tests="4">
    <testcase classname="when generating id indexes for core namespace table with no id" name="should not generate id index" time="0.002">
    </testcase>
    <testcase classname="when generating id indexes for core namespace table with no type" name="should generate correct id index" time="0.001">
    </testcase>
    <testcase classname="when generating id indexes for core namespace table with type" name="should generate correct id index" time="0.001">
    </testcase>
    <testcase classname="when generating id indexes for extension namespace table with no type" name="should generate correct id index" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-changequery-sqlserver\test\enhancer\DomainEntitySubclassChangeQueryEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.971" tests="4">
    <testcase classname="when enhancing core domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.003">
    </testcase>
    <testcase classname="when enhancing core domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.004">
    </testcase>
    <testcase classname="when enhancing extension domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking table" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension domainEntitySubclass targeting 7.2 ODS/API" name="should create delete tracking trigger" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Interchange\InterchangeMustNotRedeclareInterchangeElements.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:55" time="0.94" tests="6">
    <testcase classname="when validating interchange interchange element has different names" name="should build one interchange" time="0.002">
    </testcase>
    <testcase classname="when validating interchange interchange element has different names" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating interchange interchange element has duplicate names" name="should build one interchange" time="0.001">
    </testcase>
    <testcase classname="when validating interchange interchange element has duplicate names" name="should have validation failures" time="0.002">
    </testcase>
    <testcase classname="when validating interchange interchange element has multiple duplicate names" name="should build one interchange" time="0">
    </testcase>
    <testcase classname="when validating interchange interchange element has multiple duplicate names" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DecimalProperty\DecimalPropertyMustNotMatchASharedDecimal.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="1.018" tests="4">
    <testcase classname="when validating decimal property does not match shared decimal" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property does not match shared decimal" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property matches shared decimal" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating decimal property matches shared decimal" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\BuildStrategy.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.973" tests="30">
    <testcase classname="when using default build strategy" name="should return empty string when calling parent context" time="0.001">
    </testcase>
    <testcase classname="when using default build strategy" name="should return same column transform strategy when calling leaf columns" time="0.001">
    </testcase>
    <testcase classname="when using default build strategy" name="should use default column namer strategy" time="0">
    </testcase>
    <testcase classname="when using default build strategy" name="should return true when calling build columns" time="0.001">
    </testcase>
    <testcase classname="when using default build strategy" name="should return false when calling suppress primary key creation" time="0">
    </testcase>
    <testcase classname="when composing default, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return parent context with inline context when calling parent context" time="0">
    </testcase>
    <testcase classname="when composing default, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return make null column transform strategy when calling leaf columns" time="0.001">
    </testcase>
    <testcase classname="when composing default, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should use ignore role name column namer strategy" time="0">
    </testcase>
    <testcase classname="when composing default, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling build columns" time="0.004">
    </testcase>
    <testcase classname="when composing default, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling suppress primary key creation" time="0">
    </testcase>
    <testcase classname="when using skip path build strategy with no eligible property paths" name="should return empty string when calling parent context" time="0">
    </testcase>
    <testcase classname="when using skip path build strategy with no eligible property paths" name="should return same column transform strategy when calling leaf columns" time="0.03">
    </testcase>
    <testcase classname="when using skip path build strategy with no eligible property paths" name="should use default column namer strategy" time="0.001">
    </testcase>
    <testcase classname="when using skip path build strategy with no eligible property paths" name="should return true when calling build columns" time="0.001">
    </testcase>
    <testcase classname="when using skip path build strategy with no eligible property paths" name="should return false when calling suppress primary key creation" time="0.002">
    </testcase>
    <testcase classname="when composing skip path with no eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return parent context with inline context when calling parent context" time="0.001">
    </testcase>
    <testcase classname="when composing skip path with no eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return make null column transform strategy when calling leaf columns" time="0.001">
    </testcase>
    <testcase classname="when composing skip path with no eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should use ignore role name column namer strategy" time="0">
    </testcase>
    <testcase classname="when composing skip path with no eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling build columns" time="0.001">
    </testcase>
    <testcase classname="when composing skip path with no eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling suppress primary key creation" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return parent context with inline context when calling parent context" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return make null column transform strategy when calling leaf columns" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should use ignore role name column namer strategy" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling build columns" time="0.001">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling suppress primary key creation" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return parent context with inline context when calling parent context" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return make null column transform strategy when calling leaf columns" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should use ignore role name column namer strategy" time="0">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling build columns" time="0.001">
    </testcase>
    <testcase classname="when composing skip path with eligible property paths, append parent context, append inline context, column namer ignores role name, make leaf columns nullable, suppress primary key creation from properties build strategies" name="should return true when calling suppress primary key creation" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\MergedInterchangeAssociationExtensionEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.977" tests="1">
    <testcase classname="when enhances MergedInterchange with association extension" name="should create additional extension interchange" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\Descriptor\DescriptorMustNotHaveAttributes.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="1.128" tests="3">
    <testcase classname="when descriptor does not have properties" name="should not have validation errors" time="0.006">
    </testcase>
    <testcase classname="when descriptor has properties" name="should have validation errors" time="0.001">
    </testcase>
    <testcase classname="when version does not satisfy &gt;= 5.2.0" name="should not have validation errors" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-api-schema\test\Utility.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.913" tests="13">
    <testcase classname="when pluralizing a word" name="Pluralizes accommodation as accommodations" time="0.001">
    </testcase>
    <testcase classname="when pluralizing a word" name="Pluralizes Accommodation as Accommodations" time="0">
    </testcase>
    <testcase classname="when pluralizing a word" name="Pluralizes property as properties" time="0.001">
    </testcase>
    <testcase classname="when pluralizing a word" name="Pluralizes item as items" time="0">
    </testcase>
    <testcase classname="when pluralizing a word" name="Pluralizes descriptor as descriptors" time="0">
    </testcase>
    <testcase classname="when pluralizing a word" name="Pluralizes mouse as mice" time="0">
    </testcase>
    <testcase classname="when uncapitalizg a word" name="Uncapitalizes urls as urls" time="0">
    </testcase>
    <testcase classname="when uncapitalizg a word" name="Uncapitalizes Urls as urls" time="0">
    </testcase>
    <testcase classname="when uncapitalizg a word" name="Uncapitalizes URLS as urls" time="0.001">
    </testcase>
    <testcase classname="when uncapitalizg a word" name="Uncapitalizes URLs as urls" time="0">
    </testcase>
    <testcase classname="when uncapitalizg a word" name="Uncapitalizes URLAtFirst as urlAtFirst" time="0">
    </testcase>
    <testcase classname="when uncapitalizg a word" name="Uncapitalizes AtTheEndIsURL as atTheEndIsURL" time="0">
    </testcase>
    <testcase classname="when uncapitalizg a word" name="Uncapitalizes InTheMiddleURLIsFound as inTheMiddleURLIsFound" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\InlineCommonReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.91" tests="3">
    <testcase classname="when enhancing inlineCommon property" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when enhancing inlineCommon property referring to deprecated inline common" name="should have deprecation flag set" time="0.001">
    </testcase>
    <testcase classname="when enhancing inlineCommon property across namespaces" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\TableDeprecationEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.918" tests="1">
    <testcase classname="when table parent entity has deprecation" name="should have correct deprecation status" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedShortProperty\SharedShortPropertyMustMatchASharedShort.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="1.032" tests="11">
    <testcase classname="when shared short property has identifier of shared short" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared short property has identifier of shared integer" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared short property has identifier of shared integer" name="should have validation failure for property" time="0.001">
    </testcase>
    <testcase classname="when shared short property has identifier of shared short with different local name" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared short property has invalid identifier" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared short property has invalid identifier" name="should have validation failure for property" time="0.002">
    </testcase>
    <testcase classname="when shared short property has identifier of shared short in dependency namespace" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared short property has invalid identifier of shared short in dependency namespace" name="should have validation failures()" time="0">
    </testcase>
    <testcase classname="when shared short property has invalid identifier of shared short in dependency namespace" name="should have validation failure for property" time="0.014">
    </testcase>
    <testcase classname="when shared short property refers to shared short in non-dependency namespace" name="should have validation failures()" time="0.001">
    </testcase>
    <testcase classname="when shared short property refers to shared short in non-dependency namespace" name="should have validation failure for property" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\InlineCommonPropertyTableBuilderV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.91" tests="8">
    <testcase classname="when building inline common property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building inline common property table" name="should have one column" time="0">
    </testcase>
    <testcase classname="when building inline common property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building inline common property table" name="should have correct original entities" time="0.003">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should return no join table" time="0.003">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should have one column" time="0.002">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should have correct original entities" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\InheritedDocumentationCopyingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.862" tests="2">
    <testcase classname="when enhancing shared integer property with inherited documentation" name="should have correct referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing domain entity property with inherited documentation" name="should have correct referenced entity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\DomainEntitySubclass\DomainEntitySubclassIdentityRenameMustExistNoMoreThanOnce.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="1.025" tests="3">
    <testcase classname="when domain entity subclass renames base identity more than once" name="should build one domainEntity" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity more than once" name="should build one domainEntitySubclass" time="0.001">
    </testcase>
    <testcase classname="when domain entity subclass renames base identity more than once" name="should have validation failures" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddDescriptorExtendedReferenceTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.904" tests="5">
    <testcase classname="when enhancing descriptor" name="should create extended reference type" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor" name="should have name assigned" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\CommonPropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.889" tests="20">
    <testcase classname="when building common property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building common property table" name="should have two primary key columns" time="0.001">
    </testcase>
    <testcase classname="when building common property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building common property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building common property table" name="should have one foreign key" time="0">
    </testcase>
    <testcase classname="when building common property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should have two columns with one primary key" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building optional common property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building optional common property table" name="should have one foreign key" time="0">
    </testcase>
    <testcase classname="when building optional common property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
    <testcase classname="when building required collection common property table" name="should return required collection table" time="0.001">
    </testcase>
    <testcase classname="when building required collection common property table" name="should have two primary keys" time="0.001">
    </testcase>
    <testcase classname="when building required collection common property table" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building required collection common property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should return required collection table" time="0">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should have two primary keys" time="0">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building required collection common property table with make leaf column nullable strategy" name="should have correct original entities" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\QueryableLookupSupport\SubclassQueryableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="0.906" tests="4">
    <testcase classname="when enhancing domain entity subclass queryables" name="should have both queryable fields" time="0.002">
    </testcase>
    <testcase classname="when enhancing domain entity subclass with identity rename of base class queryable" name="should have both queryable fields" time="0.001">
    </testcase>
    <testcase classname="when enhancing association subclass queryables" name="should have both queryable fields" time="0.003">
    </testcase>
    <testcase classname="when enhancing association subclass with identity rename of base class queryable" name="should ignore renamed identity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DomainEntitySubclassTableEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.838" tests="9">
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass" name="should have schema equal to namespace" time="0.001">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass" name="should have description equal to documentation" time="0.01">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass" name="should have one column" time="0.001">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass with primary key" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass with primary key" name="should have one primary key column" time="0">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass with identity rename property" name="should create a table" time="0.001">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass with identity rename property" name="should have one column" time="0">
    </testcase>
    <testcase classname="when DomainEntitySubclassTableEnhancer enhances domain entity subclass with identity rename property" name="should create foreign key to from identity rename property to base entity property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddSchemaContainerEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:56" time="1.133" tests="18">
    <testcase classname="when enhancing namespace info for core" name="should have is extension assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing namespace info for core" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing namespace info for core" name="should generate sections in correct order" time="0.002">
    </testcase>
    <testcase classname="when enhancing namespace info for extension" name="should have is extension assigned" time="0">
    </testcase>
    <testcase classname="when enhancing namespace info for extension" name="should have annotation documentation assigned" time="0.006">
    </testcase>
    <testcase classname="when enhancing namespace info for extension" name="should generate sections in correct order" time="0.002">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate domain entities section" time="0.002">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate descriptor section" time="0.006">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate associations section" time="0">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate references section" time="0.002">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate descriptor references section" time="0">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate common types section" time="0">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate enumerations section" time="0.001">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate common types section in extension" time="0.018">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate string simple types section in extension without base types" time="0.004">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate string simple types section in core" time="0.001">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate numeric simple types section in extension without base types" time="0.001">
    </testcase>
    <testcase classname="when enhancing namespace info for core with children" name="should generate numeric simple types section in core" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\DomainEntityExtensionBaseClassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.886" tests="4">
    <testcase classname="when enhancing domainEntity extension referring to domainEntity" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension referring to domainEntity subclass" name="should have correct references" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension referring to domainEntity across namespaces" name="should have correct references" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension referring to domainEntity subclass across namespaces" name="should have correct references" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\SchoolYearEnumerationReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.927" tests="2">
    <testcase classname="when enhancing schoolYearEnumeration property" name="should have no validation failures()" time="0.003">
    </testcase>
    <testcase classname="when enhancing schoolYearEnumeration property across namespaces" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\EnumerationRowEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.999" tests="6">
    <testcase classname="when EnumerationRowEnhancer enhances enumeration" name="should create two rows" time="0.002">
    </testcase>
    <testcase classname="when EnumerationRowEnhancer enhances enumeration" name="should have correct first enumeration row" time="0.002">
    </testcase>
    <testcase classname="when EnumerationRowEnhancer enhances enumeration" name="should have correct second enumeration row" time="0.003">
    </testcase>
    <testcase classname="when EnumerationRowEnhancer enhances enumeration with name that ends with &apos;Type&apos;" name="should create two rows" time="0.001">
    </testcase>
    <testcase classname="when EnumerationRowEnhancer enhances enumeration with name that ends with &apos;Type&apos;" name="should have correct first enumeration row" time="0.001">
    </testcase>
    <testcase classname="when EnumerationRowEnhancer enhances enumeration with name that ends with &apos;Type&apos;" name="should have correct second enumeration row" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-odsapi\test\enhancer\domainMetadata\DescriptorAggregateEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="1.067" tests="7">
    <testcase classname="when enhancing descriptor with no map type" name="should add aggregate to namespace" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with no map type" name="should create aggregate" time="0">
    </testcase>
    <testcase classname="when enhancing descriptor with no map type" name="should create entity tables" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with map type" name="should add aggregate to namespace" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with map type" name="should create aggregate" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with map type" name="should create type aggregate" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with map type" name="should create entity tables" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ReferencePropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.837" tests="6">
    <testcase classname="when creating columns for identity collection reference property" name="should return no columns" time="0.001">
    </testcase>
    <testcase classname="when creating columns for identity reference property" name="should return a primary key column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for identity reference properties with composite primary key" name="should return two columns" time="0">
    </testcase>
    <testcase classname="when creating columns for identity reference properties with composite primary key" name="should return a primary key column for first property" time="0.002">
    </testcase>
    <testcase classname="when creating columns for identity reference properties with composite primary key" name="should return a primary key column for second property" time="0.003">
    </testcase>
    <testcase classname="when creating columns for identity reference property that references entity with identity reference property" name="should return a primary key column" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\SharedIntegerBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.857" tests="107">
    <testcase classname="when building shared integer in extension namespace" name="should build one shared integer" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should not be a short" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should not have big hint" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared integer" name="should build one shared integer" time="0">
    </testcase>
    <testcase classname="when building deprecated shared integer" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared integer" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building duplicate shared integers" name="should build one shared integer" time="0">
    </testcase>
    <testcase classname="when building duplicate shared integers" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate shared integers" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate shared integers" name="should have validation failures for each entity" time="0.003">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should build one shared short" time="0.004">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have namespace" time="0.004">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should be a short" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with no shared integer name" name="should not build shared integer" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with no shared integer name" name="should have missing id error" time="0">
    </testcase>
    <testcase classname="when building shared integer with lowercase shared integer name" name="should build no shared short" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with lowercase shared integer name" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with no documentation" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with no documentation" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with no documentation" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared integer with no documentation" name="should not have minValue" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with no documentation" name="should not have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared integer with no documentation" name="should not be a short" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty min value" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty min value" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty min value" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with empty min value" name="should not be a short" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty min value" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with empty max value" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty max value" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with empty max value" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty max value" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty max value" name="should not have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with empty max value" name="should not be a short" time="0">
    </testcase>
    <testcase classname="when building shared integer with empty max value" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building shared integer with big min value" name="should not have a min value" time="0">
    </testcase>
    <testcase classname="when building shared integer with big min value" name="should have big hint" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with big max value" name="should not have a max value" time="0">
    </testcase>
    <testcase classname="when building shared integer with big max value" name="should have big hint" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with big min and big max value" name="should not have a min value" time="0.029">
    </testcase>
    <testcase classname="when building shared integer with big min and big max value" name="should not have a max value" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with big min and big max value" name="should have big hint" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared integer with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared integer with invalid trailing text" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared integer with invalid trailing text" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared integer with invalid trailing text" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared integer with invalid trailing text" name="should not be a short" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building shared short with no shared short name" name="should not build shared short" time="0.001">
    </testcase>
    <testcase classname="when building shared short with no shared short name" name="should have missing id error" time="0">
    </testcase>
    <testcase classname="when building shared short with lowercase shared short name" name="should build no shared short" time="0">
    </testcase>
    <testcase classname="when building shared short with lowercase shared short name" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building shared short with no documentation" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared short with no documentation" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared short with no documentation" name="should not have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared short with no documentation" name="should not have minValue" time="0">
    </testcase>
    <testcase classname="when building shared short with no documentation" name="should not have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared short with no documentation" name="should be a short" time="0">
    </testcase>
    <testcase classname="when building shared short with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building shared short with empty min value" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared short with empty min value" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared short with empty min value" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared short with empty min value" name="should be a short" time="0">
    </testcase>
    <testcase classname="when building shared short with empty min value" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building shared short with empty max value" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared short with empty max value" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared short with empty max value" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building shared short with empty max value" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building shared short with empty max value" name="should not have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared short with empty max value" name="should be a short" time="0">
    </testcase>
    <testcase classname="when building shared short with empty max value" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building shared short with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared short with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared short with invalid trailing text" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building shared short with invalid trailing text" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building shared short with invalid trailing text" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared short with invalid trailing text" name="should be a short" time="0.001">
    </testcase>
    <testcase classname="when building shared short with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building shared integer source map" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building shared integer source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building shared integer source map" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared integer source map" name="should have isShort" time="0">
    </testcase>
    <testcase classname="when building shared integer source map" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared integer source map" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared integer source map" name="should have line, column, text for each property" time="0">
    </testcase>
    <testcase classname="when building shared short source map" name="should have type" time="0">
    </testcase>
    <testcase classname="when building shared short source map" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared short source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building shared short source map" name="should have isShort" time="0">
    </testcase>
    <testcase classname="when building shared short source map" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared short source map" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared short source map" name="should have line, column, text for each property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ReferencePropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="1.021" tests="23">
    <testcase classname="when building domain entity property table that is not an identity, required, optional, or a collection" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building domain entity property table that is not an identity, required, optional, or a collection" name="should create no columns" time="0">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should create one column" time="0.001">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building identity domain entity property table" name="should create no foreign keys" time="0">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should return no join table" time="0">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should create one column" time="0.001">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building required domain entity property table" name="should create no foreign keys" time="0">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should create one column" time="0">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building optional domain entity property table" name="should create no foreign keys" time="0">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should return join table" time="0.001">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should create two primary key columns" time="0.006">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should have correct original entities" time="0">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should create one foreign key" time="0.001">
    </testcase>
    <testcase classname="when building collection domain entity property table" name="should have correct foreign key relationship" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\generator\SchemaGenerator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.95" tests="2">
    <testcase classname="when generating schemas for core namespace" name="should generate correct schema" time="0.005">
    </testcase>
    <testcase classname="when generating schemas for extension namespace" name="should generate correct schema" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddStringSimpleTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="1.067" tests="17">
    <testcase classname="when enhancing string type" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing string type" name="should have annotation documentation assigned" time="0.006">
    </testcase>
    <testcase classname="when enhancing string type" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing string type" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing string type" name="should have max length assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing string type" name="should have min length assigned" time="0">
    </testcase>
    <testcase classname="when enhancing string type" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated string type with min length only" name="should create simple type" time="0">
    </testcase>
    <testcase classname="when enhancing generated string type with min length only" name="should not have max length assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated string type with min length only" name="should have min length assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated string type with max length only" name="should create simple type" time="0.003">
    </testcase>
    <testcase classname="when enhancing generated string type with max length only" name="should have max length assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated string type with max length only" name="should not have min length assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing non-generated string type with no restrictions" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing non-generated string type with no restrictions" name="should not have max length assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing non-generated string type with no restrictions" name="should not have min length assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated string type with no restrictions" name="should create simple type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\CommonBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.856" tests="84">
    <testcase classname="when building common in extension namespace" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should not be inlined in ODS" time="0">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should have entity documentation" time="0.001">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should have one property" time="0.002">
    </testcase>
    <testcase classname="when building common in extension namespace" name="should have integer property" time="0.002">
    </testcase>
    <testcase classname="when building deprecated common" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when building deprecated common" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated common" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building duplicate commons" name="should build one common" time="0">
    </testcase>
    <testcase classname="when building duplicate commons" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building duplicate commons" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate commons" name="should have validation failures for each entity" time="0.018">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should be inlined in ODS" time="0">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building inline common in extension namespace" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building common with no common name" name="should not build common" time="0">
    </testcase>
    <testcase classname="when building common with no common name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building common with lowercase common name" name="should not build common" time="0">
    </testcase>
    <testcase classname="when building common with lowercase common name" name="should have no viable alternative error" time="0.001">
    </testcase>
    <testcase classname="when building common with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building common with no property" name="should build one common" time="0.001">
    </testcase>
    <testcase classname="when building common with no property" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building common with no property" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building common with no property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building common with no property" name="should be inlined in ODS" time="0">
    </testcase>
    <testcase classname="when building common with no property" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building common with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building common with no property" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should build one common" time="0">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should be inlined in ODS" time="0">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should have one property" time="0">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should have integer property" time="0.001">
    </testcase>
    <testcase classname="when building common with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building inline common with no inline common name" name="should not build inline common" time="0">
    </testcase>
    <testcase classname="when building inline common with no inline common name" name="should have missing id error" time="0.001">
    </testcase>
    <testcase classname="when building inline common with lowercase inline common name" name="should build no inline common" time="0.001">
    </testcase>
    <testcase classname="when building inline common with lowercase inline common name" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should build one inline common" time="0">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should be inlined in ODS" time="0">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should not have documentation" time="0.001">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should have no properties" time="0">
    </testcase>
    <testcase classname="when building inline common with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building inline common with no property" name="should build one inline common" time="0">
    </testcase>
    <testcase classname="when building inline common with no property" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building inline common with no property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building inline common with no property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building inline common with no property" name="should be inlined in ODS" time="0.001">
    </testcase>
    <testcase classname="when building inline common with no property" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building inline common with no property" name="should have no property" time="0">
    </testcase>
    <testcase classname="when building inline common with no property" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should build one inline common" time="0.001">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should be inlined in ODS" time="0">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should have one property" time="0.001">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should have integer property" time="0">
    </testcase>
    <testcase classname="when building inline common with invalid trailing text" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building common source map" name="should have a documentation property" time="0">
    </testcase>
    <testcase classname="when building common source map" name="should have a metaEdName property" time="0.001">
    </testcase>
    <testcase classname="when building common source map" name="should have a type property" time="0">
    </testcase>
    <testcase classname="when building common source map" name="should have source map data" time="0.001">
    </testcase>
    <testcase classname="when building inline common source map" name="should have a documentation property" time="0">
    </testcase>
    <testcase classname="when building inline common source map" name="should have a metaEdName property" time="0">
    </testcase>
    <testcase classname="when building inline common source map" name="should have a type property" time="0.001">
    </testcase>
    <testcase classname="when building inline common source map" name="should have source map data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\DomainSubdomainEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.881" tests="1">
    <testcase classname="when enhancing domain" name="should have sorted subdomain references" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\StringProperty\StringPropertyMinLengthMustNotBeGreaterThanMaxLength.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.958" tests="9">
    <testcase classname="when validating string property with correct minimum length and maximum length" name="should build one abstract entity" time="0.002">
    </testcase>
    <testcase classname="when validating string property with correct minimum length and maximum length" name="should build two properties" time="0">
    </testcase>
    <testcase classname="when validating string property with correct minimum length and maximum length" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating string property with same minimum length and maximum length" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating string property with same minimum length and maximum length" name="should build two properties" time="0">
    </testcase>
    <testcase classname="when validating string property with same minimum length and maximum length" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating string property with minimum length greater than maximum length" name="should build one abstract entity" time="0.001">
    </testcase>
    <testcase classname="when validating string property with minimum length greater than maximum length" name="should build two properties" time="0">
    </testcase>
    <testcase classname="when validating string property with minimum length greater than maximum length" name="should have validation failures" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\HasDuplicateEntityNameInDependencyNamespaceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="1.097" tests="13">
    <testcase classname="when DEs have different names across dependency-linked namespaces" name="should build one core domain entity" time="0.001">
    </testcase>
    <testcase classname="when DEs have different names across dependency-linked namespaces" name="should build one extension domain entity" time="0">
    </testcase>
    <testcase classname="when DEs have different names across dependency-linked namespaces" name="should not flag duplicates" time="0.001">
    </testcase>
    <testcase classname="when DEs have same names across dependency-linked namespaces" name="should build one core domain entity" time="0">
    </testcase>
    <testcase classname="when DEs have same names across dependency-linked namespaces" name="should build one extension domain entity" time="0.001">
    </testcase>
    <testcase classname="when DEs have same names across dependency-linked namespaces" name="should flag duplicates" time="0">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should build one core domain entity" time="0.001">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should build one extension1 domain entity extension" time="0">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should build one extension2 domain entity extension" time="0">
    </testcase>
    <testcase classname="when DE Extension has same name as DE Extension that is not across dependency-linked namespaces" name="should not flag duplicates" time="0.001">
    </testcase>
    <testcase classname="when DE has same name as DE extension across dependency-linked namespaces" name="should build one core domain entity" time="0">
    </testcase>
    <testcase classname="when DE has same name as DE extension across dependency-linked namespaces" name="should build one extension domain entity extension" time="0.011">
    </testcase>
    <testcase classname="when DE has same name as DE extension across dependency-linked namespaces" name="should not flag duplicates" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\ForeignKeyReverseIndexEnhancerV6x.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:57" time="0.871" tests="6">
    <testcase classname="when ForeignKeyReverseIndexEnhancer enhances table with foreign key matching primary key columns" name="should have foreign key with reverse foreign key index set to false" time="0.001">
    </testcase>
    <testcase classname="when ForeignKeyReverseIndexEnhancer enhances table with foreign key not matching primary key columns" name="should have foreign key with reverse foreign key index set to true" time="0">
    </testcase>
    <testcase classname="when ForeignKeyReverseIndexEnhancer enhances table with foreign key not matching primary key columns for ODS/API 7" name="should have foreign key with reverse foreign key index set to false" time="0">
    </testcase>
    <testcase classname="when ForeignKeyReverseIndexEnhancer enhances table with multi column foreign key matching primary key columns" name="should have foreign key with reverse foreign key index set to false" time="0">
    </testcase>
    <testcase classname="when ForeignKeyReverseIndexEnhancer enhances table with foreign key subset of primary key columns" name="should have foreign key with reverse foreign key index set to true" time="0">
    </testcase>
    <testcase classname="when ForeignKeyReverseIndexEnhancer enhances table with foreign key superset of primary key columns" name="should have foreign key with reverse foreign key index set to true" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\schema\AddEntityPropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.799" tests="9">
    <testcase classname="when PropertyEnhancer enhances integer property" name="should have ods name" time="0.001">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances integer property" name="should have empty ods context prefix" time="0">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances integer property" name="should have false ods is collection" time="0.001">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances property with required collection" name="should have true ods is collection" time="0.001">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances property with optional collection" name="should have true ods is collection" time="0">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances property role name" name="should have ods name prefixed role name" time="0">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances property role name" name="should have ods context prefix" time="0">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances property with shortened context" name="should have ods name prefixed role name" time="0">
    </testcase>
    <testcase classname="when PropertyEnhancer enhances property with shortened context" name="should have ods context prefix with shortened name" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\EnumerationReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.76" tests="3">
    <testcase classname="when enhancing enumeration property" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when enhancing deprecated enumeration property" name="should have deprecation flag set" time="0.001">
    </testcase>
    <testcase classname="when enhancing enumeration property across namespaces" name="should have no validation failures()" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddAssociationComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.857" tests="9">
    <testcase classname="when enhancing association" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association" name="should have annotation documentation assigned" time="0.006">
    </testcase>
    <testcase classname="when enhancing association" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing association" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing association" name="should not have items" time="0.001">
    </testcase>
    <testcase classname="when enhancing association" name="should create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing association" name="should not create identity type" time="0.001">
    </testcase>
    <testcase classname="when enhancing association" name="should not create lookup type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\AssociationReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.844" tests="5">
    <testcase classname="when enhancing association property referring to association" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when enhancing association property referring to deprecated association" name="should have deprecation flag set" time="0.001">
    </testcase>
    <testcase classname="when enhancing association property referring to subclass" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when enhancing association property referring to deprecated subclass" name="should have deprecation flag set" time="0">
    </testcase>
    <testcase classname="when enhancing association property referring to association across namespaces" name="should have no validation failures()" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\schema\AddDescriptorPropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.836" tests="6">
    <testcase classname="when DescriptorProperty enhances descriptor property" name="should have ods name with descriptor suffix" time="0.001">
    </testcase>
    <testcase classname="when DescriptorProperty enhances descriptor property" name="should have ods descriptorified base name with descriptor suffix" time="0">
    </testcase>
    <testcase classname="when DescriptorProperty enhances descriptor property role name" name="should have ods name with descriptor suffix and context prefix" time="0">
    </testcase>
    <testcase classname="when DescriptorProperty enhances descriptor property role name" name="should have ods descriptorified base name with descriptor suffix" time="0">
    </testcase>
    <testcase classname="when DescriptorProperty enhances descriptor property with descriptor suffix" name="should have ods name with normalized descriptor suffix" time="0">
    </testcase>
    <testcase classname="when DescriptorProperty enhances descriptor property with descriptor suffix" name="should have ods descriptorified base name normalized descriptor suffix" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\SyntaxValidatingBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.876" tests="5">
    <testcase classname="given data standard 3.2 when building EdFi domain entity with is weak property without Alliance mode" name="should not have validation failures" time="0.001">
    </testcase>
    <testcase classname="given data standard 3.2 when building EdFi domain entity with is weak property with Alliance mode" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="given data standard 3.2 when building extension domain entity with is weak property" name="should have validation failures" time="0.001">
    </testcase>
    <testcase classname="given data standard 3.3b when building extension domain entity with is weak property" name="should have one validation error" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with renamed identity property" name="should have validation failures" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ChoicePropertyColumnCreator.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.805" tests="5">
    <testcase classname="when creating columns for choice with is collection property" name="should return no columns" time="0.001">
    </testcase>
    <testcase classname="when creating columns for choice with only one property" name="should return a single column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for choice with two properties" name="should return two columns" time="0.001">
    </testcase>
    <testcase classname="when creating columns for choice with two properties" name="should return a string column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for choice with two properties" name="should return an integer column" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\schema\AddEnumerationPropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.812" tests="6">
    <testcase classname="when EnumerationProperty enhances enumeration property" name="should have ods name with type suffix" time="0.001">
    </testcase>
    <testcase classname="when EnumerationProperty enhances enumeration property" name="should have ods typeified base name with type suffix" time="0.001">
    </testcase>
    <testcase classname="when EnumerationProperty enhances enumeration property role name" name="should have ods name with type suffix and context prefix" time="0.001">
    </testcase>
    <testcase classname="when EnumerationProperty enhances enumeration property role name" name="should have ods typeified base name with type suffix" time="0.001">
    </testcase>
    <testcase classname="when EnumerationProperty enhances enumeration property with type suffix" name="should have ods name with normalized type suffix" time="0">
    </testcase>
    <testcase classname="when EnumerationProperty enhances enumeration property with type suffix" name="should have ods typeified base name normalized type suffix" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\InlineCommonPropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.991" tests="8">
    <testcase classname="when building inline common property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building inline common property table" name="should have one column" time="0.001">
    </testcase>
    <testcase classname="when building inline common property table" name="should have correct property paths" time="0.001">
    </testcase>
    <testcase classname="when building inline common property table" name="should have correct original entities" time="0.001">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should return no join table" time="0.001">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should have one column" time="0">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should have correct property paths" time="0">
    </testcase>
    <testcase classname="when building optional inline common property table" name="should have correct original entities" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ChoicePropertyTableBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.843" tests="2">
    <testcase classname="when building choice property table with two integer properties" name="should return no join table" time="0.002">
    </testcase>
    <testcase classname="when building choice property table with two integer properties" name="should have two columns" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\ChoicePropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.899" tests="5">
    <testcase classname="when creating columns for choice with is collection property" name="should return no columns" time="0.002">
    </testcase>
    <testcase classname="when creating columns for choice with only one property" name="should return a single column" time="0.004">
    </testcase>
    <testcase classname="when creating columns for choice with two properties" name="should return two columns" time="0">
    </testcase>
    <testcase classname="when creating columns for choice with two properties" name="should return a string column" time="0.001">
    </testcase>
    <testcase classname="when creating columns for choice with two properties" name="should return an integer column" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\enhancer\TemplateSpecificTablePropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.856" tests="9">
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with alternate keys" name="should have hasAlternateKeys property set to true" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with alternate keys" name="should have correct alternate key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with primary keys" name="should have un-corrected primary key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with foreign keys" name="should have correct foreign key order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with foreign keys" name="should have correct foreign key column order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with unique indexes" name="should have correct unique index order" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table with primary and non primary keys" name="should have un-corrected column order with primary keys first" time="0.001">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for table" time="0">
    </testcase>
    <testcase classname="when TemplateSpecificTablePropertyEnhancer enhances table and columns with sql escaped description" name="should have correct sql escaped descriptions for columns" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\MergeDirectiveEnhancerHandlingSimpleTypes.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.86" tests="8">
    <testcase classname="when enhancing top level entity with nested reference to top level reference" name="should have correct merge property" time="0.002">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to top level reference" name="should have correct target property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with top level reference to nested reference" name="should have correct merge property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with top level reference to nested reference" name="should have correct target property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to nested reference" name="should have correct merge property" time="0.001">
    </testcase>
    <testcase classname="when enhancing top level entity with nested reference to nested reference" name="should have correct target property" time="0">
    </testcase>
    <testcase classname="when enhancing top level entity with deep nested reference to deep nested reference" name="should have correct merge property" time="0.006">
    </testcase>
    <testcase classname="when enhancing top level entity with deep nested reference to deep nested reference" name="should have correct target property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\SubdomainParentEntityEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.814" tests="1">
    <testcase classname="when enhancing subdomain with parent" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\IntegerReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.839" tests="9">
    <testcase classname="when enhancing integer property" name="should have property with no referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer property" name="should have integer type with no referring properties" time="0.001">
    </testcase>
    <testcase classname="when enhancing shared integer property" name="should have property with correct referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing shared integer property" name="should have integer type with correct referring properties" time="0.001">
    </testcase>
    <testcase classname="when enhancing property referring to deprecated shared integer" name="should have deprecation flag set" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer property across namespaces" name="should have property with no referenced entity" time="0">
    </testcase>
    <testcase classname="when enhancing integer property across namespaces" name="should have integer type with no referring properties" time="0.001">
    </testcase>
    <testcase classname="when enhancing shared integer property across namespaces" name="should have property with correct referenced entity" time="0">
    </testcase>
    <testcase classname="when enhancing shared integer property across namespaces" name="should have integer type with correct referring properties" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-sqlserver\test\enhancer\SqlServerColumnNamingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.906" tests="2">
    <testcase classname="when a table has a string longer than 4000 bytes" name="should keep length for strings 4000 bytes or less numeric" time="0.001">
    </testcase>
    <testcase classname="when a table has a string longer than 4000 bytes" name="should convert strings longer than 4000 bytes to NVARCHAR(MAX)" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\CreateUsisFromUniqueIdsEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.854" tests="12">
    <testcase classname="when enhancing entity with unique id property" name="should remove unique id property" time="0.002">
    </testcase>
    <testcase classname="when enhancing entity with unique id property" name="should add unique id copy as not part of identity" time="0.007">
    </testcase>
    <testcase classname="when enhancing entity with unique id property" name="should add usi property" time="0.002">
    </testcase>
    <testcase classname="when enhancing entity with unique id property and additional identity property" name="should remove unique id property" time="0">
    </testcase>
    <testcase classname="when enhancing entity with unique id property and additional identity property" name="should remove integer identity property" time="0.001">
    </testcase>
    <testcase classname="when enhancing entity with unique id property and additional identity property" name="should add unique id copy as not part of identity" time="0.002">
    </testcase>
    <testcase classname="when enhancing entity with unique id property and additional identity property" name="should add integer identity copy as not part of identity" time="0">
    </testcase>
    <testcase classname="when enhancing entity with unique id property and additional identity property" name="should add usi property" time="0.002">
    </testcase>
    <testcase classname="when enhancing entity with non unique id property" name="should not remove property" time="0">
    </testcase>
    <testcase classname="when enhancing entity with non unique id property" name="should not add additional properties" time="0.001">
    </testcase>
    <testcase classname="when enhancing entity with unique id property in extension namespace" name="should not remove property" time="0.001">
    </testcase>
    <testcase classname="when enhancing entity with unique id property in extension namespace" name="should not add additional properties" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\MergedInterchangeAdditionalPropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.768" tests="4">
    <testcase classname="when MergedInterchangeSchemaLocationEnhancer enhances MergedInterchange with no extension" name="should have xsdName assigned" time="0.003">
    </testcase>
    <testcase classname="when MergedInterchangeSchemaLocationEnhancer enhances MergedInterchange with no extension" name="should have xsdType value assigned" time="0.001">
    </testcase>
    <testcase classname="when MergedInterchangeSchemaLocationEnhancer enhances MergedInterchange with extension" name="should have xsdName assigned" time="0.001">
    </testcase>
    <testcase classname="when MergedInterchangeSchemaLocationEnhancer enhances MergedInterchange with extension" name="should have xsdType value assigned with extension" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\schema\AddReferencePropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.845" tests="4">
    <testcase classname="when ReferenceProperty enhances association property" name="should have false ods delete cascade primary key" time="0.001">
    </testcase>
    <testcase classname="when ReferenceProperty enhances association property" name="should have false ods causes cyclic update cascade" time="0.001">
    </testcase>
    <testcase classname="when ReferenceProperty enhances domain entity property" name="should have false ods delete cascade primary key" time="0.001">
    </testcase>
    <testcase classname="when ReferenceProperty enhances domain entity property" name="should have false ods causes cyclic update cascade" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\StringReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.706" tests="9">
    <testcase classname="when enhancing string property" name="should have property with no referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing string property" name="should have string type with no referring properties" time="0.001">
    </testcase>
    <testcase classname="when enhancing shared string property" name="should have property with correct referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing shared string property" name="should have string type with correct referring properties" time="0">
    </testcase>
    <testcase classname="when enhancing property referring to deprecated shared string" name="should have deprecation flag set" time="0">
    </testcase>
    <testcase classname="when enhancing string property across namespaces" name="should have property with no referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing string property across namespaces" name="should have string type with no referring properties" time="0">
    </testcase>
    <testcase classname="when enhancing shared string property across namespaces" name="should have property with correct referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing shared string property across namespaces" name="should have string type with correct referring properties" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddIntegerSimpleTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.838" tests="32">
    <testcase classname="when enhancing integer type" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer type" name="should have annotation documentation assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer type" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type" name="should have max value assigned" time="0.006">
    </testcase>
    <testcase classname="when enhancing integer type" name="should have min value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for max value" name="should have base type assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for max value" name="should have no max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for max value" name="should have min value assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for max value" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for min value" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for min value" name="should have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for min value" name="should have no min value assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer type with big hint for min value" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type is short" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer type is short" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type is short" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type is short" name="should have base type assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing integer type is short" name="should have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type is short" name="should have min value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing integer type is short" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated integer type with min value only" name="should create simple type" time="0">
    </testcase>
    <testcase classname="when enhancing generated integer type with min value only" name="should not have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated integer type with min value only" name="should have min value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated integer type with max value only" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing generated integer type with max value only" name="should have max value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated integer type with max value only" name="should not have min value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing non-generated integer type with no restrictions" name="should create simple type" time="0">
    </testcase>
    <testcase classname="when enhancing non-generated integer type with no restrictions" name="should not have max value assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing non-generated integer type with no restrictions" name="should not have min value assigned" time="0">
    </testcase>
    <testcase classname="when enhancing generated integer type with no restrictions" name="should create simple type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddDomainEntityExtensionComplexTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:58" time="0.983" tests="28">
    <testcase classname="when enhancing domainEntity extension" name="should create complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension" name="should have annotation documentation assigned" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension" name="should have annotation type group assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension" name="should have base type assigned" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension" name="should have name assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension" name="should not have items" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension" name="should create reference type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension" name="should not create identity type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have annotation documentation assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have annotation type group assigned on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have base type assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have name assigned on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have items on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have annotation documentation assigned on restriction complex type" time="0.002">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should not have annotation type group assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have base type assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have name assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension with common type override" name="should have items on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have annotation documentation assigned on extension complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have annotation type group assigned on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have base type assigned on extension complex type" time="0.003">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have name assigned on extension complex type" time="0.002">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have items on extension complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have annotation documentation assigned on restriction complex type" time="0.002">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should not have annotation type group assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have base type assigned on restriction complex type" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have name assigned on restriction complex type" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity extension of a domain entity subclass with common type override" name="should have items on restriction complex type from both base and subclass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\SharedDecimal\SharedDecimalDecimalPlacesMustNotBeGreaterThanTotalDigits.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.935" tests="4">
    <testcase classname="when validating shared decimal with total digits greater than decimal places" name="should have no validation failures" time="0.003">
    </testcase>
    <testcase classname="when validating shared decimal with same decimal places and total digits" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when validating shared decimal with decimal places greater than total digits" name="should build one shared decimal" time="0">
    </testcase>
    <testcase classname="when validating shared decimal with decimal places greater than total digits" name="should have validation failures" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\DomainEntityInlinePropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.959" tests="2">
    <testcase classname="when enhancing domainEntity with inline string property" name="should add identity properties to domainEntity" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity with inline nested string property" name="should add identity properties to domainEntity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\AddChoicePropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="1.127" tests="9">
    <testcase classname="when enhancing association with choice" name="should add choice properties to association" time="0.001">
    </testcase>
    <testcase classname="when enhancing association with choices nested" name="should add two levels of choice properties to association" time="0.001">
    </testcase>
    <testcase classname="when enhancing common with choice" name="should add choice properties to common" time="0.001">
    </testcase>
    <testcase classname="when enhancing common with choices nested" name="should add two levels of choice properties to common" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with choice" name="should add choice properties to descriptor" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor with choices nested" name="should add two levels of choice properties to descriptor" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity with choice" name="should add choice properties to domainEntity" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity with choice across namespaces" name="should add choice properties to domainEntity" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity with choices nested" name="should add two levels of choice properties to domainEntity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\InterchangeExtensionBaseClassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.855" tests="1">
    <testcase classname="when enhancing interchange extension referring to interchange" name="should have no validation failures()" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\DiscriminatorColumnFlaggingEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.954" tests="3">
    <testcase classname="when DiscriminatorColumnFlaggingEnhancer enhances table with DE parent and aggregate root on 5.1" name="should have hasDiscriminatorColumn set to true" time="0.001">
    </testcase>
    <testcase classname="when DiscriminatorColumnFlaggingEnhancer enhances table with no parent" name="should have hasDiscriminatorColumn set to false" time="0">
    </testcase>
    <testcase classname="when DiscriminatorColumnFlaggingEnhancer enhances non aggregate root table" name="should have hasDiscriminatorColumn set to false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\PropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.952" tests="16">
    <testcase classname="when enhancing core string property" name="should have correct xsdName and xsdType" time="0.003">
    </testcase>
    <testcase classname="when enhancing core integer property" name="should have correct xsdName and xsdType" time="0.001">
    </testcase>
    <testcase classname="when enhancing core integer property with big hint" name="should have correct xsdName and xsdType" time="0">
    </testcase>
    <testcase classname="when enhancing core string property with a &quot;role name&quot;" name="should have correct xsdName and xsdType" time="0">
    </testcase>
    <testcase classname="when enhancing core string property with a &quot;role name&quot; with same name as metaed name" name="should ignore role name on xsdName" time="0">
    </testcase>
    <testcase classname="when enhancing extension string property" name="should have correct xsdName and xsdType" time="0.001">
    </testcase>
    <testcase classname="when enhancing core association property" name="should have correct xsdName and xsdType" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension association property" name="should have correct xsdName and xsdType" time="0.001">
    </testcase>
    <testcase classname="when enhancing extension association property referring to core entity" name="should use parent to determine xsdType" time="0">
    </testcase>
    <testcase classname="when enhancing core descriptor property" name="should have correct xsdName and xsdType" time="0">
    </testcase>
    <testcase classname="when enhancing extension descriptor property" name="should have correct xsdName and xsdType" time="0">
    </testcase>
    <testcase classname="when enhancing extension descriptor property referring to core entity" name="should use parent to determine xsdType" time="0.013">
    </testcase>
    <testcase classname="when enhancing enumeration property" name="should have correct xsdName and xsdType" time="0.001">
    </testcase>
    <testcase classname="when enhancing enumeration property with name ending in &quot;Type&quot;" name="should not add &quot;Type&quot; suffix" time="0">
    </testcase>
    <testcase classname="when enhancing common property" name="should have correct xsdName and xsdType" time="0">
    </testcase>
    <testcase classname="when enhancing extension override common property" name="should have correct xsdName and xsdType" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\schema\AddEnumerationSimpleTypesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="1.17" tests="6">
    <testcase classname="when enhancing enumeration" name="should create simple type" time="0.001">
    </testcase>
    <testcase classname="when enhancing enumeration" name="should have annotation documentation assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing enumeration" name="should have annotation type group assigned" time="0">
    </testcase>
    <testcase classname="when enhancing enumeration" name="should have base type assigned" time="0.001">
    </testcase>
    <testcase classname="when enhancing enumeration" name="should have name assigned" time="0">
    </testcase>
    <testcase classname="when enhancing enumeration" name="should have enumeration tokens" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\ColumnDeprecationEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.859" tests="1">
    <testcase classname="when column source property has deprecation" name="should have correct deprecation status" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\IntegerTypeBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.869" tests="75">
    <testcase classname="when building shared integer in extension namespace" name="should build one integer type" time="0.002">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have type humanized name" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should not have big hint" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should have data" time="0">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should not be a generated type" time="0.001">
    </testcase>
    <testcase classname="when building shared integer in extension namespace" name="should not be a short type" time="0">
    </testcase>
    <testcase classname="when building shared integer with big min value" name="should not have minValue" time="0">
    </testcase>
    <testcase classname="when building shared integer with big min value" name="should not have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building shared integer with big min value" name="should have big hint" time="0">
    </testcase>
    <testcase classname="when building shared integer with big max value" name="should not have minValue" time="0">
    </testcase>
    <testcase classname="when building shared integer with big max value" name="should not have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared integer with big max value" name="should have big hint" time="0">
    </testcase>
    <testcase classname="when building integer property with big min value" name="should not have minValue" time="0.001">
    </testcase>
    <testcase classname="when building integer property with big min value" name="should not have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building integer property with big min value" name="should have big hint" time="0">
    </testcase>
    <testcase classname="when building integer property with big max value" name="should not have minValue" time="0">
    </testcase>
    <testcase classname="when building integer property with big max value" name="should not have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building integer property with big max value" name="should have big hint" time="0">
    </testcase>
    <testcase classname="when building deprecated shared integer" name="should build one integer type" time="0">
    </testcase>
    <testcase classname="when building deprecated shared integer" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared integer" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should build one integer type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have type" time="0">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have type humanized name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have documentation" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should have data" time="0">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should be a generated type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with integer property in extension namespace" name="should not be a short type" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should build one integer type" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have type" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have type humanized name" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have maxValue" time="0.01">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should have data" time="0.001">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should not be a generated type" time="0">
    </testcase>
    <testcase classname="when building shared short in extension namespace" name="should be a short type" time="0">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should build one integer type" time="0">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have type" time="0">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have type humanized name" time="0.002">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should have data" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should be a generated type" time="0">
    </testcase>
    <testcase classname="when building domain entity with short property in extension namespace" name="should be a short type" time="0">
    </testcase>
    <testcase classname="when building multiple shared integers in extension namespace" name="should build two integer types" time="0">
    </testcase>
    <testcase classname="when building multiple shared integers in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building multiple shared integers in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity with multiple integer properties in extension namespace" name="should build two integer types" time="0">
    </testcase>
    <testcase classname="when building domain entity with multiple integer properties in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with multiple integer properties in extension namespace" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\validator\AbstractEntity\AbstractGeneralStudentProgramAssociationMustNotBeExtended.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="1.045" tests="4">
    <testcase classname="when validating association additions" name="should build association and association extension" time="0.004">
    </testcase>
    <testcase classname="when validating association additions" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when validating abstract GeneralStudentProgramAssociation additions" name="should build abstract entity and domain entity extension" time="0.001">
    </testcase>
    <testcase classname="when validating abstract GeneralStudentProgramAssociation additions" name="should have one validation failure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\SharedDecimalBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.908" tests="86">
    <testcase classname="when building shared decimal in extension namespace" name="should build one shared decimal" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have total digits" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have decimal places" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building deprecated shared decimal" name="should build one shared decimal" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared decimal" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated shared decimal" name="should be deprecated" time="0">
    </testcase>
    <testcase classname="when building duplicate shared decimals" name="should build one shared decimal" time="0">
    </testcase>
    <testcase classname="when building duplicate shared decimals" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building duplicate shared decimals" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate shared decimals" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building shared decimal with no shared decimal name" name="should not build shared decimal" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no shared decimal name" name="should have missing id error" time="0.002">
    </testcase>
    <testcase classname="when building shared decimal with lowercase shared decimal name" name="should build no shared decimal" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with lowercase shared decimal name" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should not have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should not have total digits" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should not have decimal places" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should not have minValue" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should not have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no documentation" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should not have total digits" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should have decimal places" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits property" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should have total digits because decimal places token was ignored" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should not have decimal places because it was consumed by total digits" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no total digits value" name="should have extraneous input and mismatched input error" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should have total digits" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should not have decimal places" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no decimal places property" name="should have mismatched input and extraneous input error" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should have namespace" time="0.013">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should have total digits" time="0.004">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should have decimal places" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should have minValue because max value token was ignored" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should not have maxValue because it was consumed by min value" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no min value" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should have total digits" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should have decimal places" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should not have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with no max value" name="should have mismatched input error" time="0">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have total digits" time="0">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have decimal places" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal with invalid trailing text" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have metaEdName" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have totalDigits" time="0">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have decimalPlaces" time="0">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal source map" name="should have line, column, text for each property" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\SharedStringPropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="1.069" tests="2">
    <testcase classname="when shared string property refers to a shared string" name="should have the shared string restrictions" time="0.002">
    </testcase>
    <testcase classname="when shared string property refers to a shared string with empty min/max values" name="should have the shared string restrictions as null" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\DomainEntitySubclassBaseClassEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.907" tests="4">
    <testcase classname="when enhancing domainEntity subclass referring to domainEntity" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass referring to domainEntity subclass" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass referring to domainEntity across namespaces" name="should have correct references" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity subclass referring to domainEntity subclass across namespaces" name="should have correct references" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-xsd\test\enhancer\DescriptorPropertiesEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="1.004" tests="12">
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor" name="should have xsdDescriptorName assigned" time="0.001">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor" name="should have xsdDescriptorNameWithExtension value same as descriptorName" time="0.003">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor" name="should have xsdIsMapType value assigned" time="0.001">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor" name="should have xsdHasPropertiesOrMapType value assigned" time="0.001">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with extension" name="should have xsdDescriptorName assigned" time="0.001">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with extension" name="should have xsdDescriptorNameWithExtension value with extension" time="0">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with required map type" name="should have xsdIsMapType value assigned" time="0">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with required map type" name="should have xsd_hasPropertiesOrMapType value with extension" time="0">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with optional map type" name="should have xsdIsMapType value assigned" time="0">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with optional map type" name="should have xsd_hasPropertiesOrMapType value with extension" time="0">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with items" name="should have xsdIsMapType value assigned" time="0.001">
    </testcase>
    <testcase classname="when DescriptorPropertiesEnhancer enhances descriptor with items" name="should have xsd_hasPropertiesOrMapType value with extension" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\ShortReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:28:59" time="0.997" tests="9">
    <testcase classname="when enhancing short property" name="should have property with no referenced entity" time="0.001">
    </testcase>
    <testcase classname="when enhancing short property" name="should have short type with no referring properties" time="0">
    </testcase>
    <testcase classname="when enhancing shared short property" name="should have property with correct referenced entity" time="0">
    </testcase>
    <testcase classname="when enhancing shared short property" name="should have short type with correct referring properties" time="0.001">
    </testcase>
    <testcase classname="when enhancing property referring to deprecated shared short" name="should have deprecation flag set" time="0">
    </testcase>
    <testcase classname="when enhancing short property across namespaces" name="should have property with no referenced entity" time="0">
    </testcase>
    <testcase classname="when enhancing short property across namespaces" name="should have short type with no referring properties" time="0">
    </testcase>
    <testcase classname="when enhancing shared short property across namespaces" name="should have property with correct referenced entity" time="0">
    </testcase>
    <testcase classname="when enhancing shared short property across namespaces" name="should have short type with correct referring properties" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\property\DescriptorReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.73" tests="3">
    <testcase classname="when enhancing descriptor property" name="should have no validation failures()" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor property referring to deprecated descriptor" name="should have deprecation flag set" time="0.001">
    </testcase>
    <testcase classname="when enhancing descriptor property across namespaces" name="should have no validation failures()" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\pipeline\InitializeNamespaces.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.165" tests="3">
    <testcase classname="when enhancing core namespace only" name="should have no dependencies for core" time="0.002">
    </testcase>
    <testcase classname="when enhancing core and extension namespace" name="should have no dependencies for core" time="0.001">
    </testcase>
    <testcase classname="when enhancing core and extension namespace" name="should have core dependencies for extension" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\schema\AddTopLevelEntityEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.949" tests="6">
    <testcase classname="when enhancing domainEntity with string properties" name="should have ods table name" time="0.002">
    </testcase>
    <testcase classname="when enhancing domainEntity with string properties" name="should have ods cascade primary key updates" time="0.009">
    </testcase>
    <testcase classname="when enhancing domainEntity with string properties" name="should have ods entity table" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity with string properties" name="should have ods tables" time="0.001">
    </testcase>
    <testcase classname="when enhancing domainEntity with string properties" name="should add identity property to ods identity properties" time="0">
    </testcase>
    <testcase classname="when enhancing domainEntity with string properties" name="should add properties to ods properties" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-unified\test\enhancer\SharedDecimalPropertyEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.813" tests="2">
    <testcase classname="when shared decimal property refers to a shared decimal" name="should have the shared decimal restrictions" time="0.002">
    </testcase>
    <testcase classname="when shared decimal property refers to a shared decimal with empty min/max values" name="should have the empty shared decimal restrictions as null" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\grammar\ParseTreeBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.332" tests="12">
    <testcase classname="when parsing top level entities" name="should parse with valid MetaEd" time="0.033">
    </testcase>
    <testcase classname="when parsing top level entities" name="should not parse with extraneous xyz" time="0.008">
    </testcase>
    <testcase classname="when parsing top level entities" name="should not parse with multiple keyword syntax errors" time="0.046">
    </testcase>
    <testcase classname="when parsing top level entities" name="another example" time="0.002">
    </testcase>
    <testcase classname="when parsing top level entities" name="and another example" time="0.004">
    </testcase>
    <testcase classname="when parsing top level entities" name="one more example" time="0.004">
    </testcase>
    <testcase classname="when parsing full MetaEd" name="should parse with valid MetaEd" time="0.018">
    </testcase>
    <testcase classname="when parsing full MetaEd" name="should not parse with extraneous xyz" time="0.002">
    </testcase>
    <testcase classname="when parsing full MetaEd" name="should not parse with multiple keyword syntax errors" time="0.002">
    </testcase>
    <testcase classname="when parsing full MetaEd" name="another example" time="0.001">
    </testcase>
    <testcase classname="when parsing full MetaEd" name="and another example" time="0.002">
    </testcase>
    <testcase classname="when parsing full MetaEd" name="one more example" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\SharedStringBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.629" tests="50">
    <testcase classname="when building shared string in extension namespace" name="should build one shared string" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have min length" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have max length" time="0">
    </testcase>
    <testcase classname="when building deprecated shared string" name="should build one shared string" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared string" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building deprecated shared string" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building duplicate shared strings" name="should build one shared string" time="0">
    </testcase>
    <testcase classname="when building duplicate shared strings" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building duplicate shared strings" name="should have two validation failures" time="0">
    </testcase>
    <testcase classname="when building duplicate shared strings" name="should have validation failures for each entity" time="0.002">
    </testcase>
    <testcase classname="when building shared string with no shared string name" name="should not build shared string" time="0.001">
    </testcase>
    <testcase classname="when building shared string with no shared string name" name="should have missing id error" time="0">
    </testcase>
    <testcase classname="when building shared string with lowercase shared string name" name="should build no shared string" time="0.001">
    </testcase>
    <testcase classname="when building shared string with lowercase shared string name" name="should have extraneous input error" time="0">
    </testcase>
    <testcase classname="when building shared string with no documentation" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared string with no documentation" name="should have project extension" time="0.001">
    </testcase>
    <testcase classname="when building shared string with no documentation" name="should not have documentation" time="0">
    </testcase>
    <testcase classname="when building shared string with no documentation" name="should have no min length" time="0.001">
    </testcase>
    <testcase classname="when building shared string with no documentation" name="should have no max length" time="0">
    </testcase>
    <testcase classname="when building shared string with no documentation" name="should have mismatched input error" time="0.001">
    </testcase>
    <testcase classname="when building shared string with no min length" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared string with no min length" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared string with no min length" name="should have documentation" time="0.007">
    </testcase>
    <testcase classname="when building shared string with no min length" name="should have a min length because max length token was ignored" time="0">
    </testcase>
    <testcase classname="when building shared string with no min length" name="should not have max length" time="0">
    </testcase>
    <testcase classname="when building shared string with no min length" name="should have extraneous input and mismatched input error" time="0">
    </testcase>
    <testcase classname="when building shared string with no max length" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared string with no max length" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared string with no max length" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared string with no max length" name="should have min length" time="0">
    </testcase>
    <testcase classname="when building shared string with no max length" name="should no max length" time="0.001">
    </testcase>
    <testcase classname="when building shared string with no max length" name="should have missing unsigned int error" time="0">
    </testcase>
    <testcase classname="when building shared string with invalid trailing text" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared string with invalid trailing text" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared string with invalid trailing text" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared string with invalid trailing text" name="should have min length" time="0">
    </testcase>
    <testcase classname="when building shared string with invalid trailing text" name="should have max length" time="0">
    </testcase>
    <testcase classname="when building shared string with invalid trailing text" name="should have extraneous input error" time="0.001">
    </testcase>
    <testcase classname="when building shared string source map" name="should have type" time="0">
    </testcase>
    <testcase classname="when building shared string source map" name="should have documentation" time="0.001">
    </testcase>
    <testcase classname="when building shared string source map" name="should have metaEdName" time="0">
    </testcase>
    <testcase classname="when building shared string source map" name="should have minLength" time="0">
    </testcase>
    <testcase classname="when building shared string source map" name="should have maxLength" time="0.001">
    </testcase>
    <testcase classname="when building shared string source map" name="should have line, column, text for each property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\DecimalTypeBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.641" tests="38">
    <testcase classname="when building shared decimal in extension namespace" name="should build one decimal type" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have namespace" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have type" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have type humanized name" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should not be deprecated" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have total digits" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have decimal places" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have minValue" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have maxValue" time="0.001">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should have data" time="0">
    </testcase>
    <testcase classname="when building shared decimal in extension namespace" name="should not be a generated type" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared decimal" name="should build one decimal type" time="0">
    </testcase>
    <testcase classname="when building deprecated shared decimal" name="should have no validation failures" time="0.001">
    </testcase>
    <testcase classname="when building deprecated shared decimal" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should build one decimal type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have type humanized name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have total digits" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have decimal places" time="0">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have minValue" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have maxValue" time="0">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should have data" time="0">
    </testcase>
    <testcase classname="when building domain entity with decimal property in extension namespace" name="should be a generated type" time="0">
    </testcase>
    <testcase classname="when building multiple shared decimals in extension namespace" name="should build two decimal types" time="0">
    </testcase>
    <testcase classname="when building multiple shared decimals in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building multiple shared decimals in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity with multiple decimal properties in extension namespace" name="should build two decimal types" time="0.007">
    </testcase>
    <testcase classname="when building domain entity with multiple decimal properties in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with multiple decimal properties in extension namespace" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\schema\AddDescriptorEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.706" tests="6">
    <testcase classname="when Descriptor enhances descriptor entity" name="should have ods descriptor name with descriptor suffix" time="0.001">
    </testcase>
    <testcase classname="when Descriptor enhances descriptor entity" name="should have false ods is map type" time="0">
    </testcase>
    <testcase classname="when Descriptor enhances descriptor entity with descriptor suffix" name="should have ods descriptor name with normalized suffix" time="0">
    </testcase>
    <testcase classname="when Descriptor enhances descriptor entity with descriptor suffix" name="should have false ods is map type" time="0">
    </testcase>
    <testcase classname="when Descriptor enhances descriptor entity with is map type required" name="should have true ods is map type" time="0.001">
    </testcase>
    <testcase classname="when Descriptor enhances descriptor entity with is amp type optional" name="should have true ods is map type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\EnumerationBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.752" tests="5">
    <testcase classname="when building school year enumeration" name="should build one school year enumeration" time="0.001">
    </testcase>
    <testcase classname="when building school year enumeration" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building school year enumeration" name="should have type" time="0.001">
    </testcase>
    <testcase classname="when building school year enumeration" name="should have source map for type" time="0">
    </testcase>
    <testcase classname="when building school year enumeration" name="should have source map with line, column, text" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\table\InlineCommonPropertyColumnCreatorV7.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.782" tests="5">
    <testcase classname="when creating columns for inline common with is collection property" name="should return no columns" time="0">
    </testcase>
    <testcase classname="when creating columns for inline common with only one property" name="should return a single column" time="0.003">
    </testcase>
    <testcase classname="when creating columns for inline common with two properties" name="should return two columns" time="0">
    </testcase>
    <testcase classname="when creating columns for inline common with two properties" name="should return a string column" time="0.002">
    </testcase>
    <testcase classname="when creating columns for inline common with two properties" name="should return an integer column" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\StringTypeBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.671" tests="34">
    <testcase classname="when building shared string in extension namespace" name="should build one string type" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have type" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have type humanized name" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should not be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have minLength" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have maxLength" time="0.001">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should have data" time="0">
    </testcase>
    <testcase classname="when building shared string in extension namespace" name="should not be a generated type" time="0">
    </testcase>
    <testcase classname="when building deprecated shared string" name="should build one string type" time="0">
    </testcase>
    <testcase classname="when building deprecated shared string" name="should have no validation failures" time="0.007">
    </testcase>
    <testcase classname="when building deprecated shared string" name="should be deprecated" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should build one string type" time="0">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should be found in entity repository" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have namespace" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have project extension" time="0">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have type" time="0">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have type humanized name" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have documentation" time="0">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have minLength" time="0">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have maxLength" time="0.001">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should have data" time="0">
    </testcase>
    <testcase classname="when building domain entity with string property in extension namespace" name="should be a generated type" time="0">
    </testcase>
    <testcase classname="when building multiple shared strings in extension namespace" name="should build two string types" time="0.001">
    </testcase>
    <testcase classname="when building multiple shared strings in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building multiple shared strings in extension namespace" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building domain entity with multiple string properties in extension namespace" name="should build two string types" time="0">
    </testcase>
    <testcase classname="when building domain entity with multiple string properties in extension namespace" name="should be found in entity repository" time="0">
    </testcase>
    <testcase classname="when building domain entity with multiple string properties in extension namespace" name="should have no validation failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-core\test\builder\NamespaceBuilder.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.492" tests="11">
    <testcase classname="when building extension namespace info" name="should build one namespace info" time="0.001">
    </testcase>
    <testcase classname="when building extension namespace info" name="should have no validation failures" time="0">
    </testcase>
    <testcase classname="when building extension namespace info" name="should have correct namespace" time="0">
    </testcase>
    <testcase classname="when building extension namespace info" name="should have correct project extension" time="0">
    </testcase>
    <testcase classname="when building extension namespace info" name="should be an extension" time="0">
    </testcase>
    <testcase classname="when building extension namespace info" name="should have correct extension suffix" time="0">
    </testcase>
    <testcase classname="when building core namespace info" name="should build one namespace info" time="0.001">
    </testcase>
    <testcase classname="when building core namespace info" name="should have correct namespace" time="0">
    </testcase>
    <testcase classname="when building core namespace info" name="should have a blank project extension" time="0">
    </testcase>
    <testcase classname="when building core namespace info" name="should not be an extension" time="0">
    </testcase>
    <testcase classname="when building core namespace info" name="should have correct extension suffix" time="0">
    </testcase>
  </testsuite>
  <testsuite name="packages\metaed-plugin-edfi-ods-relational\test\enhancer\CommonSubclassBaseReferenceEnhancer.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-07-11T22:29:00" time="0.827" tests="2">
    <testcase classname="when enhancing common subclass" name="should not change common ods properties" time="0.001">
    </testcase>
    <testcase classname="when enhancing common subclass" name="should add base common ods properties to common subclass" time="0.001">
    </testcase>
  </testsuite>
</testsuites>