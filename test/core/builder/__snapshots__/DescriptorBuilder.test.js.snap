// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when building descriptor source map should have source map data 1`] = `
DescriptorSourceMap {
  "documentation": Object {
    "column": 4,
    "line": 3,
    "tokenText": "documentation",
  },
  "identityProperties": Array [],
  "isMapTypeOptional": Object {
    "column": 4,
    "line": 9,
    "tokenText": "with optional map type",
  },
  "mapTypeEnumeration": Object {
    "column": 4,
    "line": 9,
    "tokenText": "with optional map type",
  },
  "metaEdId": Object {
    "column": 24,
    "line": 2,
    "tokenText": "[1]",
  },
  "metaEdName": Object {
    "column": 13,
    "line": 2,
    "tokenText": "EntityName",
  },
  "properties": Array [],
  "queryableFields": Array [],
  "type": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Descriptor",
  },
}
`;

exports[`when building descriptor source map with map type required should have source map data 1`] = `
DescriptorSourceMap {
  "documentation": Object {
    "column": 4,
    "line": 3,
    "tokenText": "documentation",
  },
  "identityProperties": Array [],
  "isMapTypeRequired": Object {
    "column": 4,
    "line": 9,
    "tokenText": "with map type",
  },
  "mapTypeEnumeration": Object {
    "column": 4,
    "line": 9,
    "tokenText": "with map type",
  },
  "metaEdId": Object {
    "column": 24,
    "line": 2,
    "tokenText": "[1]",
  },
  "metaEdName": Object {
    "column": 13,
    "line": 2,
    "tokenText": "EntityName",
  },
  "properties": Array [],
  "queryableFields": Array [],
  "type": Object {
    "column": 2,
    "line": 2,
    "tokenText": "Descriptor",
  },
}
`;

exports[`when building descriptor with invalid trailing text should have extraneous input error 1`] = `
Array [
  "extraneous input 'TrailingText' expecting {'Abstract Entity', 'Association', 'End Namespace', 'Choice', 'Common', 'Descriptor', 'Domain', 'Domain Entity', 'Enumeration', 'Interchange', 'Inline Common', 'Shared Decimal', 'Shared Integer', 'Shared Short', 'Shared String', 'Subdomain', 'association', 'bool', 'choice', 'common', 'common extension', 'currency', 'date', 'decimal', 'descriptor', 'domain entity', 'duration', 'enumeration', 'inline common', 'integer', 'percent', 'shared decimal', 'shared integer', 'shared short', 'shared string', 'short', 'string', 'time', 'year', 'is queryable field', 'min value', 'max value', 'with context', 'with optional map type', 'with map type'}, column: 0, line: 9, token: TrailingText",
]
`;

exports[`when building descriptor with lowercase descriptor name should have extraneous input error 1`] = `
Array [
  "extraneous input 'entity' expecting ID, column: 13, line: 2, token: entity",
]
`;

exports[`when building descriptor with no descriptor name should have extraneous input error 1`] = `
Array [
  "missing ID at '[1]', column: 14, line: 2, token: [1]",
]
`;

exports[`when building descriptor with no documentation in map type should have mismatched input error 1`] = `
Array [
  "mismatched input 'item' expecting 'documentation', column: 6, line: 6, token: item",
]
`;

exports[`when building descriptor with no documentation should have mismatched input error 1`] = `
Array [
  "mismatched input 'integer' expecting 'documentation', column: 4, line: 3, token: integer",
]
`;

exports[`when building descriptor with no enumeration item in map type should have mismatched input error 1`] = `
Array [
  "mismatched input 'End Namespace' expecting 'item', column: 0, line: 8, token: End Namespace",
]
`;

exports[`when building duplicate descriptors should have validation failures for each entity -> Descriptor 1 message 1`] = `"Descriptor named EntityName is a duplicate declaration of that name."`;

exports[`when building duplicate descriptors should have validation failures for each entity -> Descriptor 1 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 9,
  "tokenText": "Descriptor",
}
`;

exports[`when building duplicate descriptors should have validation failures for each entity -> Descriptor 2 message 1`] = `"Descriptor named EntityName is a duplicate declaration of that name."`;

exports[`when building duplicate descriptors should have validation failures for each entity -> Descriptor 2 sourceMap 1`] = `
Object {
  "column": 2,
  "line": 2,
  "tokenText": "Descriptor",
}
`;
